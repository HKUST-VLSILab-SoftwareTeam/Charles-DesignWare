#!/bin/tcsh -f

# file: tcshell script for running behavior simulation using vcs (recommend to use ver.2018)
# create: Oct/15/2021 j84200486
# notice: please ma vcs and ma verdi in your terminal before running this script.

# sourceme: set global env parameters
source ../../../script/sourceme.sh

# set environment for including the common Libraries
set SIM_FLIST   = ../th/sim.f

# VCS command explanations: 
# -full64:              compile in 64-bit mode
# -sverilog:            support compiling system verilog
# +vcs+fsdbon:          dump a dump.fsdb file after type run in simv env
# +vcs+dumpvars:        dump the variables into the fsdb file
# -F:                   Specify the filelist containing your design files, -F support relative path, -f only supports abs path
# -j28:                 use 28 cores for compilation (can be changed)
# -kdb:                 enable generating verdi KDB database, it's used to trace signals inside verdi
# -debug_access+all:    enable all the debug features
# -R:                   runs the simv executable immediately after VCS simulation
# -ucli:                enable debug in the ucli (unified command line interface) mode
# -cm:                  enable line, condition, fsm, toggle, branch and assertation coverage analysis
# -lint=all:            print full lint problems, or lint=none
# +vc:                  enables the direct call of C++ functions in the Verilog code
# +v2k:                 enables the use of new Verilog constructs in the 2001 standard
# +vcs+initreg+random:  (function seems have some problem) x-prop (initialize register to be x). It will init both reg and mem
# +vcs+initmem+random:  (function seems have some problem) memory init with random value, will not init reg
# -ntb_opts uvm:        compile the vcs's default uvm env
# timescale:            simulation timescale representation
# -l:                   log's name  
if ($1 == "vcs") then
    vcs -full64                       \
        -F ../th/sim.f                \
        -timescale=1ns/1ps            \
        -debug_access+all             \
        -notice                       \
        -LDFLAGS -Wl,--no-as-needed   \
        -Mupdate                      \
        -j28                          \
        -kdb                          \
        -sverilog                     \
        -ntb_opts uvm-1.1             \
        -o simv                       \
        -l uvm_compile.log            \
        +vcs+flush+all                \
        +warn=noCDNYI,noIPDW,noILLGO,noTMR,noPHNE,noIRIID-W \
        +vcs+fsdbon                   \
        +vcs+dumpvars                 \
        +lint=all                     \
        +incdir+../th+../tc           
else if ($1 == "sim") then
    # judge the tc_name is provided
    if ($#argv != 2) then
        echo "Incorrect number of arguments, requires 2, only $#argv is provided"
        echo "arg1 should be the script command, arg2 should be the tc's name"
        exit 1
    endif
    # get the tc name and perform simulation
    set TC_NAME     = $2  # round_case0 or round_case1
    ./simv harness -l ${TC_NAME}.log +UVM_TESTNAME=${TC_NAME}
    # rename the result
    mv novas.fsdb ${TC_NAME}.fsdb
else if ($1 == "cov") then
    # This command runs the coverage analysis of your code
    vcs -full64 \
    -sverilog \
    -F $SIM_FLIST \
    -j28 \
    -kdb \
    -cm line+cond+fsm+tgl+branch+assert \
    -timescale=1ns/1ps \
    -l vcs_cov.log
else if ($1 == "verdi") then
    # judge the tc_name is provided
    if ($#argv != 2) then
        echo "Incorrect number of arguments, requires 2, only $#argv is provided"
        exit 1
    endif
    # get the tc name and perform simulation
    set TC_NAME     = $2  # round_case0 or round_case1
    # open verdi
    verdi -ssf ${TC_NAME}.fsdb &
else if ($1 == "help") then
    echo "============================="
    echo "Example:"
    echo "csh run vcs"
    echo "csh run sim round_case0"
    echo "csh run verdi round_case0"
    echo "============================="
else
    echo "error: please specify either 'compile', 'run_tc', 'cov' or 'wave' as the input"
endif

