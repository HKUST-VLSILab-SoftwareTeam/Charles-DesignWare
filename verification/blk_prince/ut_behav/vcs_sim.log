Command: vcs -full64 -sverilog +vcs+fsdbon +vcs+dumpvars -F ../th/sim.f -j28 -kdb \
-debug_access+all -R +vc +v2k +lint=all +vcs+initreg+random -timescale=1ns/1ps -l \
vcs_sim.log -o simv
                         Chronologic VCS (TM)
      Version Q-2020.03-SP2-7_Full64 -- Fri Jun  7 01:03:39 2024
               Copyright (c) 1991-2020 by Synopsys Inc.
                         ALL RIGHTS RESERVED

This program is proprietary and confidential information of Synopsys Inc.
and may be used and disclosed only as authorized in a license agreement
controlling such use and disclosure.

Parsing design file '/home/ic/github/Charles-DesignWare/hdl/blk_prince/./prince_round_functions.v'
Parsing design file '/home/ic/github/Charles-DesignWare/hdl/blk_prince/./prince_core.v'
Parsing design file '/home/ic/github/Charles-DesignWare/hdl/blk_prince/./prince.v'
Parsing design file '/home/ic/github/Charles-DesignWare/verification/blk_prince/th/tb_prince.v'

Lint-[NS] Null statement
/home/ic/github/Charles-DesignWare/verification/blk_prince/th/tb_prince.v, 118
  Null statement is used in following verilog source.
  Source info:       #CLK_HALF_PERIOD;


Lint-[NS] Null statement
/home/ic/github/Charles-DesignWare/verification/blk_prince/th/tb_prince.v, 132
  Null statement is used in following verilog source.
  Source info:       #(CLK_PERIOD);


Lint-[NS] Null statement
/home/ic/github/Charles-DesignWare/verification/blk_prince/th/tb_prince.v, 177
  Null statement is used in following verilog source.
  Source info:       #(2 * CLK_PERIOD);


Lint-[NS] Null statement
/home/ic/github/Charles-DesignWare/verification/blk_prince/th/tb_prince.v, 244
  Null statement is used in following verilog source.
  Source info:       #(2 * CLK_PERIOD);


Lint-[NS] Null statement
/home/ic/github/Charles-DesignWare/verification/blk_prince/th/tb_prince.v, 263
  Null statement is used in following verilog source.
  Source info:       #(CLK_PERIOD);

Top Level Modules:
       tb_prince
TimeScale is 1 ns / 1 ps

Lint-[WMIA-L] Width mismatch in assignment
/home/ic/github/Charles-DesignWare/verification/blk_prince/th/tb_prince.v, 176
  Width mismatch between LHS and RHS is found in assignment:
  The following 32-bit wide expression is assigned to a 1-bit LHS target:
  Source info: tb_reset_n = 0;
  Expression: tb_reset_n


Lint-[WMIA-L] Width mismatch in assignment
/home/ic/github/Charles-DesignWare/verification/blk_prince/th/tb_prince.v, 178
  Width mismatch between LHS and RHS is found in assignment:
  The following 32-bit wide expression is assigned to a 1-bit LHS target:
  Source info: tb_reset_n = 1;
  Expression: tb_reset_n


Lint-[WMIA-L] Width mismatch in assignment
/home/ic/github/Charles-DesignWare/verification/blk_prince/th/tb_prince.v, 214
  Width mismatch between LHS and RHS is found in assignment:
  The following 32-bit wide expression is assigned to a 1-bit LHS target:
  Source info: tb_monitor = 0;
  Expression: tb_monitor


Lint-[WMIA-L] Width mismatch in assignment
/home/ic/github/Charles-DesignWare/verification/blk_prince/th/tb_prince.v, 240
  Width mismatch between LHS and RHS is found in assignment:
  The following 12-bit wide expression is assigned to a 8-bit LHS target:
  Source info: tb_address = address;
  Expression: tb_address


Lint-[WMIA-L] Width mismatch in assignment
/home/ic/github/Charles-DesignWare/verification/blk_prince/th/tb_prince.v, 242
  Width mismatch between LHS and RHS is found in assignment:
  The following 32-bit wide expression is assigned to a 1-bit LHS target:
  Source info: tb_cs = 1;
  Expression: tb_cs


Lint-[WMIA-L] Width mismatch in assignment
/home/ic/github/Charles-DesignWare/verification/blk_prince/th/tb_prince.v, 243
  Width mismatch between LHS and RHS is found in assignment:
  The following 32-bit wide expression is assigned to a 1-bit LHS target:
  Source info: tb_we = 1;
  Expression: tb_we


Lint-[WMIA-L] Width mismatch in assignment
/home/ic/github/Charles-DesignWare/verification/blk_prince/th/tb_prince.v, 245
  Width mismatch between LHS and RHS is found in assignment:
  The following 32-bit wide expression is assigned to a 1-bit LHS target:
  Source info: tb_cs = 0;
  Expression: tb_cs


Lint-[WMIA-L] Width mismatch in assignment
/home/ic/github/Charles-DesignWare/verification/blk_prince/th/tb_prince.v, 246
  Width mismatch between LHS and RHS is found in assignment:
  The following 32-bit wide expression is assigned to a 1-bit LHS target:
  Source info: tb_we = 0;
  Expression: tb_we


Lint-[WMIA-L] Width mismatch in assignment
/home/ic/github/Charles-DesignWare/verification/blk_prince/th/tb_prince.v, 260
  Width mismatch between LHS and RHS is found in assignment:
  The following 12-bit wide expression is assigned to a 8-bit LHS target:
  Source info: tb_address = address;
  Expression: tb_address


Lint-[WMIA-L] Width mismatch in assignment
/home/ic/github/Charles-DesignWare/verification/blk_prince/th/tb_prince.v, 261
  Width mismatch between LHS and RHS is found in assignment:
  The following 32-bit wide expression is assigned to a 1-bit LHS target:
  Source info: tb_cs = 1;
  Expression: tb_cs


Lint-[WMIA-L] Width mismatch in assignment
/home/ic/github/Charles-DesignWare/verification/blk_prince/th/tb_prince.v, 262
  Width mismatch between LHS and RHS is found in assignment:
  The following 32-bit wide expression is assigned to a 1-bit LHS target:
  Source info: tb_we = 0;
  Expression: tb_we


Lint-[WMIA-L] Width mismatch in assignment
/home/ic/github/Charles-DesignWare/verification/blk_prince/th/tb_prince.v, 265
  Width mismatch between LHS and RHS is found in assignment:
  The following 32-bit wide expression is assigned to a 1-bit LHS target:
  Source info: tb_cs = 0;
  Expression: tb_cs


Lint-[FIAAS] Function call in always @*
/home/ic/github/Charles-DesignWare/hdl/blk_prince/./prince_core.v, 192
"$unit::round0(core_input, k1_reg)"
  'always @*' is not sensitive to changes within the contents of a function.
  It is only sensitive to changes to the arguments of a function.


Lint-[FIAAS] Function call in always @*
/home/ic/github/Charles-DesignWare/hdl/blk_prince/./prince_core.v, 193
"$unit::round(r0, k1_reg, 4'b1)"
  'always @*' is not sensitive to changes within the contents of a function.
  It is only sensitive to changes to the arguments of a function.


Lint-[FIAAS] Function call in always @*
/home/ic/github/Charles-DesignWare/hdl/blk_prince/./prince_core.v, 194
"$unit::round(r1, k1_reg, 4'b0010)"
  'always @*' is not sensitive to changes within the contents of a function.
  It is only sensitive to changes to the arguments of a function.


Lint-[FIAAS] Function call in always @*
/home/ic/github/Charles-DesignWare/hdl/blk_prince/./prince_core.v, 195
"$unit::round(r2, k1_reg, 4'b0011)"
  'always @*' is not sensitive to changes within the contents of a function.
  It is only sensitive to changes to the arguments of a function.


Lint-[FIAAS] Function call in always @*
/home/ic/github/Charles-DesignWare/hdl/blk_prince/./prince_core.v, 197
"$unit::round(r3_reg, k1_reg, 4'b0100)"
  'always @*' is not sensitive to changes within the contents of a function.
  It is only sensitive to changes to the arguments of a function.


Lint-[FIAAS] Function call in always @*
/home/ic/github/Charles-DesignWare/hdl/blk_prince/./prince_core.v, 198
"$unit::round(r4, k1_reg, 4'b0101)"
  'always @*' is not sensitive to changes within the contents of a function.
  It is only sensitive to changes to the arguments of a function.


Lint-[FIAAS] Function call in always @*
/home/ic/github/Charles-DesignWare/hdl/blk_prince/./prince_core.v, 199
"$unit::middle_round(r5)"
  'always @*' is not sensitive to changes within the contents of a function.
  It is only sensitive to changes to the arguments of a function.


Lint-[FIAAS] Function call in always @*
/home/ic/github/Charles-DesignWare/hdl/blk_prince/./prince_core.v, 201
"$unit::iround(mr_reg, k1_reg, 4'b0110)"
  'always @*' is not sensitive to changes within the contents of a function.
  It is only sensitive to changes to the arguments of a function.


Lint-[FIAAS] Function call in always @*
/home/ic/github/Charles-DesignWare/hdl/blk_prince/./prince_core.v, 202
"$unit::iround(r6, k1_reg, 4'b0111)"
  'always @*' is not sensitive to changes within the contents of a function.
  It is only sensitive to changes to the arguments of a function.


Lint-[FIAAS] Function call in always @*
/home/ic/github/Charles-DesignWare/hdl/blk_prince/./prince_core.v, 203
"$unit::iround(r7, k1_reg, 4'b1000)"
  'always @*' is not sensitive to changes within the contents of a function.
  It is only sensitive to changes to the arguments of a function.


Lint-[FIAAS] Function call in always @*
/home/ic/github/Charles-DesignWare/hdl/blk_prince/./prince_core.v, 205
"$unit::iround(r8_reg, k1_reg, 4'b1001)"
  'always @*' is not sensitive to changes within the contents of a function.
  It is only sensitive to changes to the arguments of a function.


Lint-[FIAAS] Function call in always @*
/home/ic/github/Charles-DesignWare/hdl/blk_prince/./prince_core.v, 206
"$unit::iround(r9, k1_reg, 4'b1010)"
  'always @*' is not sensitive to changes within the contents of a function.
  It is only sensitive to changes to the arguments of a function.


Lint-[FIAAS] Function call in always @*
/home/ic/github/Charles-DesignWare/hdl/blk_prince/./prince_core.v, 207
"$unit::round11(r10, k1_reg)"
  'always @*' is not sensitive to changes within the contents of a function.
  It is only sensitive to changes to the arguments of a function.

Starting vcs inline pass...


Note-[VCS_PARAL] Parallel code-gen enabled
  VCS is running with parallel code generation(-j)...

1 module and 0 UDP read.
recompiling module tb_prince
rm -f _cuarc*.so _csrc*.so pre_vcsobj_*.so share_vcsobj_*.so
if [ -x ../simv ]; then chmod a-x ../simv; fi
g++  -o ../simv      -rdynamic  -Wl,-rpath='$ORIGIN'/simv.daidir -Wl,-rpath=./simv.daidir \
-Wl,-rpath=/opt/synopsys/vcs/Q-2020.03-SP2-7/linux64/lib -L/opt/synopsys/vcs/Q-2020.03-SP2-7/linux64/lib \
-Wl,-rpath-link=./  /usr/lib64/libnuma.so.1   objs/amcQw_d.o   _32305_archive_1.so \
_32333_archive_1.so _32334_archive_1.so _32335_archive_1.so  SIM_l.o      rmapats_mop.o \
rmapats.o rmar.o rmar_nd.o  rmar_llvm_0_1.o rmar_llvm_0_0.o          -lvirsim -lerrorinf \
-lsnpsmalloc -lvfs    -lvcsnew -lsimprofile -luclinative /opt/synopsys/vcs/Q-2020.03-SP2-7/linux64/lib/vcs_tls.o \
-Wl,-whole-archive  -lvcsucli    -Wl,-no-whole-archive        _vcs_pli_stub_.o   \
/opt/synopsys/vcs/Q-2020.03-SP2-7/linux64/lib/vcs_save_restore_new.o /opt/synopsys/verdi/R-2020.12-SP1/share/PLI/VCS/LINUX64/pli.a \
-ldl  -lc -lm -lpthread -ldl 
../simv up to date
Command: /home/ic/github/Charles-DesignWare/verification/blk_prince/ut_behav/./simv +vcs+dumpvars +vc +v2k +lint=all +vcs+initreg+random -a vcs_sim.log
Chronologic VCS simulator copyright 1991-2020
Contains Synopsys proprietary information.
Compiler version Q-2020.03-SP2-7_Full64; Runtime version Q-2020.03-SP2-7_Full64;  Jun  7 01:03 2024
*Verdi* Loading libsscore_vcs202003.so
FSDB Dumper for VCS, Release Verdi_R-2020.12-SP1, Linux x86_64/64bit, 03/02/2021
(C) 1996 - 2021 by Synopsys, Inc.
*Verdi* : Create FSDB file 'novas.fsdb'
*Verdi* : Begin traversing the scopes, layer (0).
*Verdi* : End of traversing.
   -= Testbench for prince started =-
     ==============================

--- Toggle reset.

--- TC01 started.
--- TC01 - encryption started.
--- TC01 - encryption completed.
--- Correct ciphertext received.

--- TC01 - decryption started.
--- TC01 - decryption started.
--- Correct plaintext received.
--- TC01 completed.


--- TC02 started.
--- TC02 - encryption started.
--- TC02 - encryption completed.
--- Correct ciphertext received.

--- TC02 - decryption started.
--- TC02 - decryption started.
--- Correct plaintext received.
--- TC02 completed.


--- TC03 started.
--- TC03 - encryption started.
--- TC03 - encryption completed.
--- Correct ciphertext received.

--- TC03 - decryption started.
--- TC03 - decryption started.
--- Correct plaintext received.
--- TC03 completed.


--- TC04 started.
--- TC04 - encryption started.
--- TC04 - encryption completed.
--- Correct ciphertext received.

--- TC04 - decryption started.
--- TC04 - decryption started.
--- Correct plaintext received.
--- TC04 completed.


--- TC05 started.
--- TC05 - encryption started.
--- TC05 - encryption completed.
--- Correct ciphertext received.

--- TC05 - decryption started.
--- TC05 - decryption started.
--- Correct plaintext received.
--- TC05 completed.


--- TC06 started.
--- TC06 - encryption started.
--- TC06 - encryption completed.
--- Correct ciphertext received.

--- TC06 - decryption started.
--- TC06 - decryption started.
--- Correct plaintext received.
--- TC06 completed.


--- TC07 started.
--- TC07 - encryption started.
--- TC07 - encryption completed.
--- Correct ciphertext received.

--- TC07 - decryption started.
--- TC07 - decryption started.
--- Correct plaintext received.
--- TC07 completed.


--- TC08 started.
--- TC08 - encryption started.
--- TC08 - encryption completed.
--- Correct ciphertext received.

--- TC08 - decryption started.
--- TC08 - decryption started.
--- Correct plaintext received.
--- TC08 completed.


--- TC09 started.
--- TC09 - encryption started.
--- TC09 - encryption completed.
--- Correct ciphertext received.

--- TC09 - decryption started.
--- TC09 - decryption started.
--- Correct plaintext received.
--- TC09 completed.

--- All 09 test cases completed successfully

   -= Testbench for prince completed =-
     ================================
$finish called from file "/home/ic/github/Charles-DesignWare/verification/blk_prince/th/tb_prince.v", line 406.
$finish at simulation time               652000
           V C S   S i m u l a t i o n   R e p o r t 
Time: 652000 ps
CPU Time:      0.200 seconds;       Data structure size:   0.0Mb
Fri Jun  7 01:03:39 2024
CPU time: .293 seconds to compile + .132 seconds to elab + .149 seconds to link + .220 seconds in simulation
Verdi KDB elaboration done and the database successfully generated: 0 error(s), 0 warning(s)
