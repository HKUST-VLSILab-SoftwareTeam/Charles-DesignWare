///////////////////////////////////////////////////////////////////////////
//
// Copyright (c) Verisilicon Microelectronics (SH) Inc. All Rights Reserved.
//
// Created By : Francesco Li
// Date       : 2002/12/04
// Comment    : fastscan model, the scan cells only support mux scan type.
// History    : created by Francesco Li, 2002/12/04
//
////////////////////////////////////////////////////////////////////////////

model LATTSHDMXHT (Q,D, G, E) (
input  (D, G, E) ()
  intern(n0)  (primitive = _dlat I0 (mlc_n1,mlc_n1,G,D,n0,);)
  output(Q)  (primitive = _tsh I1 (n0,E,Q);)
  intern(mlc_n1) (primitive  = _tie0 I2 (mlc_n1);)
  
)
model LATTSHD1XHT (Q,D, G, E) (
input  (D, G, E) ()
  intern(n0)  (primitive = _dlat I0 (mlc_n1,mlc_n1,G,D,n0,);)
  output(Q)  (primitive = _tsh I1 (n0,E,Q);)
   intern(mlc_n1) (primitive  = _tie0 I2 (mlc_n1);)
)
model LATTSHD2XHT (Q,D, G, E) (
input  (D, G, E) ()
  intern(n0)  (primitive = _dlat I0 (mlc_n1,mlc_n1,G,D,n0,);)
  output(Q)  (primitive = _tsh I1 (n0,E,Q);)
   intern(mlc_n1) (primitive  = _tie0 I2 (mlc_n1);)
)
model LATTSHDLXHT (Q,D, G, E) (
input  (D, G, E) ()
  intern(n0)  (primitive = _dlat I0 (mlc_n1,mlc_n1,G,D,n0,);)
  output(Q)  (primitive = _tsh I1 (n0,E,Q);)
   intern(mlc_n1) (primitive  = _tie0 I2 (mlc_n1);)
)
model TIEHHDHT (Z) (
output (Z) ()
  intern(node_in)  (
    primitive = _buf I0 (node_in,Z);
    fault = none;
    primitive = _tie1 I1 (node_in);
  )
)
model TIELHDHT (Z) (
output (Z) ()
  intern(node_in)  (
    primitive = _buf I0 (node_in,Z);
    fault = none;
    primitive = _tie0 I1 (node_in);
  )
)
model HOLDHDHT (Z:nf) (
  inout (Z) (bus_keeper = zhold; primitive = _tiez (Z);)
)
model PULLDHDHT (Z, EN) (
input (EN) ()
output (Z) ()
  intern(node_low, N0) (
    primitive = _inv I0 (EN, N0);
    primitive = _nmos I1 (node_low, N0, Z);
    fault = none;
    primitive = _tie0 I2 (node_low);
  )
)
model PULLUHDHT (Z, E) (
input (E) ()
output (Z) ()
  intern(node_hi, N0) (
    primitive = _inv I0 (E, N0);
    primitive = _pmos I1 (node_hi, N0, Z);
    fault = none;
    primitive = _tie1 I2 (node_hi);
  )
)
model DEL1HDMXHT (Z, A)(
	input  (A) ()
  output (Z) (
    primitive = _buf i0 (A, Z);
  )
)
model DEL1HDMXSPGHT (Z, A)(
	input  (A) ()
  output (Z) (
    primitive = _buf i0 (A, Z);
  )
)
model DEL1HD1XHT (Z, A)(
	input  (A) ()
  output (Z) (
    primitive = _buf i0 (A, Z);
  )
)
model DEL2HDMXHT (Z, A)(
	input  (A) ()
  output (Z) (
    primitive = _buf i0 (A, Z);
  )
)
model DEL2HDMXSPGHT (Z, A)(
	input  (A) ()
  output (Z) (
    primitive = _buf i0 (A, Z);
  )
)
model DEL2HD1XHT (Z, A)(
	input  (A) ()
  output (Z) (
    primitive = _buf i0 (A, Z);
  )
)
model DEL3HDMXHT (Z, A)(
	input  (A) ()
  output (Z) (
    primitive = _buf i0 (A, Z);
  )
)
model DEL3HD1XHT (Z, A)(
	input  (A) ()
  output (Z) (
    primitive = _buf i0 (A, Z);
  )
)
model DEL4HDMXHT (Z, A)(
	input  (A) ()
  output (Z) (
    primitive = _buf i0 (A, Z);
  )
)
model DEL4HDMXSPGHT (Z, A)(
	input  (A) ()
  output (Z) (
    primitive = _buf i0 (A, Z);
  )
)
model DEL4HD1XHT (Z, A)(
	input  (A) ()
  output (Z) (
    primitive = _buf i0 (A, Z);
  )
)
model INVODHD8XHT (Z0, Z1, Z2, Z3, Z4, Z5, Z6, Z7, A)(
	input  (A) ()
	output (Z0, Z1, Z2, Z3, Z4, Z5, Z6, Z7)(
    primitive = _pmos i0 (node_low, A, Z0);
    primitive = _pmos i1 (node_low, A, Z1);
    primitive = _pmos i2 (node_low, A, Z2);
    primitive = _pmos i3 (node_low, A, Z3);
    primitive = _pmos i4 (node_low, A, Z4);
    primitive = _pmos i5 (node_low, A, Z5);
    primitive = _pmos i6 (node_low, A, Z6);
    primitive = _pmos i7 (node_low, A, Z7);
    primitive = _tie0 i8 (node_low);
  )
    intern(node_low) ()
)
model NAND2ODHDHT (Z, A, B)(
	input  (A) ()
	input  (B) ()
	output (Z) ()
  intern (_n1, node_low) (
    primitive = _and i0 (A, B, _n1);
    primitive = _nmos i1 (node_low, _n1, Z);
    primitive = _tie0 i2 (node_low);
  )
)
model NAND3ODHDHT (Z, A, B, C)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	output (Z) ()
  intern (_n1, node_low) (
    primitive = _and i0 (C, A, B, _n1);
    primitive = _nmos i1 (node_low, _n1, Z);
    primitive = _tie0 i2 (node_low);
  )
)
model OR2ODHDHT (Z, A, B)(
	input  (A) ()
	input  (B) ()
	output (Z) ()
  intern (_n1, node_low) (
    primitive = _nor i0 (A, B, _n1);
    primitive = _nmos i1 (node_low, _n1, Z);
    primitive = _tie0 i2 (node_low);
  )
)
model RSLATNHDMXHT (Q, QN, RN, SN) (
  input  (RN, SN)  ()
  intern(     R_int)  (primitive = _inv I1 (RN,     R_int);)
  intern(     S_int)  (primitive = _inv I2 (SN,     S_int);)
  intern(node_low)  (primitive = _tie0 I3 (node_low);)
  output (Q, QN)  (primitive = _dlat I0 (S_int,R_int,node_low,node_low,Q,QN);)
)
model RSLATNHD1XHT (Q, QN, RN, SN) (
  input  (RN, SN)  ()
  intern(     R_int)  (primitive = _inv I1 (RN,     R_int);)
  intern(     S_int)  (primitive = _inv I2 (SN,     S_int);)
  intern(node_low)  (primitive = _tie0 I3 (node_low);)
  output (Q, QN)  (primitive = _dlat I0 (S_int,R_int,node_low,node_low,Q,QN);)
)
model RSLATNHD2XHT (Q, QN, RN, SN) (
  input  (RN, SN)  ()
  intern(     R_int)  (primitive = _inv I1 (RN,     R_int);)
  intern(     S_int)  (primitive = _inv I2 (SN,     S_int);)
  intern(node_low)  (primitive = _tie0 I3 (node_low);)
  output (Q, QN)  (primitive = _dlat I0 (S_int,R_int,node_low,node_low,Q,QN);)
)
model RSLATNHDLXHT (Q, QN, RN, SN) (
  input  (RN, SN)  ()
  intern(     R_int)  (primitive = _inv I1 (RN,     R_int);)
  intern(     S_int)  (primitive = _inv I2 (SN,     S_int);)
  intern(node_low)  (primitive = _tie0 I3 (node_low);)
  output (Q, QN)  (primitive = _dlat I0 (S_int,R_int,node_low,node_low,Q,QN);)
)
model RSLATHDMXHT (Q, QN, R, S) (
  input  (R, S)  ()
  intern(node_low)  (primitive = _tie0 I3 (node_low);)
  output (Q, QN)  (primitive = _dlat I0 (S,R,node_low,node_low,Q,QN);)
)
model RSLATHD1XHT (Q, QN, R, S) (
  input  (R, S)  ()
  intern(node_low)  (primitive = _tie0 I3 (node_low);)
  output (Q, QN)  (primitive = _dlat I0 (S,R,node_low,node_low,Q,QN);)
)
model RSLATHD2XHT (Q, QN, R, S) (
  input  (R, S)  ()
  intern(node_low)  (primitive = _tie0 I3 (node_low);)
  output (Q, QN)  (primitive = _dlat I0 (S,R,node_low,node_low,Q,QN);)
)
model RSLATHDLXHT (Q, QN, R, S) (
  input  (R, S)  ()
  intern(node_low)  (primitive = _tie0 I3 (node_low);)
  output (Q, QN)  (primitive = _dlat I0 (S,R,node_low,node_low,Q,QN);)
)
model AND2CLKHD1XHT (Z, A, B)(
        input  (A) ()
        input  (B) ()
  output (Z) (
    primitive = _and i0 (A, B, Z);
  )
)
model AND2CLKHD2XHT (Z, A, B)(
        input  (A) ()
        input  (B) ()
  output (Z) (
    primitive = _and i0 (A, B, Z);
  )
)
model AND2CLKHD3XHT (Z, A, B)(
        input  (A) ()
        input  (B) ()
  output (Z) (
    primitive = _and i0 (A, B, Z);
  )
)
model AND2CLKHD4XHT (Z, A, B)(
        input  (A) ()
        input  (B) ()
  output (Z) (
    primitive = _and i0 (A, B, Z);
  )
)
model AND2HDMXHT (Z, A, B)(
	input  (A) ()
	input  (B) ()
  output (Z) (
    primitive = _and i0 (A, B, Z);
  )
)
model AND2HDUXHT (Z, A, B)(
        input  (A) ()
        input  (B) ()
  output (Z) (
    primitive = _and i0 (A, B, Z);
  )
)
model AND2HD1XHT (Z, A, B)(
	input  (A) ()
	input  (B) ()
  output (Z) (
    primitive = _and i0 (A, B, Z);
  )
)
model AND2HD1XSPGHT (Z, A, B)(
	input  (A) ()
	input  (B) ()
  output (Z) (
    primitive = _and i0 (A, B, Z);
  )
)
model AND2HD2XHT (Z, A, B)(
	input  (A) ()
	input  (B) ()
  output (Z) (
    primitive = _and i0 (A, B, Z);
  )
)
model AND2HD2XSPGHT (Z, A, B)(
	input  (A) ()
	input  (B) ()
  output (Z) (
    primitive = _and i0 (A, B, Z);
  )
)
model AND2HDLXHT (Z, A, B)(
	input  (A) ()
	input  (B) ()
  output (Z) (
    primitive = _and i0 (A, B, Z);
  )
)
model AND3HDMXHT (Z, A, B, C)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
  output (Z) (
    primitive = _and i0 (C, A, B, Z);
  )
)
model AND3HD1XHT (Z, A, B, C)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
  output (Z) (
    primitive = _and i0 (C, A, B, Z);
  )
)
model AND3HD2XHT (Z, A, B, C)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
  output (Z) (
    primitive = _and i0 (C, A, B, Z);
  )
)
model AND3HDLXHT (Z, A, B, C)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
  output (Z) (
    primitive = _and i0 (C, A, B, Z);
  )
)
model AND4HDMXHT (Z, A, B, C, D)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
  output (Z) (
    primitive = _and i0 (D, C, A, B, Z);
  )
)
model AND4HD1XHT (Z, A, B, C, D)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
  output (Z) (
    primitive = _and i0 (D, C, A, B, Z);
  )
)
model AND4HD2XHT (Z, A, B, C, D)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
  output (Z) (
    primitive = _and i0 (D, C, A, B, Z);
  )
)
model AND4HDLXHT (Z, A, B, C, D)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
  output (Z) (
    primitive = _and i0 (D, C, A, B, Z);
  )
)
model AOI211HDMXHT (Z, A, B, C, D)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
	output (Z) ()
  intern (_n1) (
    primitive = _and i0 (A, B, _n1);
    primitive = _nor i1 (D, _n1, C, Z);
  )
)
model AOI211HD1XHT (Z, A, B, C, D)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
	output (Z) ()
  intern (_n1) (
    primitive = _and i0 (A, B, _n1);
    primitive = _nor i1 (D, _n1, C, Z);
  )
)
model AOI211HD2XHT (Z, A, B, C, D)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
	output (Z) ()
  intern (_n1) (
    primitive = _and i0 (A, B, _n1);
    primitive = _nor i1 (D, _n1, C, Z);
  )
)
model AOI211HDLXHT (Z, A, B, C, D)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
	output (Z) ()
  intern (_n1) (
    primitive = _and i0 (A, B, _n1);
    primitive = _nor i1 (D, _n1, C, Z);
  )
)
model AOI21B2HDMXHT (Z, AN, BN, C)(
	input  (AN) ()
	input  (BN) ()
	input  (C) ()
	output (Z) ()
  intern (_n2, _n3, _n1) (
    primitive = _inv i0 (AN, _n2);
    primitive = _inv i1 (BN, _n3);
    primitive = _and i2 (_n2, _n3, _n1);
    primitive = _nor i3 (_n1, C, Z);
  )
)
model AOI21B2HD1XHT (Z, AN, BN, C)(
	input  (AN) ()
	input  (BN) ()
	input  (C) ()
	output (Z) ()
  intern (_n2, _n3, _n1) (
    primitive = _inv i0 (AN, _n2);
    primitive = _inv i1 (BN, _n3);
    primitive = _and i2 (_n2, _n3, _n1);
    primitive = _nor i3 (_n1, C, Z);
  )
)
model AOI21B2HD2XHT (Z, AN, BN, C)(
	input  (AN) ()
	input  (BN) ()
	input  (C) ()
	output (Z) ()
  intern (_n2, _n3, _n1) (
    primitive = _inv i0 (AN, _n2);
    primitive = _inv i1 (BN, _n3);
    primitive = _and i2 (_n2, _n3, _n1);
    primitive = _nor i3 (_n1, C, Z);
  )
)
model AOI21B2HDLXHT (Z, AN, BN, C)(
	input  (AN) ()
	input  (BN) ()
	input  (C) ()
	output (Z) ()
  intern (_n2, _n3, _n1) (
    primitive = _inv i0 (AN, _n2);
    primitive = _inv i1 (BN, _n3);
    primitive = _and i2 (_n2, _n3, _n1);
    primitive = _nor i3 (_n1, C, Z);
  )
)
model AOI21HDMXHT (Z, A, B, C)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	output (Z) ()
  intern (_n1) (
    primitive = _and i0 (A, B, _n1);
    primitive = _nor i1 (_n1, C, Z);
  )
)
model AOI21HDUXHT (Z, A, B, C)(
        input  (A) ()
        input  (B) ()
        input  (C) ()
        output (Z) ()
  intern (_n1) (
    primitive = _and i0 (A, B, _n1);
    primitive = _nor i1 (_n1, C, Z);
  )
)
model AOI21HD1XHT (Z, A, B, C)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	output (Z) ()
  intern (_n1) (
    primitive = _and i0 (A, B, _n1);
    primitive = _nor i1 (_n1, C, Z);
  )
)
model AOI21HD2XHT (Z, A, B, C)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	output (Z) ()
  intern (_n1) (
    primitive = _and i0 (A, B, _n1);
    primitive = _nor i1 (_n1, C, Z);
  )
)
model AOI21HDLXHT (Z, A, B, C)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	output (Z) ()
  intern (_n1) (
    primitive = _and i0 (A, B, _n1);
    primitive = _nor i1 (_n1, C, Z);
  )
)
model AOI221HDMXHT (Z, A, B, C, D, E)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
	input  (E) ()
	output (Z) ()
  intern (_n1, _n2) (
    primitive = _and i0 (A, B, _n1);
    primitive = _and i1 (C, D, _n2);
    primitive = _nor i2 (E, _n1, _n2, Z);
  )
)
model AOI221HD1XHT (Z, A, B, C, D, E)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
	input  (E) ()
	output (Z) ()
  intern (_n1, _n2) (
    primitive = _and i0 (A, B, _n1);
    primitive = _and i1 (C, D, _n2);
    primitive = _nor i2 (E, _n1, _n2, Z);
  )
)
model AOI221HD2XHT (Z, A, B, C, D, E)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
	input  (E) ()
	output (Z) ()
  intern (_n1, _n2) (
    primitive = _and i0 (A, B, _n1);
    primitive = _and i1 (C, D, _n2);
    primitive = _nor i2 (E, _n1, _n2, Z);
  )
)
model AOI221HDLXHT (Z, A, B, C, D, E)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
	input  (E) ()
	output (Z) ()
  intern (_n1, _n2) (
    primitive = _and i0 (A, B, _n1);
    primitive = _and i1 (C, D, _n2);
    primitive = _nor i2 (E, _n1, _n2, Z);
  )
)
model AOI222HDMXHT (Z, A, B, C, D, E, F)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
	input  (E) ()
	input  (F) ()
	output (Z) ()
  intern (_n1, _n2, _n3) (
    primitive = _and i0 (A, B, _n1);
    primitive = _and i1 (C, D, _n2);
    primitive = _and i2 (E, F, _n3);
    primitive = _nor i3 (_n1, _n2, _n3, Z);
  )
)
model AOI222HD1XHT (Z, A, B, C, D, E, F)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
	input  (E) ()
	input  (F) ()
	output (Z) ()
  intern (_n1, _n2, _n3) (
    primitive = _and i0 (A, B, _n1);
    primitive = _and i1 (C, D, _n2);
    primitive = _and i2 (E, F, _n3);
    primitive = _nor i3 (_n1, _n2, _n3, Z);
  )
)
model AOI222HD2XHT (Z, A, B, C, D, E, F)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
	input  (E) ()
	input  (F) ()
	output (Z) ()
  intern (_n1, _n2, _n3) (
    primitive = _and i0 (A, B, _n1);
    primitive = _and i1 (C, D, _n2);
    primitive = _and i2 (E, F, _n3);
    primitive = _nor i3 (_n1, _n2, _n3, Z);
  )
)
model AOI222HDLXHT (Z, A, B, C, D, E, F)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
	input  (E) ()
	input  (F) ()
	output (Z) ()
  intern (_n1, _n2, _n3) (
    primitive = _and i0 (A, B, _n1);
    primitive = _and i1 (C, D, _n2);
    primitive = _and i2 (E, F, _n3);
    primitive = _nor i3 (_n1, _n2, _n3, Z);
  )
)
model AOI22B2HDMXHT (Z, AN, BN, C, D)(
	input  (AN) ()
	input  (BN) ()
	input  (C) ()
	input  (D) ()
	output (Z) ()
  intern (_n2, _n3, _n1, _n4) (
    primitive = _inv i0 (AN, _n2);
    primitive = _inv i1 (BN, _n3);
    primitive = _and i2 (_n2, _n3, _n1);
    primitive = _and i3 (C, D, _n4);
    primitive = _nor i4 (_n1, _n4, Z);
  )
)
model AOI22B2HD1XHT (Z, AN, BN, C, D)(
	input  (AN) ()
	input  (BN) ()
	input  (C) ()
	input  (D) ()
	output (Z) ()
  intern (_n2, _n3, _n1, _n4) (
    primitive = _inv i0 (AN, _n2);
    primitive = _inv i1 (BN, _n3);
    primitive = _and i2 (_n2, _n3, _n1);
    primitive = _and i3 (C, D, _n4);
    primitive = _nor i4 (_n1, _n4, Z);
  )
)
model AOI22B2HD2XHT (Z, AN, BN, C, D)(
	input  (AN) ()
	input  (BN) ()
	input  (C) ()
	input  (D) ()
	output (Z) ()
  intern (_n2, _n3, _n1, _n4) (
    primitive = _inv i0 (AN, _n2);
    primitive = _inv i1 (BN, _n3);
    primitive = _and i2 (_n2, _n3, _n1);
    primitive = _and i3 (C, D, _n4);
    primitive = _nor i4 (_n1, _n4, Z);
  )
)
model AOI22B2HDLXHT (Z, AN, BN, C, D)(
	input  (AN) ()
	input  (BN) ()
	input  (C) ()
	input  (D) ()
	output (Z) ()
  intern (_n2, _n3, _n1, _n4) (
    primitive = _inv i0 (AN, _n2);
    primitive = _inv i1 (BN, _n3);
    primitive = _and i2 (_n2, _n3, _n1);
    primitive = _and i3 (C, D, _n4);
    primitive = _nor i4 (_n1, _n4, Z);
  )
)
model AOI22HDMXHT (Z, A, B, C, D)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
	output (Z) ()
  intern (_n1, _n2) (
    primitive = _and i0 (A, B, _n1);
    primitive = _and i1 (C, D, _n2);
    primitive = _nor i2 (_n1, _n2, Z);
  )
)
model AOI22HDUXHT (Z, A, B, C, D)(
        input  (A) ()
        input  (B) ()
        input  (C) ()
        input  (D) ()
        output (Z) ()
  intern (_n1, _n2) (
    primitive = _and i0 (A, B, _n1);
    primitive = _and i1 (C, D, _n2);
    primitive = _nor i2 (_n1, _n2, Z);
  )
)
model AOI22HD1XHT (Z, A, B, C, D)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
	output (Z) ()
  intern (_n1, _n2) (
    primitive = _and i0 (A, B, _n1);
    primitive = _and i1 (C, D, _n2);
    primitive = _nor i2 (_n1, _n2, Z);
  )
)
model AOI22HD2XHT (Z, A, B, C, D)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
	output (Z) ()
  intern (_n1, _n2) (
    primitive = _and i0 (A, B, _n1);
    primitive = _and i1 (C, D, _n2);
    primitive = _nor i2 (_n1, _n2, Z);
  )
)
model AOI22HDLXHT (Z, A, B, C, D)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
	output (Z) ()
  intern (_n1, _n2) (
    primitive = _and i0 (A, B, _n1);
    primitive = _and i1 (C, D, _n2);
    primitive = _nor i2 (_n1, _n2, Z);
  )
)
model AOI31HDMXHT (Z, A, B, C, D)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
	output (Z) ()
  intern (_n1) (
    primitive = _and i0 (C, A, B, _n1);
    primitive = _nor i1 (_n1, D, Z);
  )
)
model AOI31HD1XHT (Z, A, B, C, D)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
	output (Z) ()
  intern (_n1) (
    primitive = _and i0 (C, A, B, _n1);
    primitive = _nor i1 (_n1, D, Z);
  )
)
model AOI31HD2XHT (Z, A, B, C, D)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
	output (Z) ()
  intern (_n1) (
    primitive = _and i0 (C, A, B, _n1);
    primitive = _nor i1 (_n1, D, Z);
  )
)
model AOI31HDLXHT (Z, A, B, C, D)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
	output (Z) ()
  intern (_n1) (
    primitive = _and i0 (C, A, B, _n1);
    primitive = _nor i1 (_n1, D, Z);
  )
)
model AOI32HDMXHT (Z, A, B, C, D, E)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
	input  (E) ()
	output (Z) ()
  intern (_n1, _n2) (
    primitive = _and i0 (C, A, B, _n1);
    primitive = _and i1 (D, E, _n2);
    primitive = _nor i2 (_n1, _n2, Z);
  )
)
model AOI32HD1XHT (Z, A, B, C, D, E)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
	input  (E) ()
	output (Z) ()
  intern (_n1, _n2) (
    primitive = _and i0 (C, A, B, _n1);
    primitive = _and i1 (D, E, _n2);
    primitive = _nor i2 (_n1, _n2, Z);
  )
)
model AOI32HD2XHT (Z, A, B, C, D, E)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
	input  (E) ()
	output (Z) ()
  intern (_n1, _n2) (
    primitive = _and i0 (C, A, B, _n1);
    primitive = _and i1 (D, E, _n2);
    primitive = _nor i2 (_n1, _n2, Z);
  )
)
model AOI32HDLXHT (Z, A, B, C, D, E)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
	input  (E) ()
	output (Z) ()
  intern (_n1, _n2) (
    primitive = _and i0 (C, A, B, _n1);
    primitive = _and i1 (D, E, _n2);
    primitive = _nor i2 (_n1, _n2, Z);
  )
)
model AOI33HDMXHT (Z, A, B, C, D, E, F)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
	input  (E) ()
	input  (F) ()
	output (Z) ()
  intern (_n1, _n2) (
    primitive = _and i0 (C, A, B, _n1);
    primitive = _and i1 (F, D, E, _n2);
    primitive = _nor i2 (_n1, _n2, Z);
  )
)
model AOI33HD1XHT (Z, A, B, C, D, E, F)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
	input  (E) ()
	input  (F) ()
	output (Z) ()
  intern (_n1, _n2) (
    primitive = _and i0 (C, A, B, _n1);
    primitive = _and i1 (F, D, E, _n2);
    primitive = _nor i2 (_n1, _n2, Z);
  )
)
model AOI33HD2XHT (Z, A, B, C, D, E, F)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
	input  (E) ()
	input  (F) ()
	output (Z) ()
  intern (_n1, _n2) (
    primitive = _and i0 (C, A, B, _n1);
    primitive = _and i1 (F, D, E, _n2);
    primitive = _nor i2 (_n1, _n2, Z);
  )
)
model AOI33HDLXHT (Z, A, B, C, D, E, F)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
	input  (E) ()
	input  (F) ()
	output (Z) ()
  intern (_n1, _n2) (
    primitive = _and i0 (C, A, B, _n1);
    primitive = _and i1 (F, D, E, _n2);
    primitive = _nor i2 (_n1, _n2, Z);
  )
)
model BUFCLKHD12XHT (Z, A)(
	input  (A) ()
  output (Z) (
    primitive = _buf i0 (A, Z);
  )
)
model BUFCLKHD16XHT (Z, A)(
	input  (A) ()
  output (Z) (
    primitive = _buf i0 (A, Z);
  )
)
model BUFCLKHDMXHT (Z, A)(
	input  (A) ()
  output (Z) (
    primitive = _buf i0 (A, Z);
  )
)
model BUFCLKHDUXHT (Z, A)(
        input  (A) ()
  output (Z) (
    primitive = _buf i0 (A, Z);
  )
)
model BUFCLKHD20XHT (Z, A)(
	input  (A) ()
  output (Z) (
    primitive = _buf i0 (A, Z);
  )
)
model BUFCLKHD1XHT (Z, A)(
	input  (A) ()
  output (Z) (
    primitive = _buf i0 (A, Z);
  )
)
model BUFCLKHD4XHT (Z, A)(
        input  (A) ()
  output (Z) (
    primitive = _buf i0 (A, Z);
  )
)
model BUFCLKHD5XHT (Z, A)(
        input  (A) ()
  output (Z) (
    primitive = _buf i0 (A, Z);
  )
)
model BUFCLKHD6XHT (Z, A)(
        input  (A) ()
  output (Z) (
    primitive = _buf i0 (A, Z);
  )
)
model BUFCLKHD7XHT (Z, A)(
        input  (A) ()
  output (Z) (
    primitive = _buf i0 (A, Z);
  )
)
model BUFCLKHD10XHT (Z, A)(
        input  (A) ()
  output (Z) (
    primitive = _buf i0 (A, Z);
  )
)
model BUFCLKHD14XHT (Z, A)(
        input  (A) ()
  output (Z) (
    primitive = _buf i0 (A, Z);
  )
)
model BUFCLKHD30XHT (Z, A)(
	input  (A) ()
  output (Z) (
    primitive = _buf i0 (A, Z);
  )
)
model BUFCLKHD3XHT (Z, A)(
	input  (A) ()
  output (Z) (
    primitive = _buf i0 (A, Z);
  )
)
model BUFCLKHD40XHT (Z, A)(
	input  (A) ()
  output (Z) (
    primitive = _buf i0 (A, Z);
  )
)
model BUFCLKHD2XHT (Z, A)(
	input  (A) ()
  output (Z) (
    primitive = _buf i0 (A, Z);
  )
)
model BUFCLKHD80XHT (Z, A)(
	input  (A) ()
  output (Z) (
    primitive = _buf i0 (A, Z);
  )
)
model BUFCLKHD8XHT (Z, A)(
	input  (A) ()
  output (Z) (
    primitive = _buf i0 (A, Z);
  )
)
model BUFCLKHDLXHT (Z, A)(
	input  (A) ()
  output (Z) (
    primitive = _buf i0 (A, Z);
  )
)
model BUFHD12XHT (Z, A)(
	input  (A) ()
  output (Z) (
    primitive = _buf i0 (A, Z);
  )
)
model BUFHD16XHT (Z, A)(
	input  (A) ()
  output (Z) (
    primitive = _buf i0 (A, Z);
  )
)
model BUFHDMXHT (Z, A)(
	input  (A) ()
  output (Z) (
    primitive = _buf i0 (A, Z);
  )
)
model BUFHDUXHT (Z, A)(
        input  (A) ()
  output (Z) (
    primitive = _buf i0 (A, Z);
  )
)
model BUFHD20XHT (Z, A)(
	input  (A) ()
  output (Z) (
    primitive = _buf i0 (A, Z);
  )
)
model BUFHD1XHT (Z, A)(
	input  (A) ()
  output (Z) (
    primitive = _buf i0 (A, Z);
  )
)
model BUFHD3XHT (Z, A)(
	input  (A) ()
  output (Z) (
    primitive = _buf i0 (A, Z);
  )
)
model BUFHD4XHT (Z, A)(
        input  (A) ()
  output (Z) (
    primitive = _buf i0 (A, Z);
  )
)
model BUFHD5XHT (Z, A)(
        input  (A) ()
  output (Z) (
    primitive = _buf i0 (A, Z);
  )
)
model BUFHD6XHT (Z, A)(
        input  (A) ()
  output (Z) (
    primitive = _buf i0 (A, Z);
  )
)
model BUFHD7XHT (Z, A)(
        input  (A) ()
  output (Z) (
    primitive = _buf i0 (A, Z);
  )
)
model BUFHD2XHT (Z, A)(
	input  (A) ()
  output (Z) (
    primitive = _buf i0 (A, Z);
  )
)
model BUFHD8XHT (Z, A)(
	input  (A) ()
  output (Z) (
    primitive = _buf i0 (A, Z);
  )
)
model BUFHD8XSPGHT (Z, A)(
	input  (A) ()
  output (Z) (
    primitive = _buf i0 (A, Z);
  )
)
model BUFHDLXHT (Z, A)(
	input  (A) ()
  output (Z) (
    primitive = _buf i0 (A, Z);
  )
)
model BUFTSHD12XHT (Z, A, E)(
	input  (A) ()
	input  (E) ()
  output (Z) (
    primitive = _tsh i0 (A, E, Z);
  )
)
model BUFTSHD4XHT (Z, A, E)(
        input  (A) ()
        input  (E) ()
  output (Z) (
    primitive = _tsh i0 (A, E, Z);
  )
)
model BUFTSHD16XHT (Z, A, E)(
	input  (A) ()
	input  (E) ()
  output (Z) (
    primitive = _tsh i0 (A, E, Z);
  )
)
model BUFTSHDMXHT (Z, A, E)(
	input  (A) ()
	input  (E) ()
  output (Z) (
    primitive = _tsh i0 (A, E, Z);
  )
)
model BUFTSHDUXHT (Z, A, E)(
        input  (A) ()
        input  (E) ()
  output (Z) (
    primitive = _tsh i0 (A, E, Z);
  )
)
model BUFTSHD20XHT (Z, A, E)(
	input  (A) ()
	input  (E) ()
  output (Z) (
    primitive = _tsh i0 (A, E, Z);
  )
)
model BUFTSHD1XHT (Z, A, E)(
	input  (A) ()
	input  (E) ()
  output (Z) (
    primitive = _tsh i0 (A, E, Z);
  )
)
model BUFTSHD3XHT (Z, A, E)(
	input  (A) ()
	input  (E) ()
  output (Z) (
    primitive = _tsh i0 (A, E, Z);
  )
)
model BUFTSHD2XHT (Z, A, E)(
	input  (A) ()
	input  (E) ()
  output (Z) (
    primitive = _tsh i0 (A, E, Z);
  )
)
model BUFTSHD5XHT (Z, A, E)(
        input  (A) ()
        input  (E) ()
  output (Z) (
    primitive = _tsh i0 (A, E, Z);
  )
)
model BUFTSHD6XHT (Z, A, E)(
        input  (A) ()
        input  (E) ()
  output (Z) (
    primitive = _tsh i0 (A, E, Z);
  )
)
model BUFTSHD7XHT (Z, A, E)(
        input  (A) ()
        input  (E) ()
  output (Z) (
    primitive = _tsh i0 (A, E, Z);
  )
)
model BUFTSHD8XHT (Z, A, E)(
	input  (A) ()
	input  (E) ()
  output (Z) (
    primitive = _tsh i0 (A, E, Z);
  )
)
model BUFTSHDLXHT (Z, A, E)(
	input  (A) ()
	input  (E) ()
  output (Z) (
    primitive = _tsh i0 (A, E, Z);
  )
)
model FAHDMXHT (CO, S, A, B, CI)(
	input  (A) ()
	input  (B) ()
	input  (CI) ()
	output (CO) ()
	output (S) ()
  intern (_n2, _n3, _n4) (
    primitive = _xor i0 (CI, A, B, S);
    primitive = _and i1 (A, B, _n2);
    primitive = _and i2 (B, CI, _n3);
    primitive = _and i3 (A, CI, _n4);
    primitive = _or i4 (_n2, _n3, _n4, CO);
  )
)
model FAHDUXHT (CO, S, A, B, CI)(
        input  (A) ()
        input  (B) ()
        input  (CI) ()
        output (CO) ()
        output (S) ()
  intern (_n2, _n3, _n4) (
    primitive = _xor i0 (CI, A, B, S);
    primitive = _and i1 (A, B, _n2);
    primitive = _and i2 (B, CI, _n3);
    primitive = _and i3 (A, CI, _n4);
    primitive = _or i4 (_n2, _n3, _n4, CO);
  )
)
model FAHD1XHT (CO, S, A, B, CI)(
	input  (A) ()
	input  (B) ()
	input  (CI) ()
	output (CO) ()
	output (S) ()
  intern (_n2, _n3, _n4) (
    primitive = _xor i0 (CI, A, B, S);
    primitive = _and i1 (A, B, _n2);
    primitive = _and i2 (B, CI, _n3);
    primitive = _and i3 (A, CI, _n4);
    primitive = _or i4 (_n2, _n3, _n4, CO);
  )
)
model FAHD2XHT (CO, S, A, B, CI)(
	input  (A) ()
	input  (B) ()
	input  (CI) ()
	output (CO) ()
	output (S) ()
  intern (_n2, _n3, _n4) (
    primitive = _xor i0 (CI, A, B, S);
    primitive = _and i1 (A, B, _n2);
    primitive = _and i2 (B, CI, _n3);
    primitive = _and i3 (A, CI, _n4);
    primitive = _or i4 (_n2, _n3, _n4, CO);
  )
)
model FAHDLXHT (CO, S, A, B, CI)(
	input  (A) ()
	input  (B) ()
	input  (CI) ()
	output (CO) ()
	output (S) ()
  intern (_n2, _n3, _n4) (
    primitive = _xor i0 (CI, A, B, S);
    primitive = _and i1 (A, B, _n2);
    primitive = _and i2 (B, CI, _n3);
    primitive = _and i3 (A, CI, _n4);
    primitive = _or i4 (_n2, _n3, _n4, CO);
  )
)
model FAHHDMXHT (CO, S, A, B, CI)(
	input  (A) ()
	input  (B) ()
	input  (CI) ()
	output (CO) ()
	output (S) ()
  intern (_n2, _n3, _n4) (
    primitive = _xor i0 (CI, A, B, S);
    primitive = _and i1 (A, B, _n2);
    primitive = _and i2 (B, CI, _n3);
    primitive = _and i3 (A, CI, _n4);
    primitive = _or i4 (_n2, _n3, _n4, CO);
  )
)
model FAHHD1XHT (CO, S, A, B, CI)(
	input  (A) ()
	input  (B) ()
	input  (CI) ()
	output (CO) ()
	output (S) ()
  intern (_n2, _n3, _n4) (
    primitive = _xor i0 (CI, A, B, S);
    primitive = _and i1 (A, B, _n2);
    primitive = _and i2 (B, CI, _n3);
    primitive = _and i3 (A, CI, _n4);
    primitive = _or i4 (_n2, _n3, _n4, CO);
  )
)
model FAHHD2XHT (CO, S, A, B, CI)(
	input  (A) ()
	input  (B) ()
	input  (CI) ()
	output (CO) ()
	output (S) ()
  intern (_n2, _n3, _n4) (
    primitive = _xor i0 (CI, A, B, S);
    primitive = _and i1 (A, B, _n2);
    primitive = _and i2 (B, CI, _n3);
    primitive = _and i3 (A, CI, _n4);
    primitive = _or i4 (_n2, _n3, _n4, CO);
  )
)
model FAHHDLXHT (CO, S, A, B, CI)(
	input  (A) ()
	input  (B) ()
	input  (CI) ()
	output (CO) ()
	output (S) ()
  intern (_n2, _n3, _n4) (
    primitive = _xor i0 (CI, A, B, S);
    primitive = _and i1 (A, B, _n2);
    primitive = _and i2 (B, CI, _n3);
    primitive = _and i3 (A, CI, _n4);
    primitive = _or i4 (_n2, _n3, _n4, CO);
  )
)
model FFDCRHDMXHT (Q, QN, D, CK, RN) (
  input  (D, CK, RN)  ()
  intern(     D_int)  (primitive = _and I1 ( D, RN,     D_int);)
  output (Q, QN)  (primitive = _dff I0 (,,CK,D_int,Q,QN);)
)
model FFDCRHD1XHT (Q, QN, D, CK, RN) (
  input  (D, CK, RN)  ()
  intern(     D_int)  (primitive = _and I1 ( D, RN,     D_int);)
  output (Q, QN)  (primitive = _dff I0 (,,CK,D_int,Q,QN);)
)
model FFDCRHD2XHT (Q, QN, D, CK, RN) (
  input  (D, CK, RN)  ()
  intern(     D_int)  (primitive = _and I1 ( D, RN,     D_int);)
  output (Q, QN)  (primitive = _dff I0 (,,CK,D_int,Q,QN);)
)
model FFDCRHDLXHT (Q, QN, D, CK, RN) (
  input  (D, CK, RN)  ()
  intern(     D_int)  (primitive = _and I1 ( D, RN,     D_int);)
  output (Q, QN)  (primitive = _dff I0 (,,CK,D_int,Q,QN);)
)
model FFDHDMXHT (Q, QN, D, CK) (
  input  (D, CK)  ()
  output (Q, QN)  (primitive = _dff I0 (,,CK,D,Q,QN);)
)
model FFDHD1XHT (Q, QN, D, CK) (
  input  (D, CK)  ()
  output (Q, QN)  (primitive = _dff I0 (,,CK,D,Q,QN);)
)
model FFDHD1XSPGHT (Q, QN, D, CK) (
  input  (D, CK)  ()
  output (Q, QN)  (primitive = _dff I0 (,,CK,D,Q,QN);)
)
model FFDHD2XHT (Q, QN, D, CK) (
  input  (D, CK)  ()
  output (Q, QN)  (primitive = _dff I0 (,,CK,D,Q,QN);)
)
model FFDHDLXHT (Q, QN, D, CK) (
  input  (D, CK)  ()
  output (Q, QN)  (primitive = _dff I0 (,,CK,D,Q,QN);)
)
model FFDNHDMXHT (Q, QN, D, CKN) (
  input  (D, CKN)  ()
  intern(     CLK_int)  (primitive = _inv I1 (CKN,     CLK_int);)
  output (Q, QN)  (primitive = _dff I0 (,,CLK_int,D,Q,QN);)
)
model FFDNHD1XHT (Q, QN, D, CKN) (
  input  (D, CKN)  ()
  intern(     CLK_int)  (primitive = _inv I1 (CKN,     CLK_int);)
  output (Q, QN)  (primitive = _dff I0 (,,CLK_int,D,Q,QN);)
)
model FFDNHD2XHT (Q, QN, D, CKN) (
  input  (D, CKN)  ()
  intern(     CLK_int)  (primitive = _inv I1 (CKN,     CLK_int);)
  output (Q, QN)  (primitive = _dff I0 (,,CLK_int,D,Q,QN);)
)
model FFDNHDLXHT (Q, QN, D, CKN) (
  input  (D, CKN)  ()
  intern(     CLK_int)  (primitive = _inv I1 (CKN,     CLK_int);)
  output (Q, QN)  (primitive = _dff I0 (,,CLK_int,D,Q,QN);)
)
model FFDNRHDMXHT (Q, QN, D, CKN, RN) (
  input  (D, CKN, RN)  ()
  intern(     CLK_int)  (primitive = _inv I1 (CKN,     CLK_int);)
  intern(     R_int)  (primitive = _inv I2 (RN,     R_int);)
  output (Q, QN)  (primitive = _dff I0 (,R_int,CLK_int,D,Q,QN);)
)
model FFDNRHD1XHT (Q, QN, D, CKN, RN) (
  input  (D, CKN, RN)  ()
  intern(     CLK_int)  (primitive = _inv I1 (CKN,     CLK_int);)
  intern(     R_int)  (primitive = _inv I2 (RN,     R_int);)
  output (Q, QN)  (primitive = _dff I0 (,R_int,CLK_int,D,Q,QN);)
)
model FFDNRHD2XHT (Q, QN, D, CKN, RN) (
  input  (D, CKN, RN)  ()
  intern(     CLK_int)  (primitive = _inv I1 (CKN,     CLK_int);)
  intern(     R_int)  (primitive = _inv I2 (RN,     R_int);)
  output (Q, QN)  (primitive = _dff I0 (,R_int,CLK_int,D,Q,QN);)
)
model FFDNRHDLXHT (Q, QN, D, CKN, RN) (
  input  (D, CKN, RN)  ()
  intern(     CLK_int)  (primitive = _inv I1 (CKN,     CLK_int);)
  intern(     R_int)  (primitive = _inv I2 (RN,     R_int);)
  output (Q, QN)  (primitive = _dff I0 (,R_int,CLK_int,D,Q,QN);)
)
model FFDNSHDMXHT (Q, QN, D, CKN, SN) (
  input  (D, CKN, SN)  ()
  intern(     CLK_int)  (primitive = _inv I1 (CKN,     CLK_int);)
  intern(     S_int)  (primitive = _inv I2 (SN,     S_int);)
  output (Q, QN)  (primitive = _dff I0 (S_int,,CLK_int,D,Q,QN);)
)
model FFDNSHD1XHT (Q, QN, D, CKN, SN) (
  input  (D, CKN, SN)  ()
  intern(     CLK_int)  (primitive = _inv I1 (CKN,     CLK_int);)
  intern(     S_int)  (primitive = _inv I2 (SN,     S_int);)
  output (Q, QN)  (primitive = _dff I0 (S_int,,CLK_int,D,Q,QN);)
)
model FFDNSHD2XHT (Q, QN, D, CKN, SN) (
  input  (D, CKN, SN)  ()
  intern(     CLK_int)  (primitive = _inv I1 (CKN,     CLK_int);)
  intern(     S_int)  (primitive = _inv I2 (SN,     S_int);)
  output (Q, QN)  (primitive = _dff I0 (S_int,,CLK_int,D,Q,QN);)
)
model FFDNSHDLXHT (Q, QN, D, CKN, SN) (
  input  (D, CKN, SN)  ()
  intern(     CLK_int)  (primitive = _inv I1 (CKN,     CLK_int);)
  intern(     S_int)  (primitive = _inv I2 (SN,     S_int);)
  output (Q, QN)  (primitive = _dff I0 (S_int,,CLK_int,D,Q,QN);)
)
model FFDNSRHDMXHT (Q, QN, D, CKN, RN, SN) (
  input  (D, CKN, RN, SN)  ()
  intern(     CLK_int)  (primitive = _inv I1 (CKN,     CLK_int);)
  intern(     R_int)  (primitive = _inv I2 (RN,     R_int);)
  intern(     S_int)  (primitive = _inv I3 (SN,     S_int);)
  output (Q, QN)  (primitive = _dff I0 (S_int,R_int,CLK_int,D,Q,QN);)
)
model FFDNSRHD1XHT (Q, QN, D, CKN, RN, SN) (
  input  (D, CKN, RN, SN)  ()
  intern(     CLK_int)  (primitive = _inv I1 (CKN,     CLK_int);)
  intern(     R_int)  (primitive = _inv I2 (RN,     R_int);)
  intern(     S_int)  (primitive = _inv I3 (SN,     S_int);)
  output (Q, QN)  (primitive = _dff I0 (S_int,R_int,CLK_int,D,Q,QN);)
)
model FFDNSRHD2XHT (Q, QN, D, CKN, RN, SN) (
  input  (D, CKN, RN, SN)  ()
  intern(     CLK_int)  (primitive = _inv I1 (CKN,     CLK_int);)
  intern(     R_int)  (primitive = _inv I2 (RN,     R_int);)
  intern(     S_int)  (primitive = _inv I3 (SN,     S_int);)
  output (Q, QN)  (primitive = _dff I0 (S_int,R_int,CLK_int,D,Q,QN);)
)
model FFDNSRHDLXHT (Q, QN, D, CKN, RN, SN) (
  input  (D, CKN, RN, SN)  ()
  intern(     CLK_int)  (primitive = _inv I1 (CKN,     CLK_int);)
  intern(     R_int)  (primitive = _inv I2 (RN,     R_int);)
  intern(     S_int)  (primitive = _inv I3 (SN,     S_int);)
  output (Q, QN)  (primitive = _dff I0 (S_int,R_int,CLK_int,D,Q,QN);)
)
model FFDQHDMXHT (Q, D, CK) (
  input  (D, CK)  ()
  output (Q)  (primitive = _dff I0 (,,CK,D,Q,);)
)
model FFDQHD1XHT (Q, D, CK) (
  input  (D, CK)  ()
  output (Q)  (primitive = _dff I0 (,,CK,D,Q,);)
)
model FFDQHD2XHT (Q, D, CK) (
  input  (D, CK)  ()
  output (Q)  (primitive = _dff I0 (,,CK,D,Q,);)
)
model FFDQHDLXHT (Q, D, CK) (
  input  (D, CK)  ()
  output (Q)  (primitive = _dff I0 (,,CK,D,Q,);)
)
model FFDQRHDMXHT (Q, D, CK, RN) (
  input  (D, CK, RN)  ()
  intern(     R_int)  (primitive = _inv I1 (RN,     R_int);)
  output (Q)  (primitive = _dff I0 (,R_int,CK,D,Q,);)
)
model FFDQRHD1XHT (Q, D, CK, RN) (
  input  (D, CK, RN)  ()
  intern(     R_int)  (primitive = _inv I1 (RN,     R_int);)
  output (Q)  (primitive = _dff I0 (,R_int,CK,D,Q,);)
)
model FFDQRHD2XHT (Q, D, CK, RN) (
  input  (D, CK, RN)  ()
  intern(     R_int)  (primitive = _inv I1 (RN,     R_int);)
  output (Q)  (primitive = _dff I0 (,R_int,CK,D,Q,);)
)
model FFDQRHDLXHT (Q, D, CK, RN) (
  input  (D, CK, RN)  ()
  intern(     R_int)  (primitive = _inv I1 (RN,     R_int);)
  output (Q)  (primitive = _dff I0 (,R_int,CK,D,Q,);)
)
model FFDQSHDMXHT (Q, D, CK, SN) (
  input  (D, CK, SN)  ()
  intern(     S_int)  (primitive = _inv I1 (SN,     S_int);)
  output (Q)  (primitive = _dff I0 (S_int,,CK,D,Q,);)
)
model FFDQSHD1XHT (Q, D, CK, SN) (
  input  (D, CK, SN)  ()
  intern(     S_int)  (primitive = _inv I1 (SN,     S_int);)
  output (Q)  (primitive = _dff I0 (S_int,,CK,D,Q,);)
)
model FFDQSHD2XHT (Q, D, CK, SN) (
  input  (D, CK, SN)  ()
  intern(     S_int)  (primitive = _inv I1 (SN,     S_int);)
  output (Q)  (primitive = _dff I0 (S_int,,CK,D,Q,);)
)
model FFDQSHDLXHT (Q, D, CK, SN) (
  input  (D, CK, SN)  ()
  intern(     S_int)  (primitive = _inv I1 (SN,     S_int);)
  output (Q)  (primitive = _dff I0 (S_int,,CK,D,Q,);)
)
model FFDQSRHDMXHT (Q, D, CK, RN, SN) (
  input  (D, CK, RN, SN)  ()
  intern(     R_int)  (primitive = _inv I1 (RN,     R_int);)
  intern(     S_int)  (primitive = _inv I2 (SN,     S_int);)
  output (Q)  (primitive = _dff I0 (S_int,R_int,CK,D,Q,);)
)
model FFDQSRHD1XHT (Q, D, CK, RN, SN) (
  input  (D, CK, RN, SN)  ()
  intern(     R_int)  (primitive = _inv I1 (RN,     R_int);)
  intern(     S_int)  (primitive = _inv I2 (SN,     S_int);)
  output (Q)  (primitive = _dff I0 (S_int,R_int,CK,D,Q,);)
)
model FFDQSRHD2XHT (Q, D, CK, RN, SN) (
  input  (D, CK, RN, SN)  ()
  intern(     R_int)  (primitive = _inv I1 (RN,     R_int);)
  intern(     S_int)  (primitive = _inv I2 (SN,     S_int);)
  output (Q)  (primitive = _dff I0 (S_int,R_int,CK,D,Q,);)
)
model FFDQSRHDLXHT (Q, D, CK, RN, SN) (
  input  (D, CK, RN, SN)  ()
  intern(     R_int)  (primitive = _inv I1 (RN,     R_int);)
  intern(     S_int)  (primitive = _inv I2 (SN,     S_int);)
  output (Q)  (primitive = _dff I0 (S_int,R_int,CK,D,Q,);)
)
model FFDRHDMXHT (Q, QN, D, CK, RN) (
  input  (D, CK, RN)  ()
  intern(     R_int)  (primitive = _inv I1 (RN,     R_int);)
  output (Q, QN)  (primitive = _dff I0 (,R_int,CK,D,Q,QN);)
)
model FFDRHD1XHT (Q, QN, D, CK, RN) (
  input  (D, CK, RN)  ()
  intern(     R_int)  (primitive = _inv I1 (RN,     R_int);)
  output (Q, QN)  (primitive = _dff I0 (,R_int,CK,D,Q,QN);)
)
model FFDRHD2XHT (Q, QN, D, CK, RN) (
  input  (D, CK, RN)  ()
  intern(     R_int)  (primitive = _inv I1 (RN,     R_int);)
  output (Q, QN)  (primitive = _dff I0 (,R_int,CK,D,Q,QN);)
)
model FFDRHDLXHT (Q, QN, D, CK, RN) (
  input  (D, CK, RN)  ()
  intern(     R_int)  (primitive = _inv I1 (RN,     R_int);)
  output (Q, QN)  (primitive = _dff I0 (,R_int,CK,D,Q,QN);)
)
model FFDSHDMXHT (Q, QN, D, CK, SN) (
  input  (D, CK, SN)  ()
  intern(     S_int)  (primitive = _inv I1 (SN,     S_int);)
  output (Q, QN)  (primitive = _dff I0 (S_int,,CK,D,Q,QN);)
)
model FFDSHD1XHT (Q, QN, D, CK, SN) (
  input  (D, CK, SN)  ()
  intern(     S_int)  (primitive = _inv I1 (SN,     S_int);)
  output (Q, QN)  (primitive = _dff I0 (S_int,,CK,D,Q,QN);)
)
model FFDSHD2XHT (Q, QN, D, CK, SN) (
  input  (D, CK, SN)  ()
  intern(     S_int)  (primitive = _inv I1 (SN,     S_int);)
  output (Q, QN)  (primitive = _dff I0 (S_int,,CK,D,Q,QN);)
)
model FFDSHDLXHT (Q, QN, D, CK, SN) (
  input  (D, CK, SN)  ()
  intern(     S_int)  (primitive = _inv I1 (SN,     S_int);)
  output (Q, QN)  (primitive = _dff I0 (S_int,,CK,D,Q,QN);)
)
model FFDSRHDMXHT (Q, QN, D, CK, RN, SN) (
  input  (D, CK, RN, SN)  ()
  intern(     R_int)  (primitive = _inv I1 (RN,     R_int);)
  intern(     S_int)  (primitive = _inv I2 (SN,     S_int);)
  output (Q, QN)  (primitive = _dff I0 (S_int,R_int,CK,D,Q,QN);)
)
model FFDSRHD1XHT (Q, QN, D, CK, RN, SN) (
  input  (D, CK, RN, SN)  ()
  intern(     R_int)  (primitive = _inv I1 (RN,     R_int);)
  intern(     S_int)  (primitive = _inv I2 (SN,     S_int);)
  output (Q, QN)  (primitive = _dff I0 (S_int,R_int,CK,D,Q,QN);)
)
model FFDSRHD2XHT (Q, QN, D, CK, RN, SN) (
  input  (D, CK, RN, SN)  ()
  intern(     R_int)  (primitive = _inv I1 (RN,     R_int);)
  intern(     S_int)  (primitive = _inv I2 (SN,     S_int);)
  output (Q, QN)  (primitive = _dff I0 (S_int,R_int,CK,D,Q,QN);)
)
model FFDSRHDLXHT (Q, QN, D, CK, RN, SN) (
  input  (D, CK, RN, SN)  ()
  intern(     R_int)  (primitive = _inv I1 (RN,     R_int);)
  intern(     S_int)  (primitive = _inv I2 (SN,     S_int);)
  output (Q, QN)  (primitive = _dff I0 (S_int,R_int,CK,D,Q,QN);)
)
model FFEDCRHDMXHT (Q, QN, D, CK, E, RN) (
  input  (D, CK, E, RN)  ()
  intern(     D_int)  (primitive = _or I1 (N1,  N2,     D_int);)
  intern( N0)  (primitive = _inv I2 (E, N0);)
  intern( N1)  (primitive = _and I3 (  E, D, RN , N1);)
  intern( N2)  (primitive = _and I4 ( N0, RN, Q, N2);)
  output (Q, QN)  (primitive = _dff I0 (,,CK,D_int,Q,QN);)
)
model FFEDCRHD1XHT (Q, QN, D, CK, E, RN) (
  input  (D, CK, E, RN)  ()
  intern(     D_int)  (primitive = _or I1 (N1,  N2,     D_int);)
  intern( N0)  (primitive = _inv I2 (E, N0);)
  intern( N1)  (primitive = _and I3 (  E, D, RN , N1);)
  intern( N2)  (primitive = _and I4 ( N0, RN, Q, N2);)
  output (Q, QN)  (primitive = _dff I0 (,,CK,D_int,Q,QN);)
)
model FFEDCRHD2XHT (Q, QN, D, CK, E, RN) (
  input  (D, CK, E, RN)  ()
  intern(     D_int)  (primitive = _or I1 (N1,  N2,     D_int);)
  intern( N0)  (primitive = _inv I2 (E, N0);)
  intern( N1)  (primitive = _and I3 (  E, D, RN , N1);)
  intern( N2)  (primitive = _and I4 ( N0, RN, Q, N2);)
  output (Q, QN)  (primitive = _dff I0 (,,CK,D_int,Q,QN);)
)
model FFEDCRHDLXHT (Q, QN, D, CK, E, RN) (
  input  (D, CK, E, RN)  ()
  intern(     D_int)  (primitive = _or I1 (N1,  N2,     D_int);)
  intern( N0)  (primitive = _inv I2 (E, N0);)
  intern( N1)  (primitive = _and I3 (  E, D, RN , N1);)
  intern( N2)  (primitive = _and I4 ( N0, RN, Q, N2);)
  output (Q, QN)  (primitive = _dff I0 (,,CK,D_int,Q,QN);)
)
model FFEDHDMXHT (Q, QN, D, CK, E) (
  input  (D, CK, E)  ()
  intern(     D_int)  (primitive = _or I1 (N1,  N2,     D_int);)
  intern( N0)  (primitive = _inv I2 (E, N0);)
  intern( N1)  (primitive = _and I3 (  E, D , N1);)
  intern( N2)  (primitive = _and I4 ( N0, Q, N2);)
  output (Q, QN)  (primitive = _dff I0 (,,CK,D_int,Q,QN);)
)
model FFEDHD1XHT (Q, QN, D, CK, E) (
  input  (D, CK, E)  ()
  intern(     D_int)  (primitive = _or I1 (N1,  N2,     D_int);)
  intern( N0)  (primitive = _inv I2 (E, N0);)
  intern( N1)  (primitive = _and I3 (  E, D , N1);)
  intern( N2)  (primitive = _and I4 ( N0, Q, N2);)
  output (Q, QN)  (primitive = _dff I0 (,,CK,D_int,Q,QN);)
)
model FFEDHD2XHT (Q, QN, D, CK, E) (
  input  (D, CK, E)  ()
  intern(     D_int)  (primitive = _or I1 (N1,  N2,     D_int);)
  intern( N0)  (primitive = _inv I2 (E, N0);)
  intern( N1)  (primitive = _and I3 (  E, D , N1);)
  intern( N2)  (primitive = _and I4 ( N0, Q, N2);)
  output (Q, QN)  (primitive = _dff I0 (,,CK,D_int,Q,QN);)
)
model FFEDHDLXHT (Q, QN, D, CK, E) (
  input  (D, CK, E)  ()
  intern(     D_int)  (primitive = _or I1 (N1,  N2,     D_int);)
  intern( N0)  (primitive = _inv I2 (E, N0);)
  intern( N1)  (primitive = _and I3 (  E, D , N1);)
  intern( N2)  (primitive = _and I4 ( N0, Q, N2);)
  output (Q, QN)  (primitive = _dff I0 (,,CK,D_int,Q,QN);)
)
model FFEDQHDMXHT (Q, D, CK, E) (
  input  (D, CK, E)  ()
  intern(     D_int)  (primitive = _or I1 (N1,  N2,     D_int);)
  intern( N0)  (primitive = _inv I2 (E, N0);)
  intern( N1)  (primitive = _and I3 (  E, D , N1);)
  intern( N2)  (primitive = _and I4 ( N0, Q, N2);)
  output (Q)  (primitive = _dff I0 (,,CK,D_int,Q,);)
)
model FFEDQHD1XHT (Q, D, CK, E) (
  input  (D, CK, E)  ()
  intern(     D_int)  (primitive = _or I1 (N1,  N2,     D_int);)
  intern( N0)  (primitive = _inv I2 (E, N0);)
  intern( N1)  (primitive = _and I3 (  E, D , N1);)
  intern( N2)  (primitive = _and I4 ( N0, Q, N2);)
  output (Q)  (primitive = _dff I0 (,,CK,D_int,Q,);)
)
model FFEDQHD2XHT (Q, D, CK, E) (
  input  (D, CK, E)  ()
  intern(     D_int)  (primitive = _or I1 (N1,  N2,     D_int);)
  intern( N0)  (primitive = _inv I2 (E, N0);)
  intern( N1)  (primitive = _and I3 (  E, D , N1);)
  intern( N2)  (primitive = _and I4 ( N0, Q, N2);)
  output (Q)  (primitive = _dff I0 (,,CK,D_int,Q,);)
)
model FFEDQHDLXHT (Q, D, CK, E) (
  input  (D, CK, E)  ()
  intern(     D_int)  (primitive = _or I1 (N1,  N2,     D_int);)
  intern( N0)  (primitive = _inv I2 (E, N0);)
  intern( N1)  (primitive = _and I3 (  E, D , N1);)
  intern( N2)  (primitive = _and I4 ( N0, Q, N2);)
  output (Q)  (primitive = _dff I0 (,,CK,D_int,Q,);)
)
model FFSDCRHDMXHT (Q, QN, D, CK, RN, TE, TI) (
  scan_definition (
    type = mux_scan;
    data_in = D;
    scan_in = TI;
    scan_enable = TE;
    scan_out = Q, QN;
    non_scan_model = FFDCRHDMXHT (Q, QN, D, CK, RN);
  )
  input  (D, CK, RN, TE, TI)  ()
  intern(     D_int)  (primitive = _or I1 (N2,  N3,     D_int);)
  intern( N0)  (primitive = _and I2 ( D, RN, N0);)
  intern( N1)  (primitive = _inv I3 (TE, N1);)
  intern( N2)  (primitive = _and I4 (  TE, TI , N2);)
  intern( N3)  (primitive = _and I5 ( N1, N0, N3);)
  output (Q, QN)  (primitive = _dff I0 (,,CK,D_int,Q,QN);)
)
model FFSDCRHD1XHT (Q, QN, D, CK, RN, TE, TI) (
  scan_definition (
    type = mux_scan;
    data_in = D;
    scan_in = TI;
    scan_enable = TE;
    scan_out = Q, QN;
    non_scan_model = FFDCRHD1XHT (Q, QN, D, CK, RN);
  )
  input  (D, CK, RN, TE, TI)  ()
  intern(     D_int)  (primitive = _or I1 (N2,  N3,     D_int);)
  intern( N0)  (primitive = _and I2 ( D, RN, N0);)
  intern( N1)  (primitive = _inv I3 (TE, N1);)
  intern( N2)  (primitive = _and I4 (  TE, TI , N2);)
  intern( N3)  (primitive = _and I5 ( N1, N0, N3);)
  output (Q, QN)  (primitive = _dff I0 (,,CK,D_int,Q,QN);)
)
model FFSDCRHD2XHT (Q, QN, D, CK, RN, TE, TI) (
  scan_definition (
    type = mux_scan;
    data_in = D;
    scan_in = TI;
    scan_enable = TE;
    scan_out = Q, QN;
    non_scan_model = FFDCRHD2XHT (Q, QN, D, CK, RN);
  )
  input  (D, CK, RN, TE, TI)  ()
  intern(     D_int)  (primitive = _or I1 (N2,  N3,     D_int);)
  intern( N0)  (primitive = _and I2 ( D, RN, N0);)
  intern( N1)  (primitive = _inv I3 (TE, N1);)
  intern( N2)  (primitive = _and I4 (  TE, TI , N2);)
  intern( N3)  (primitive = _and I5 ( N1, N0, N3);)
  output (Q, QN)  (primitive = _dff I0 (,,CK,D_int,Q,QN);)
)
model FFSDCRHDLXHT (Q, QN, D, CK, RN, TE, TI) (
  scan_definition (
    type = mux_scan;
    data_in = D;
    scan_in = TI;
    scan_enable = TE;
    scan_out = Q, QN;
    non_scan_model = FFDCRHDLXHT (Q, QN, D, CK, RN);
  )
  input  (D, CK, RN, TE, TI)  ()
  intern(     D_int)  (primitive = _or I1 (N2,  N3,     D_int);)
  intern( N0)  (primitive = _and I2 ( D, RN, N0);)
  intern( N1)  (primitive = _inv I3 (TE, N1);)
  intern( N2)  (primitive = _and I4 (  TE, TI , N2);)
  intern( N3)  (primitive = _and I5 ( N1, N0, N3);)
  output (Q, QN)  (primitive = _dff I0 (,,CK,D_int,Q,QN);)
)
model FFSDHDMXHT (Q, QN, D, CK, TE, TI) (
  scan_definition (
    type = mux_scan;
    data_in = D;
    scan_in = TI;
    scan_enable = TE;
    scan_out = Q, QN;
    non_scan_model = FFDHDMXHT (Q, QN, D, CK);
  )
  input  (D, CK, TE, TI)  ()
  intern(     D_int)  (primitive = _or I1 (N1,  N2,     D_int);)
  intern( N0)  (primitive = _inv I2 (TE, N0);)
  intern( N1)  (primitive = _and I3 (  TE, TI , N1);)
  intern( N2)  (primitive = _and I4 ( N0, D, N2);)
  output (Q, QN)  (primitive = _dff I0 (,,CK,D_int,Q,QN);)
)
model FFSDHD1XHT (Q, QN, D, CK, TE, TI) (
  scan_definition (
    type = mux_scan;
    data_in = D;
    scan_in = TI;
    scan_enable = TE;
    scan_out = Q, QN;
    non_scan_model = FFDHD1XHT (Q, QN, D, CK);
  )
  input  (D, CK, TE, TI)  ()
  intern(     D_int)  (primitive = _or I1 (N1,  N2,     D_int);)
  intern( N0)  (primitive = _inv I2 (TE, N0);)
  intern( N1)  (primitive = _and I3 (  TE, TI , N1);)
  intern( N2)  (primitive = _and I4 ( N0, D, N2);)
  output (Q, QN)  (primitive = _dff I0 (,,CK,D_int,Q,QN);)
)
model FFSDHD1XSPGHT (Q, QN, D, CK, TE, TI) (
  scan_definition (
    type = mux_scan;
    data_in = D;
    scan_in = TI;
    scan_enable = TE;
    scan_out = Q, QN;
    non_scan_model = FFDHD1XSPGHT (Q, QN, D, CK);
  )
  input  (D, CK, TE, TI)  ()
  intern(     D_int)  (primitive = _or I1 (N1,  N2,     D_int);)
  intern( N0)  (primitive = _inv I2 (TE, N0);)
  intern( N1)  (primitive = _and I3 (  TE, TI , N1);)
  intern( N2)  (primitive = _and I4 ( N0, D, N2);)
  output (Q, QN)  (primitive = _dff I0 (,,CK,D_int,Q,QN);)
)
model FFSDHD2XHT (Q, QN, D, CK, TE, TI) (
  scan_definition (
    type = mux_scan;
    data_in = D;
    scan_in = TI;
    scan_enable = TE;
    scan_out = Q, QN;
    non_scan_model = FFDHD2XHT (Q, QN, D, CK);
  )
  input  (D, CK, TE, TI)  ()
  intern(     D_int)  (primitive = _or I1 (N1,  N2,     D_int);)
  intern( N0)  (primitive = _inv I2 (TE, N0);)
  intern( N1)  (primitive = _and I3 (  TE, TI , N1);)
  intern( N2)  (primitive = _and I4 ( N0, D, N2);)
  output (Q, QN)  (primitive = _dff I0 (,,CK,D_int,Q,QN);)
)
model FFSDHDLXHT (Q, QN, D, CK, TE, TI) (
  scan_definition (
    type = mux_scan;
    data_in = D;
    scan_in = TI;
    scan_enable = TE;
    scan_out = Q, QN;
    non_scan_model = FFDHDLXHT (Q, QN, D, CK);
  )
  input  (D, CK, TE, TI)  ()
  intern(     D_int)  (primitive = _or I1 (N1,  N2,     D_int);)
  intern( N0)  (primitive = _inv I2 (TE, N0);)
  intern( N1)  (primitive = _and I3 (  TE, TI , N1);)
  intern( N2)  (primitive = _and I4 ( N0, D, N2);)
  output (Q, QN)  (primitive = _dff I0 (,,CK,D_int,Q,QN);)
)
model FFSDNHDMXHT (Q, QN, D, CKN, TE, TI) (
  scan_definition (
    type = mux_scan;
    data_in = D;
    scan_in = TI;
    scan_enable = TE;
    scan_out = Q, QN;
    non_scan_model = FFDNHDMXHT (Q, QN, D, CKN);
  )
  input  (D, CKN, TE, TI)  ()
  intern(     CLK_int)  (primitive = _inv I1 (CKN,     CLK_int);)
  intern(     D_int)  (primitive = _or I2 (N1,  N2,     D_int);)
  intern( N0)  (primitive = _inv I3 (TE, N0);)
  intern( N1)  (primitive = _and I4 (  TE, TI , N1);)
  intern( N2)  (primitive = _and I5 ( N0, D, N2);)
  output (Q, QN)  (primitive = _dff I0 (,,CLK_int,D_int,Q,QN);)
)
model FFSDNHD1XHT (Q, QN, D, CKN, TE, TI) (
  scan_definition (
    type = mux_scan;
    data_in = D;
    scan_in = TI;
    scan_enable = TE;
    scan_out = Q, QN;
    non_scan_model = FFDNHD1XHT (Q, QN, D, CKN);
  )
  input  (D, CKN, TE, TI)  ()
  intern(     CLK_int)  (primitive = _inv I1 (CKN,     CLK_int);)
  intern(     D_int)  (primitive = _or I2 (N1,  N2,     D_int);)
  intern( N0)  (primitive = _inv I3 (TE, N0);)
  intern( N1)  (primitive = _and I4 (  TE, TI , N1);)
  intern( N2)  (primitive = _and I5 ( N0, D, N2);)
  output (Q, QN)  (primitive = _dff I0 (,,CLK_int,D_int,Q,QN);)
)
model FFSDNHD2XHT (Q, QN, D, CKN, TE, TI) (
  scan_definition (
    type = mux_scan;
    data_in = D;
    scan_in = TI;
    scan_enable = TE;
    scan_out = Q, QN;
    non_scan_model = FFDNHD2XHT (Q, QN, D, CKN);
  )
  input  (D, CKN, TE, TI)  ()
  intern(     CLK_int)  (primitive = _inv I1 (CKN,     CLK_int);)
  intern(     D_int)  (primitive = _or I2 (N1,  N2,     D_int);)
  intern( N0)  (primitive = _inv I3 (TE, N0);)
  intern( N1)  (primitive = _and I4 (  TE, TI , N1);)
  intern( N2)  (primitive = _and I5 ( N0, D, N2);)
  output (Q, QN)  (primitive = _dff I0 (,,CLK_int,D_int,Q,QN);)
)
model FFSDNHDLXHT (Q, QN, D, CKN, TE, TI) (
  scan_definition (
    type = mux_scan;
    data_in = D;
    scan_in = TI;
    scan_enable = TE;
    scan_out = Q, QN;
    non_scan_model = FFDNHDLXHT (Q, QN, D, CKN);
  )
  input  (D, CKN, TE, TI)  ()
  intern(     CLK_int)  (primitive = _inv I1 (CKN,     CLK_int);)
  intern(     D_int)  (primitive = _or I2 (N1,  N2,     D_int);)
  intern( N0)  (primitive = _inv I3 (TE, N0);)
  intern( N1)  (primitive = _and I4 (  TE, TI , N1);)
  intern( N2)  (primitive = _and I5 ( N0, D, N2);)
  output (Q, QN)  (primitive = _dff I0 (,,CLK_int,D_int,Q,QN);)
)
model FFSDNRHDMXHT (Q, QN, D, CKN, RN, TE, TI) (
  scan_definition (
    type = mux_scan;
    data_in = D;
    scan_in = TI;
    scan_enable = TE;
    scan_out = Q, QN;
    non_scan_model = FFDNRHDMXHT (Q, QN, D, CKN, RN);
  )
  input  (D, CKN, RN, TE, TI)  ()
  intern(     CLK_int)  (primitive = _inv I1 (CKN,     CLK_int);)
  intern(     D_int)  (primitive = _or I2 (N1,  N2,     D_int);)
  intern(     R_int)  (primitive = _inv I3 (RN,     R_int);)
  intern( N0)  (primitive = _inv I4 (TE, N0);)
  intern( N1)  (primitive = _and I5 (  TE, TI , N1);)
  intern( N2)  (primitive = _and I6 ( N0, D, N2);)
  output (Q, QN)  (primitive = _dff I0 (,R_int,CLK_int,D_int,Q,QN);)
)
model FFSDNRHD1XHT (Q, QN, D, CKN, RN, TE, TI) (
  scan_definition (
    type = mux_scan;
    data_in = D;
    scan_in = TI;
    scan_enable = TE;
    scan_out = Q, QN;
    non_scan_model = FFDNRHD1XHT (Q, QN, D, CKN, RN);
  )
  input  (D, CKN, RN, TE, TI)  ()
  intern(     CLK_int)  (primitive = _inv I1 (CKN,     CLK_int);)
  intern(     D_int)  (primitive = _or I2 (N1,  N2,     D_int);)
  intern(     R_int)  (primitive = _inv I3 (RN,     R_int);)
  intern( N0)  (primitive = _inv I4 (TE, N0);)
  intern( N1)  (primitive = _and I5 (  TE, TI , N1);)
  intern( N2)  (primitive = _and I6 ( N0, D, N2);)
  output (Q, QN)  (primitive = _dff I0 (,R_int,CLK_int,D_int,Q,QN);)
)
model FFSDNRHD2XHT (Q, QN, D, CKN, RN, TE, TI) (
  scan_definition (
    type = mux_scan;
    data_in = D;
    scan_in = TI;
    scan_enable = TE;
    scan_out = Q, QN;
    non_scan_model = FFDNRHD2XHT (Q, QN, D, CKN, RN);
  )
  input  (D, CKN, RN, TE, TI)  ()
  intern(     CLK_int)  (primitive = _inv I1 (CKN,     CLK_int);)
  intern(     D_int)  (primitive = _or I2 (N1,  N2,     D_int);)
  intern(     R_int)  (primitive = _inv I3 (RN,     R_int);)
  intern( N0)  (primitive = _inv I4 (TE, N0);)
  intern( N1)  (primitive = _and I5 (  TE, TI , N1);)
  intern( N2)  (primitive = _and I6 ( N0, D, N2);)
  output (Q, QN)  (primitive = _dff I0 (,R_int,CLK_int,D_int,Q,QN);)
)
model FFSDNRHDLXHT (Q, QN, D, CKN, RN, TE, TI) (
  scan_definition (
    type = mux_scan;
    data_in = D;
    scan_in = TI;
    scan_enable = TE;
    scan_out = Q, QN;
    non_scan_model = FFDNRHDLXHT (Q, QN, D, CKN, RN);
  )
  input  (D, CKN, RN, TE, TI)  ()
  intern(     CLK_int)  (primitive = _inv I1 (CKN,     CLK_int);)
  intern(     D_int)  (primitive = _or I2 (N1,  N2,     D_int);)
  intern(     R_int)  (primitive = _inv I3 (RN,     R_int);)
  intern( N0)  (primitive = _inv I4 (TE, N0);)
  intern( N1)  (primitive = _and I5 (  TE, TI , N1);)
  intern( N2)  (primitive = _and I6 ( N0, D, N2);)
  output (Q, QN)  (primitive = _dff I0 (,R_int,CLK_int,D_int,Q,QN);)
)
model FFSDNSHDMXHT (Q, QN, D, CKN, SN, TE, TI) (
  scan_definition (
    type = mux_scan;
    data_in = D;
    scan_in = TI;
    scan_enable = TE;
    scan_out = Q, QN;
    non_scan_model = FFDNSHDMXHT (Q, QN, D, CKN, SN);
  )
  input  (D, CKN, SN, TE, TI)  ()
  intern(     CLK_int)  (primitive = _inv I1 (CKN,     CLK_int);)
  intern(     D_int)  (primitive = _or I2 (N1,  N2,     D_int);)
  intern(     S_int)  (primitive = _inv I3 (SN,     S_int);)
  intern( N0)  (primitive = _inv I4 (TE, N0);)
  intern( N1)  (primitive = _and I5 (  TE, TI , N1);)
  intern( N2)  (primitive = _and I6 ( N0, D, N2);)
  output (Q, QN)  (primitive = _dff I0 (S_int,,CLK_int,D_int,Q,QN);)
)
model FFSDNSHD1XHT (Q, QN, D, CKN, SN, TE, TI) (
  scan_definition (
    type = mux_scan;
    data_in = D;
    scan_in = TI;
    scan_enable = TE;
    scan_out = Q, QN;
    non_scan_model = FFDNSHD1XHT (Q, QN, D, CKN, SN);
  )
  input  (D, CKN, SN, TE, TI)  ()
  intern(     CLK_int)  (primitive = _inv I1 (CKN,     CLK_int);)
  intern(     D_int)  (primitive = _or I2 (N1,  N2,     D_int);)
  intern(     S_int)  (primitive = _inv I3 (SN,     S_int);)
  intern( N0)  (primitive = _inv I4 (TE, N0);)
  intern( N1)  (primitive = _and I5 (  TE, TI , N1);)
  intern( N2)  (primitive = _and I6 ( N0, D, N2);)
  output (Q, QN)  (primitive = _dff I0 (S_int,,CLK_int,D_int,Q,QN);)
)
model FFSDNSHD2XHT (Q, QN, D, CKN, SN, TE, TI) (
  scan_definition (
    type = mux_scan;
    data_in = D;
    scan_in = TI;
    scan_enable = TE;
    scan_out = Q, QN;
    non_scan_model = FFDNSHD2XHT (Q, QN, D, CKN, SN);
  )
  input  (D, CKN, SN, TE, TI)  ()
  intern(     CLK_int)  (primitive = _inv I1 (CKN,     CLK_int);)
  intern(     D_int)  (primitive = _or I2 (N1,  N2,     D_int);)
  intern(     S_int)  (primitive = _inv I3 (SN,     S_int);)
  intern( N0)  (primitive = _inv I4 (TE, N0);)
  intern( N1)  (primitive = _and I5 (  TE, TI , N1);)
  intern( N2)  (primitive = _and I6 ( N0, D, N2);)
  output (Q, QN)  (primitive = _dff I0 (S_int,,CLK_int,D_int,Q,QN);)
)
model FFSDNSHDLXHT (Q, QN, D, CKN, SN, TE, TI) (
  scan_definition (
    type = mux_scan;
    data_in = D;
    scan_in = TI;
    scan_enable = TE;
    scan_out = Q, QN;
    non_scan_model = FFDNSHDLXHT (Q, QN, D, CKN, SN);
  )
  input  (D, CKN, SN, TE, TI)  ()
  intern(     CLK_int)  (primitive = _inv I1 (CKN,     CLK_int);)
  intern(     D_int)  (primitive = _or I2 (N1,  N2,     D_int);)
  intern(     S_int)  (primitive = _inv I3 (SN,     S_int);)
  intern( N0)  (primitive = _inv I4 (TE, N0);)
  intern( N1)  (primitive = _and I5 (  TE, TI , N1);)
  intern( N2)  (primitive = _and I6 ( N0, D, N2);)
  output (Q, QN)  (primitive = _dff I0 (S_int,,CLK_int,D_int,Q,QN);)
)
model FFSDNSRHDMXHT (Q, QN, D, CKN, RN, SN, TE, TI) (
  scan_definition (
    type = mux_scan;
    data_in = D;
    scan_in = TI;
    scan_enable = TE;
    scan_out = Q, QN;
    non_scan_model = FFDNSRHDMXHT (Q, QN, D, CKN, RN, SN);
  )
  input  (D, CKN, RN, SN, TE, TI)  ()
  intern(     CLK_int)  (primitive = _inv I1 (CKN,     CLK_int);)
  intern(     D_int)  (primitive = _or I2 (N1,  N2,     D_int);)
  intern(     R_int)  (primitive = _inv I3 (RN,     R_int);)
  intern(     S_int)  (primitive = _inv I4 (SN,     S_int);)
  intern( N0)  (primitive = _inv I5 (TE, N0);)
  intern( N1)  (primitive = _and I6 (  TE, TI , N1);)
  intern( N2)  (primitive = _and I7 ( N0, D, N2);)
  output (Q, QN)  (primitive = _dff I0 (S_int,R_int,CLK_int,D_int,Q,QN);)
)
model FFSDNSRHD1XHT (Q, QN, D, CKN, RN, SN, TE, TI) (
  scan_definition (
    type = mux_scan;
    data_in = D;
    scan_in = TI;
    scan_enable = TE;
    scan_out = Q, QN;
    non_scan_model = FFDNSRHD1XHT (Q, QN, D, CKN, RN, SN);
  )
  input  (D, CKN, RN, SN, TE, TI)  ()
  intern(     CLK_int)  (primitive = _inv I1 (CKN,     CLK_int);)
  intern(     D_int)  (primitive = _or I2 (N1,  N2,     D_int);)
  intern(     R_int)  (primitive = _inv I3 (RN,     R_int);)
  intern(     S_int)  (primitive = _inv I4 (SN,     S_int);)
  intern( N0)  (primitive = _inv I5 (TE, N0);)
  intern( N1)  (primitive = _and I6 (  TE, TI , N1);)
  intern( N2)  (primitive = _and I7 ( N0, D, N2);)
  output (Q, QN)  (primitive = _dff I0 (S_int,R_int,CLK_int,D_int,Q,QN);)
)
model FFSDNSRHD2XHT (Q, QN, D, CKN, RN, SN, TE, TI) (
  scan_definition (
    type = mux_scan;
    data_in = D;
    scan_in = TI;
    scan_enable = TE;
    scan_out = Q, QN;
    non_scan_model = FFDNSRHD2XHT (Q, QN, D, CKN, RN, SN);
  )
  input  (D, CKN, RN, SN, TE, TI)  ()
  intern(     CLK_int)  (primitive = _inv I1 (CKN,     CLK_int);)
  intern(     D_int)  (primitive = _or I2 (N1,  N2,     D_int);)
  intern(     R_int)  (primitive = _inv I3 (RN,     R_int);)
  intern(     S_int)  (primitive = _inv I4 (SN,     S_int);)
  intern( N0)  (primitive = _inv I5 (TE, N0);)
  intern( N1)  (primitive = _and I6 (  TE, TI , N1);)
  intern( N2)  (primitive = _and I7 ( N0, D, N2);)
  output (Q, QN)  (primitive = _dff I0 (S_int,R_int,CLK_int,D_int,Q,QN);)
)
model FFSDNSRHDLXHT (Q, QN, D, CKN, RN, SN, TE, TI) (
  scan_definition (
    type = mux_scan;
    data_in = D;
    scan_in = TI;
    scan_enable = TE;
    scan_out = Q, QN;
    non_scan_model = FFDNSRHDLXHT (Q, QN, D, CKN, RN, SN);
  )
  input  (D, CKN, RN, SN, TE, TI)  ()
  intern(     CLK_int)  (primitive = _inv I1 (CKN,     CLK_int);)
  intern(     D_int)  (primitive = _or I2 (N1,  N2,     D_int);)
  intern(     R_int)  (primitive = _inv I3 (RN,     R_int);)
  intern(     S_int)  (primitive = _inv I4 (SN,     S_int);)
  intern( N0)  (primitive = _inv I5 (TE, N0);)
  intern( N1)  (primitive = _and I6 (  TE, TI , N1);)
  intern( N2)  (primitive = _and I7 ( N0, D, N2);)
  output (Q, QN)  (primitive = _dff I0 (S_int,R_int,CLK_int,D_int,Q,QN);)
)
model FFSDQHDMXHT (Q, D, CK, TE, TI) (
  scan_definition (
    type = mux_scan;
    data_in = D;
    scan_in = TI;
    scan_enable = TE;
    scan_out = Q;
    non_scan_model = FFDQHDMXHT (Q, D, CK);
  )
  input  (D, CK, TE, TI)  ()
  intern(     D_int)  (primitive = _or I1 (N1,  N2,     D_int);)
  intern( N0)  (primitive = _inv I2 (TE, N0);)
  intern( N1)  (primitive = _and I3 (  TE, TI , N1);)
  intern( N2)  (primitive = _and I4 ( N0, D, N2);)
  output (Q)  (primitive = _dff I0 (,,CK,D_int,Q,);)
)
model FFSDQHD1XHT (Q, D, CK, TE, TI) (
  scan_definition (
    type = mux_scan;
    data_in = D;
    scan_in = TI;
    scan_enable = TE;
    scan_out = Q;
    non_scan_model = FFDQHD1XHT (Q, D, CK);
  )
  input  (D, CK, TE, TI)  ()
  intern(     D_int)  (primitive = _or I1 (N1,  N2,     D_int);)
  intern( N0)  (primitive = _inv I2 (TE, N0);)
  intern( N1)  (primitive = _and I3 (  TE, TI , N1);)
  intern( N2)  (primitive = _and I4 ( N0, D, N2);)
  output (Q)  (primitive = _dff I0 (,,CK,D_int,Q,);)
)
model FFSDQHD2XHT (Q, D, CK, TE, TI) (
  scan_definition (
    type = mux_scan;
    data_in = D;
    scan_in = TI;
    scan_enable = TE;
    scan_out = Q;
    non_scan_model = FFDQHD2XHT (Q, D, CK);
  )
  input  (D, CK, TE, TI)  ()
  intern(     D_int)  (primitive = _or I1 (N1,  N2,     D_int);)
  intern( N0)  (primitive = _inv I2 (TE, N0);)
  intern( N1)  (primitive = _and I3 (  TE, TI , N1);)
  intern( N2)  (primitive = _and I4 ( N0, D, N2);)
  output (Q)  (primitive = _dff I0 (,,CK,D_int,Q,);)
)
model FFSDQHDLXHT (Q, D, CK, TE, TI) (
  scan_definition (
    type = mux_scan;
    data_in = D;
    scan_in = TI;
    scan_enable = TE;
    scan_out = Q;
    non_scan_model = FFDQHDLXHT (Q, D, CK);
  )
  input  (D, CK, TE, TI)  ()
  intern(     D_int)  (primitive = _or I1 (N1,  N2,     D_int);)
  intern( N0)  (primitive = _inv I2 (TE, N0);)
  intern( N1)  (primitive = _and I3 (  TE, TI , N1);)
  intern( N2)  (primitive = _and I4 ( N0, D, N2);)
  output (Q)  (primitive = _dff I0 (,,CK,D_int,Q,);)
)
model FFSDQRHDMXHT (Q, D, CK, RN, TE, TI) (
  scan_definition (
    type = mux_scan;
    data_in = D;
    scan_in = TI;
    scan_enable = TE;
    scan_out = Q;
    non_scan_model = FFDQRHDMXHT (Q, D, CK, RN);
  )
  input  (D, CK, RN, TE, TI)  ()
  intern(     D_int)  (primitive = _or I1 (N1,  N2,     D_int);)
  intern(     R_int)  (primitive = _inv I2 (RN,     R_int);)
  intern( N0)  (primitive = _inv I3 (TE, N0);)
  intern( N1)  (primitive = _and I4 (  TE, TI , N1);)
  intern( N2)  (primitive = _and I5 ( N0, D, N2);)
  output (Q)  (primitive = _dff I0 (,R_int,CK,D_int,Q,);)
)
model FFSDQRHD1XHT (Q, D, CK, RN, TE, TI) (
  scan_definition (
    type = mux_scan;
    data_in = D;
    scan_in = TI;
    scan_enable = TE;
    scan_out = Q;
    non_scan_model = FFDQRHD1XHT (Q, D, CK, RN);
  )
  input  (D, CK, RN, TE, TI)  ()
  intern(     D_int)  (primitive = _or I1 (N1,  N2,     D_int);)
  intern(     R_int)  (primitive = _inv I2 (RN,     R_int);)
  intern( N0)  (primitive = _inv I3 (TE, N0);)
  intern( N1)  (primitive = _and I4 (  TE, TI , N1);)
  intern( N2)  (primitive = _and I5 ( N0, D, N2);)
  output (Q)  (primitive = _dff I0 (,R_int,CK,D_int,Q,);)
)
model FFSDQRHD2XHT (Q, D, CK, RN, TE, TI) (
  scan_definition (
    type = mux_scan;
    data_in = D;
    scan_in = TI;
    scan_enable = TE;
    scan_out = Q;
    non_scan_model = FFDQRHD2XHT (Q, D, CK, RN);
  )
  input  (D, CK, RN, TE, TI)  ()
  intern(     D_int)  (primitive = _or I1 (N1,  N2,     D_int);)
  intern(     R_int)  (primitive = _inv I2 (RN,     R_int);)
  intern( N0)  (primitive = _inv I3 (TE, N0);)
  intern( N1)  (primitive = _and I4 (  TE, TI , N1);)
  intern( N2)  (primitive = _and I5 ( N0, D, N2);)
  output (Q)  (primitive = _dff I0 (,R_int,CK,D_int,Q,);)
)
model FFSDQRHDLXHT (Q, D, CK, RN, TE, TI) (
  scan_definition (
    type = mux_scan;
    data_in = D;
    scan_in = TI;
    scan_enable = TE;
    scan_out = Q;
    non_scan_model = FFDQRHDLXHT (Q, D, CK, RN);
  )
  input  (D, CK, RN, TE, TI)  ()
  intern(     D_int)  (primitive = _or I1 (N1,  N2,     D_int);)
  intern(     R_int)  (primitive = _inv I2 (RN,     R_int);)
  intern( N0)  (primitive = _inv I3 (TE, N0);)
  intern( N1)  (primitive = _and I4 (  TE, TI , N1);)
  intern( N2)  (primitive = _and I5 ( N0, D, N2);)
  output (Q)  (primitive = _dff I0 (,R_int,CK,D_int,Q,);)
)
model FFSDQSHDMXHT (Q, D, CK, SN, TE, TI) (
  scan_definition (
    type = mux_scan;
    data_in = D;
    scan_in = TI;
    scan_enable = TE;
    scan_out = Q;
    non_scan_model = FFDQSHDMXHT (Q, D, CK, SN);
  )
  input  (D, CK, SN, TE, TI)  ()
  intern(     D_int)  (primitive = _or I1 (N1,  N2,     D_int);)
  intern(     S_int)  (primitive = _inv I2 (SN,     S_int);)
  intern( N0)  (primitive = _inv I3 (TE, N0);)
  intern( N1)  (primitive = _and I4 (  TE, TI , N1);)
  intern( N2)  (primitive = _and I5 ( N0, D, N2);)
  output (Q)  (primitive = _dff I0 (S_int,,CK,D_int,Q,);)
)
model FFSDQSHD1XHT (Q, D, CK, SN, TE, TI) (
  scan_definition (
    type = mux_scan;
    data_in = D;
    scan_in = TI;
    scan_enable = TE;
    scan_out = Q;
    non_scan_model = FFDQSHD1XHT (Q, D, CK, SN);
  )
  input  (D, CK, SN, TE, TI)  ()
  intern(     D_int)  (primitive = _or I1 (N1,  N2,     D_int);)
  intern(     S_int)  (primitive = _inv I2 (SN,     S_int);)
  intern( N0)  (primitive = _inv I3 (TE, N0);)
  intern( N1)  (primitive = _and I4 (  TE, TI , N1);)
  intern( N2)  (primitive = _and I5 ( N0, D, N2);)
  output (Q)  (primitive = _dff I0 (S_int,,CK,D_int,Q,);)
)
model FFSDQSHD2XHT (Q, D, CK, SN, TE, TI) (
  scan_definition (
    type = mux_scan;
    data_in = D;
    scan_in = TI;
    scan_enable = TE;
    scan_out = Q;
    non_scan_model = FFDQSHD2XHT (Q, D, CK, SN);
  )
  input  (D, CK, SN, TE, TI)  ()
  intern(     D_int)  (primitive = _or I1 (N1,  N2,     D_int);)
  intern(     S_int)  (primitive = _inv I2 (SN,     S_int);)
  intern( N0)  (primitive = _inv I3 (TE, N0);)
  intern( N1)  (primitive = _and I4 (  TE, TI , N1);)
  intern( N2)  (primitive = _and I5 ( N0, D, N2);)
  output (Q)  (primitive = _dff I0 (S_int,,CK,D_int,Q,);)
)
model FFSDQSHDLXHT (Q, D, CK, SN, TE, TI) (
  scan_definition (
    type = mux_scan;
    data_in = D;
    scan_in = TI;
    scan_enable = TE;
    scan_out = Q;
    non_scan_model = FFDQSHDLXHT (Q, D, CK, SN);
  )
  input  (D, CK, SN, TE, TI)  ()
  intern(     D_int)  (primitive = _or I1 (N1,  N2,     D_int);)
  intern(     S_int)  (primitive = _inv I2 (SN,     S_int);)
  intern( N0)  (primitive = _inv I3 (TE, N0);)
  intern( N1)  (primitive = _and I4 (  TE, TI , N1);)
  intern( N2)  (primitive = _and I5 ( N0, D, N2);)
  output (Q)  (primitive = _dff I0 (S_int,,CK,D_int,Q,);)
)
model FFSDQSRHDMXHT (Q, D, CK, RN, SN, TE, TI) (
  scan_definition (
    type = mux_scan;
    data_in = D;
    scan_in = TI;
    scan_enable = TE;
    scan_out = Q;
    non_scan_model = FFDQSRHDMXHT (Q, D, CK, RN, SN);
  )
  input  (D, CK, RN, SN, TE, TI)  ()
  intern(     D_int)  (primitive = _or I1 (N1,  N2,     D_int);)
  intern(     R_int)  (primitive = _inv I2 (RN,     R_int);)
  intern(     S_int)  (primitive = _inv I3 (SN,     S_int);)
  intern( N0)  (primitive = _inv I4 (TE, N0);)
  intern( N1)  (primitive = _and I5 (  TE, TI , N1);)
  intern( N2)  (primitive = _and I6 ( N0, D, N2);)
  output (Q)  (primitive = _dff I0 (S_int,R_int,CK,D_int,Q,);)
)
model FFSDQSRHD1XHT (Q, D, CK, RN, SN, TE, TI) (
  scan_definition (
    type = mux_scan;
    data_in = D;
    scan_in = TI;
    scan_enable = TE;
    scan_out = Q;
    non_scan_model = FFDQSRHD1XHT (Q, D, CK, RN, SN);
  )
  input  (D, CK, RN, SN, TE, TI)  ()
  intern(     D_int)  (primitive = _or I1 (N1,  N2,     D_int);)
  intern(     R_int)  (primitive = _inv I2 (RN,     R_int);)
  intern(     S_int)  (primitive = _inv I3 (SN,     S_int);)
  intern( N0)  (primitive = _inv I4 (TE, N0);)
  intern( N1)  (primitive = _and I5 (  TE, TI , N1);)
  intern( N2)  (primitive = _and I6 ( N0, D, N2);)
  output (Q)  (primitive = _dff I0 (S_int,R_int,CK,D_int,Q,);)
)
model FFSDQSRHD2XHT (Q, D, CK, RN, SN, TE, TI) (
  scan_definition (
    type = mux_scan;
    data_in = D;
    scan_in = TI;
    scan_enable = TE;
    scan_out = Q;
    non_scan_model = FFDQSRHD2XHT (Q, D, CK, RN, SN);
  )
  input  (D, CK, RN, SN, TE, TI)  ()
  intern(     D_int)  (primitive = _or I1 (N1,  N2,     D_int);)
  intern(     R_int)  (primitive = _inv I2 (RN,     R_int);)
  intern(     S_int)  (primitive = _inv I3 (SN,     S_int);)
  intern( N0)  (primitive = _inv I4 (TE, N0);)
  intern( N1)  (primitive = _and I5 (  TE, TI , N1);)
  intern( N2)  (primitive = _and I6 ( N0, D, N2);)
  output (Q)  (primitive = _dff I0 (S_int,R_int,CK,D_int,Q,);)
)
model FFSDQSRHDLXHT (Q, D, CK, RN, SN, TE, TI) (
  scan_definition (
    type = mux_scan;
    data_in = D;
    scan_in = TI;
    scan_enable = TE;
    scan_out = Q;
    non_scan_model = FFDQSRHDLXHT (Q, D, CK, RN, SN);
  )
  input  (D, CK, RN, SN, TE, TI)  ()
  intern(     D_int)  (primitive = _or I1 (N1,  N2,     D_int);)
  intern(     R_int)  (primitive = _inv I2 (RN,     R_int);)
  intern(     S_int)  (primitive = _inv I3 (SN,     S_int);)
  intern( N0)  (primitive = _inv I4 (TE, N0);)
  intern( N1)  (primitive = _and I5 (  TE, TI , N1);)
  intern( N2)  (primitive = _and I6 ( N0, D, N2);)
  output (Q)  (primitive = _dff I0 (S_int,R_int,CK,D_int,Q,);)
)
model FFSDRHDMXHT (Q, QN, D, CK, RN, TE, TI) (
  scan_definition (
    type = mux_scan;
    data_in = D;
    scan_in = TI;
    scan_enable = TE;
    scan_out = Q, QN;
    non_scan_model = FFDRHDMXHT (Q, QN, D, CK, RN);
  )
  input  (D, CK, RN, TE, TI)  ()
  intern(     D_int)  (primitive = _or I1 (N1,  N2,     D_int);)
  intern(     R_int)  (primitive = _inv I2 (RN,     R_int);)
  intern( N0)  (primitive = _inv I3 (TE, N0);)
  intern( N1)  (primitive = _and I4 (  TE, TI , N1);)
  intern( N2)  (primitive = _and I5 ( N0, D, N2);)
  output (Q, QN)  (primitive = _dff I0 (,R_int,CK,D_int,Q,QN);)
)
model FFSDRHD1XHT (Q, QN, D, CK, RN, TE, TI) (
  scan_definition (
    type = mux_scan;
    data_in = D;
    scan_in = TI;
    scan_enable = TE;
    scan_out = Q, QN;
    non_scan_model = FFDRHD1XHT (Q, QN, D, CK, RN);
  )
  input  (D, CK, RN, TE, TI)  ()
  intern(     D_int)  (primitive = _or I1 (N1,  N2,     D_int);)
  intern(     R_int)  (primitive = _inv I2 (RN,     R_int);)
  intern( N0)  (primitive = _inv I3 (TE, N0);)
  intern( N1)  (primitive = _and I4 (  TE, TI , N1);)
  intern( N2)  (primitive = _and I5 ( N0, D, N2);)
  output (Q, QN)  (primitive = _dff I0 (,R_int,CK,D_int,Q,QN);)
)
model FFSDRHD2XHT (Q, QN, D, CK, RN, TE, TI) (
  scan_definition (
    type = mux_scan;
    data_in = D;
    scan_in = TI;
    scan_enable = TE;
    scan_out = Q, QN;
    non_scan_model = FFDRHD2XHT (Q, QN, D, CK, RN);
  )
  input  (D, CK, RN, TE, TI)  ()
  intern(     D_int)  (primitive = _or I1 (N1,  N2,     D_int);)
  intern(     R_int)  (primitive = _inv I2 (RN,     R_int);)
  intern( N0)  (primitive = _inv I3 (TE, N0);)
  intern( N1)  (primitive = _and I4 (  TE, TI , N1);)
  intern( N2)  (primitive = _and I5 ( N0, D, N2);)
  output (Q, QN)  (primitive = _dff I0 (,R_int,CK,D_int,Q,QN);)
)
model FFSDRHDLXHT (Q, QN, D, CK, RN, TE, TI) (
  scan_definition (
    type = mux_scan;
    data_in = D;
    scan_in = TI;
    scan_enable = TE;
    scan_out = Q, QN;
    non_scan_model = FFDRHDLXHT (Q, QN, D, CK, RN);
  )
  input  (D, CK, RN, TE, TI)  ()
  intern(     D_int)  (primitive = _or I1 (N1,  N2,     D_int);)
  intern(     R_int)  (primitive = _inv I2 (RN,     R_int);)
  intern( N0)  (primitive = _inv I3 (TE, N0);)
  intern( N1)  (primitive = _and I4 (  TE, TI , N1);)
  intern( N2)  (primitive = _and I5 ( N0, D, N2);)
  output (Q, QN)  (primitive = _dff I0 (,R_int,CK,D_int,Q,QN);)
)
model FFSDSHDMXHT (Q, QN, D, CK, SN, TE, TI) (
  scan_definition (
    type = mux_scan;
    data_in = D;
    scan_in = TI;
    scan_enable = TE;
    scan_out = Q, QN;
    non_scan_model = FFDSHDMXHT (Q, QN, D, CK, SN);
  )
  input  (D, CK, SN, TE, TI)  ()
  intern(     D_int)  (primitive = _or I1 (N1,  N2,     D_int);)
  intern(     S_int)  (primitive = _inv I2 (SN,     S_int);)
  intern( N0)  (primitive = _inv I3 (TE, N0);)
  intern( N1)  (primitive = _and I4 (  TE, TI , N1);)
  intern( N2)  (primitive = _and I5 ( N0, D, N2);)
  output (Q, QN)  (primitive = _dff I0 (S_int,,CK,D_int,Q,QN);)
)
model FFSDSHD1XHT (Q, QN, D, CK, SN, TE, TI) (
  scan_definition (
    type = mux_scan;
    data_in = D;
    scan_in = TI;
    scan_enable = TE;
    scan_out = Q, QN;
    non_scan_model = FFDSHD1XHT (Q, QN, D, CK, SN);
  )
  input  (D, CK, SN, TE, TI)  ()
  intern(     D_int)  (primitive = _or I1 (N1,  N2,     D_int);)
  intern(     S_int)  (primitive = _inv I2 (SN,     S_int);)
  intern( N0)  (primitive = _inv I3 (TE, N0);)
  intern( N1)  (primitive = _and I4 (  TE, TI , N1);)
  intern( N2)  (primitive = _and I5 ( N0, D, N2);)
  output (Q, QN)  (primitive = _dff I0 (S_int,,CK,D_int,Q,QN);)
)
model FFSDSHD2XHT (Q, QN, D, CK, SN, TE, TI) (
  scan_definition (
    type = mux_scan;
    data_in = D;
    scan_in = TI;
    scan_enable = TE;
    scan_out = Q, QN;
    non_scan_model = FFDSHD2XHT (Q, QN, D, CK, SN);
  )
  input  (D, CK, SN, TE, TI)  ()
  intern(     D_int)  (primitive = _or I1 (N1,  N2,     D_int);)
  intern(     S_int)  (primitive = _inv I2 (SN,     S_int);)
  intern( N0)  (primitive = _inv I3 (TE, N0);)
  intern( N1)  (primitive = _and I4 (  TE, TI , N1);)
  intern( N2)  (primitive = _and I5 ( N0, D, N2);)
  output (Q, QN)  (primitive = _dff I0 (S_int,,CK,D_int,Q,QN);)
)
model FFSDSHDLXHT (Q, QN, D, CK, SN, TE, TI) (
  scan_definition (
    type = mux_scan;
    data_in = D;
    scan_in = TI;
    scan_enable = TE;
    scan_out = Q, QN;
    non_scan_model = FFDSHDLXHT (Q, QN, D, CK, SN);
  )
  input  (D, CK, SN, TE, TI)  ()
  intern(     D_int)  (primitive = _or I1 (N1,  N2,     D_int);)
  intern(     S_int)  (primitive = _inv I2 (SN,     S_int);)
  intern( N0)  (primitive = _inv I3 (TE, N0);)
  intern( N1)  (primitive = _and I4 (  TE, TI , N1);)
  intern( N2)  (primitive = _and I5 ( N0, D, N2);)
  output (Q, QN)  (primitive = _dff I0 (S_int,,CK,D_int,Q,QN);)
)
model FFSDSRHDMXHT (Q, QN, D, CK, RN, SN, TE, TI) (
  scan_definition (
    type = mux_scan;
    data_in = D;
    scan_in = TI;
    scan_enable = TE;
    scan_out = Q, QN;
    non_scan_model = FFDSRHDMXHT (Q, QN, D, CK, RN, SN);
  )
  input  (D, CK, RN, SN, TE, TI)  ()
  intern(     D_int)  (primitive = _or I1 (N1,  N2,     D_int);)
  intern(     R_int)  (primitive = _inv I2 (RN,     R_int);)
  intern(     S_int)  (primitive = _inv I3 (SN,     S_int);)
  intern( N0)  (primitive = _inv I4 (TE, N0);)
  intern( N1)  (primitive = _and I5 (  TE, TI , N1);)
  intern( N2)  (primitive = _and I6 ( N0, D, N2);)
  output (Q, QN)  (primitive = _dff I0 (S_int,R_int,CK,D_int,Q,QN);)
)
model FFSDSRHD1XHT (Q, QN, D, CK, RN, SN, TE, TI) (
  scan_definition (
    type = mux_scan;
    data_in = D;
    scan_in = TI;
    scan_enable = TE;
    scan_out = Q, QN;
    non_scan_model = FFDSRHD1XHT (Q, QN, D, CK, RN, SN);
  )
  input  (D, CK, RN, SN, TE, TI)  ()
  intern(     D_int)  (primitive = _or I1 (N1,  N2,     D_int);)
  intern(     R_int)  (primitive = _inv I2 (RN,     R_int);)
  intern(     S_int)  (primitive = _inv I3 (SN,     S_int);)
  intern( N0)  (primitive = _inv I4 (TE, N0);)
  intern( N1)  (primitive = _and I5 (  TE, TI , N1);)
  intern( N2)  (primitive = _and I6 ( N0, D, N2);)
  output (Q, QN)  (primitive = _dff I0 (S_int,R_int,CK,D_int,Q,QN);)
)
model FFSDSRHD2XHT (Q, QN, D, CK, RN, SN, TE, TI) (
  scan_definition (
    type = mux_scan;
    data_in = D;
    scan_in = TI;
    scan_enable = TE;
    scan_out = Q, QN;
    non_scan_model = FFDSRHD2XHT (Q, QN, D, CK, RN, SN);
  )
  input  (D, CK, RN, SN, TE, TI)  ()
  intern(     D_int)  (primitive = _or I1 (N1,  N2,     D_int);)
  intern(     R_int)  (primitive = _inv I2 (RN,     R_int);)
  intern(     S_int)  (primitive = _inv I3 (SN,     S_int);)
  intern( N0)  (primitive = _inv I4 (TE, N0);)
  intern( N1)  (primitive = _and I5 (  TE, TI , N1);)
  intern( N2)  (primitive = _and I6 ( N0, D, N2);)
  output (Q, QN)  (primitive = _dff I0 (S_int,R_int,CK,D_int,Q,QN);)
)
model FFSDSRHDLXHT (Q, QN, D, CK, RN, SN, TE, TI) (
  scan_definition (
    type = mux_scan;
    data_in = D;
    scan_in = TI;
    scan_enable = TE;
    scan_out = Q, QN;
    non_scan_model = FFDSRHDLXHT (Q, QN, D, CK, RN, SN);
  )
  input  (D, CK, RN, SN, TE, TI)  ()
  intern(     D_int)  (primitive = _or I1 (N1,  N2,     D_int);)
  intern(     R_int)  (primitive = _inv I2 (RN,     R_int);)
  intern(     S_int)  (primitive = _inv I3 (SN,     S_int);)
  intern( N0)  (primitive = _inv I4 (TE, N0);)
  intern( N1)  (primitive = _and I5 (  TE, TI , N1);)
  intern( N2)  (primitive = _and I6 ( N0, D, N2);)
  output (Q, QN)  (primitive = _dff I0 (S_int,R_int,CK,D_int,Q,QN);)
)
model FFSEDCRHDMXHT (Q, QN, D, CK, E, RN, TE, TI) (
  scan_definition (
    type = mux_scan;
    data_in = D;
    scan_in = TI;
    scan_enable = TE;
    scan_out = Q, QN;
    non_scan_model = FFEDCRHDMXHT (Q, QN, D, CK, E, RN);
  )
  input  (D, CK, E, RN, TE, TI)  ()
  intern(     D_int)  (primitive = _or I1 (N2,  N3,     D_int);)
  intern( N0)  (primitive = _or I2 (N5,  N6, N0);)
  intern( N1)  (primitive = _inv I3 (TE, N1);)
  intern( N2)  (primitive = _and I4 (  TE, TI , N2);)
  intern( N3)  (primitive = _and I5 ( N1,  N0, N3);)
  intern( N4)  (primitive = _inv I6 (E, N4);)
  intern( N5)  (primitive = _and I7 (  E, D, RN , N5);)
  intern( N6)  (primitive = _and I8 ( N4, RN, Q, N6);)
  output (Q, QN)  (primitive = _dff I0 (,,CK,D_int,Q,QN);)
)
model FFSEDCRHD1XHT (Q, QN, D, CK, E, RN, TE, TI) (
  scan_definition (
    type = mux_scan;
    data_in = D;
    scan_in = TI;
    scan_enable = TE;
    scan_out = Q, QN;
    non_scan_model = FFEDCRHD1XHT (Q, QN, D, CK, E, RN);
  )
  input  (D, CK, E, RN, TE, TI)  ()
  intern(     D_int)  (primitive = _or I1 (N2,  N3,     D_int);)
  intern( N0)  (primitive = _or I2 (N5,  N6, N0);)
  intern( N1)  (primitive = _inv I3 (TE, N1);)
  intern( N2)  (primitive = _and I4 (  TE, TI , N2);)
  intern( N3)  (primitive = _and I5 ( N1,  N0, N3);)
  intern( N4)  (primitive = _inv I6 (E, N4);)
  intern( N5)  (primitive = _and I7 (  E, D, RN , N5);)
  intern( N6)  (primitive = _and I8 ( N4, RN, Q, N6);)
  output (Q, QN)  (primitive = _dff I0 (,,CK,D_int,Q,QN);)
)
model FFSEDCRHD2XHT (Q, QN, D, CK, E, RN, TE, TI) (
  scan_definition (
    type = mux_scan;
    data_in = D;
    scan_in = TI;
    scan_enable = TE;
    scan_out = Q, QN;
    non_scan_model = FFEDCRHD2XHT (Q, QN, D, CK, E, RN);
  )
  input  (D, CK, E, RN, TE, TI)  ()
  intern(     D_int)  (primitive = _or I1 (N2,  N3,     D_int);)
  intern( N0)  (primitive = _or I2 (N5,  N6, N0);)
  intern( N1)  (primitive = _inv I3 (TE, N1);)
  intern( N2)  (primitive = _and I4 (  TE, TI , N2);)
  intern( N3)  (primitive = _and I5 ( N1,  N0, N3);)
  intern( N4)  (primitive = _inv I6 (E, N4);)
  intern( N5)  (primitive = _and I7 (  E, D, RN , N5);)
  intern( N6)  (primitive = _and I8 ( N4, RN, Q, N6);)
  output (Q, QN)  (primitive = _dff I0 (,,CK,D_int,Q,QN);)
)
model FFSEDCRHDLXHT (Q, QN, D, CK, E, RN, TE, TI) (
  scan_definition (
    type = mux_scan;
    data_in = D;
    scan_in = TI;
    scan_enable = TE;
    scan_out = Q, QN;
    non_scan_model = FFEDCRHDLXHT (Q, QN, D, CK, E, RN);
  )
  input  (D, CK, E, RN, TE, TI)  ()
  intern(     D_int)  (primitive = _or I1 (N2,  N3,     D_int);)
  intern( N0)  (primitive = _or I2 (N5,  N6, N0);)
  intern( N1)  (primitive = _inv I3 (TE, N1);)
  intern( N2)  (primitive = _and I4 (  TE, TI , N2);)
  intern( N3)  (primitive = _and I5 ( N1,  N0, N3);)
  intern( N4)  (primitive = _inv I6 (E, N4);)
  intern( N5)  (primitive = _and I7 (  E, D, RN , N5);)
  intern( N6)  (primitive = _and I8 ( N4, RN, Q, N6);)
  output (Q, QN)  (primitive = _dff I0 (,,CK,D_int,Q,QN);)
)
model FFSEDHDMXHT (Q, QN, D, CK, E, TE, TI) (
  scan_definition (
    type = mux_scan;
    data_in = D;
    scan_in = TI;
    scan_enable = TE;
    scan_out = Q, QN;
    non_scan_model = FFEDHDMXHT (Q, QN, D, CK, E);
  )
  input  (D, CK, E, TE, TI)  ()
  intern(     D_int)  (primitive = _or I1 (N2,  N3,     D_int);)
  intern( N0)  (primitive = _or I2 (N5,  N6, N0);)
  intern( N1)  (primitive = _inv I3 (TE, N1);)
  intern( N2)  (primitive = _and I4 (  TE, TI , N2);)
  intern( N3)  (primitive = _and I5 ( N1, N0, N3);)
  intern( N4)  (primitive = _inv I6 (E, N4);)
  intern( N5)  (primitive = _and I7 (  E, D , N5);)
  intern( N6)  (primitive = _and I8 ( N4, Q, N6);)
  output (Q, QN)  (primitive = _dff I0 (,,CK,D_int,Q,QN);)
)
model FFSEDHD1XHT (Q, QN, D, CK, E, TE, TI) (
  scan_definition (
    type = mux_scan;
    data_in = D;
    scan_in = TI;
    scan_enable = TE;
    scan_out = Q, QN;
    non_scan_model = FFEDHD1XHT (Q, QN, D, CK, E);
  )
  input  (D, CK, E, TE, TI)  ()
  intern(     D_int)  (primitive = _or I1 (N2,  N3,     D_int);)
  intern( N0)  (primitive = _or I2 (N5,  N6, N0);)
  intern( N1)  (primitive = _inv I3 (TE, N1);)
  intern( N2)  (primitive = _and I4 (  TE, TI , N2);)
  intern( N3)  (primitive = _and I5 ( N1, N0, N3);)
  intern( N4)  (primitive = _inv I6 (E, N4);)
  intern( N5)  (primitive = _and I7 (  E, D , N5);)
  intern( N6)  (primitive = _and I8 ( N4, Q, N6);)
  output (Q, QN)  (primitive = _dff I0 (,,CK,D_int,Q,QN);)
)
model FFSEDHD2XHT (Q, QN, D, CK, E, TE, TI) (
  scan_definition (
    type = mux_scan;
    data_in = D;
    scan_in = TI;
    scan_enable = TE;
    scan_out = Q, QN;
    non_scan_model = FFEDHD2XHT (Q, QN, D, CK, E);
  )
  input  (D, CK, E, TE, TI)  ()
  intern(     D_int)  (primitive = _or I1 (N2,  N3,     D_int);)
  intern( N0)  (primitive = _or I2 (N5,  N6, N0);)
  intern( N1)  (primitive = _inv I3 (TE, N1);)
  intern( N2)  (primitive = _and I4 (  TE, TI , N2);)
  intern( N3)  (primitive = _and I5 ( N1, N0, N3);)
  intern( N4)  (primitive = _inv I6 (E, N4);)
  intern( N5)  (primitive = _and I7 (  E, D , N5);)
  intern( N6)  (primitive = _and I8 ( N4, Q, N6);)
  output (Q, QN)  (primitive = _dff I0 (,,CK,D_int,Q,QN);)
)
model FFSEDHDLXHT (Q, QN, D, CK, E, TE, TI) (
  scan_definition (
    type = mux_scan;
    data_in = D;
    scan_in = TI;
    scan_enable = TE;
    scan_out = Q, QN;
    non_scan_model = FFEDHDLXHT (Q, QN, D, CK, E);
  )
  input  (D, CK, E, TE, TI)  ()
  intern(     D_int)  (primitive = _or I1 (N2,  N3,     D_int);)
  intern( N0)  (primitive = _or I2 (N5,  N6, N0);)
  intern( N1)  (primitive = _inv I3 (TE, N1);)
  intern( N2)  (primitive = _and I4 (  TE, TI , N2);)
  intern( N3)  (primitive = _and I5 ( N1, N0, N3);)
  intern( N4)  (primitive = _inv I6 (E, N4);)
  intern( N5)  (primitive = _and I7 (  E, D , N5);)
  intern( N6)  (primitive = _and I8 ( N4, Q, N6);)
  output (Q, QN)  (primitive = _dff I0 (,,CK,D_int,Q,QN);)
)
model FFSEDQHDMXHT (Q, D, CK, E, TE, TI) (
  scan_definition (
    type = mux_scan;
    data_in = D;
    scan_in = TI;
    scan_enable = TE;
    scan_out = Q;
    non_scan_model = FFEDQHDMXHT (Q, D, CK, E);
  )
  input  (D, CK, E, TE, TI)  ()
  intern(     D_int)  (primitive = _or I1 (N2,  N3,     D_int);)
  intern( N0)  (primitive = _or I2 (N5,  N6, N0);)
  intern( N1)  (primitive = _inv I3 (TE, N1);)
  intern( N2)  (primitive = _and I4 (  TE, TI , N2);)
  intern( N3)  (primitive = _and I5 ( N1, N0, N3);)
  intern( N4)  (primitive = _inv I6 (E, N4);)
  intern( N5)  (primitive = _and I7 (  E, D , N5);)
  intern( N6)  (primitive = _and I8 ( N4, Q, N6);)
  output (Q)  (primitive = _dff I0 (,,CK,D_int,Q,);)
)
model FFSEDQHD1XHT (Q, D, CK, E, TE, TI) (
  scan_definition (
    type = mux_scan;
    data_in = D;
    scan_in = TI;
    scan_enable = TE;
    scan_out = Q;
    non_scan_model = FFEDQHD1XHT (Q, D, CK, E);
  )
  input  (D, CK, E, TE, TI)  ()
  intern(     D_int)  (primitive = _or I1 (N2,  N3,     D_int);)
  intern( N0)  (primitive = _or I2 (N5,  N6, N0);)
  intern( N1)  (primitive = _inv I3 (TE, N1);)
  intern( N2)  (primitive = _and I4 (  TE, TI , N2);)
  intern( N3)  (primitive = _and I5 ( N1, N0, N3);)
  intern( N4)  (primitive = _inv I6 (E, N4);)
  intern( N5)  (primitive = _and I7 (  E, D , N5);)
  intern( N6)  (primitive = _and I8 ( N4, Q, N6);)
  output (Q)  (primitive = _dff I0 (,,CK,D_int,Q,);)
)
model FFSEDQHD2XHT (Q, D, CK, E, TE, TI) (
  scan_definition (
    type = mux_scan;
    data_in = D;
    scan_in = TI;
    scan_enable = TE;
    scan_out = Q;
    non_scan_model = FFEDQHD2XHT (Q, D, CK, E);
  )
  input  (D, CK, E, TE, TI)  ()
  intern(     D_int)  (primitive = _or I1 (N2,  N3,     D_int);)
  intern( N0)  (primitive = _or I2 (N5,  N6, N0);)
  intern( N1)  (primitive = _inv I3 (TE, N1);)
  intern( N2)  (primitive = _and I4 (  TE, TI , N2);)
  intern( N3)  (primitive = _and I5 ( N1, N0, N3);)
  intern( N4)  (primitive = _inv I6 (E, N4);)
  intern( N5)  (primitive = _and I7 (  E, D , N5);)
  intern( N6)  (primitive = _and I8 ( N4, Q, N6);)
  output (Q)  (primitive = _dff I0 (,,CK,D_int,Q,);)
)
model FFSEDQHDLXHT (Q, D, CK, E, TE, TI) (
  scan_definition (
    type = mux_scan;
    data_in = D;
    scan_in = TI;
    scan_enable = TE;
    scan_out = Q;
    non_scan_model = FFEDQHDLXHT (Q, D, CK, E);
  )
  input  (D, CK, E, TE, TI)  ()
  intern(     D_int)  (primitive = _or I1 (N2,  N3,     D_int);)
  intern( N0)  (primitive = _or I2 (N5,  N6, N0);)
  intern( N1)  (primitive = _inv I3 (TE, N1);)
  intern( N2)  (primitive = _and I4 (  TE, TI , N2);)
  intern( N3)  (primitive = _and I5 ( N1, N0, N3);)
  intern( N4)  (primitive = _inv I6 (E, N4);)
  intern( N5)  (primitive = _and I7 (  E, D , N5);)
  intern( N6)  (primitive = _and I8 ( N4, Q, N6);)
  output (Q)  (primitive = _dff I0 (,,CK,D_int,Q,);)
)
model FFDHQHDMXHT (Q, D, CK) (
  input  (D, CK)  ()
  output (Q)  (primitive = _dff I0 (,,CK,D,Q,);)
)
model FFDHQHD1XHT (Q, D, CK) (
  input  (D, CK)  ()
  output (Q)  (primitive = _dff I0 (,,CK,D,Q,);)
)
model FFDHQHD2XHT (Q, D, CK) (
  input  (D, CK)  ()
  output (Q)  (primitive = _dff I0 (,,CK,D,Q,);)
)
model FFDHQHD3XHT (Q, D, CK) (
  input  (D, CK)  ()
  output (Q)  (primitive = _dff I0 (,,CK,D,Q,);)
)
model FFDRHQHDMXHT (Q, D, CK, RN) (
  input  (D, CK, RN)  ()
  intern(     R_int)  (primitive = _inv I1 (RN,     R_int);)
  output (Q)  (primitive = _dff I0 (,R_int,CK,D,Q,);)
)
model FFDRHQHD1XHT (Q, D, CK, RN) (
  input  (D, CK, RN)  ()
  intern(     R_int)  (primitive = _inv I1 (RN,     R_int);)
  output (Q)  (primitive = _dff I0 (,R_int,CK,D,Q,);)
)
model FFDRHQHD2XHT (Q, D, CK, RN) (
  input  (D, CK, RN)  ()
  intern(     R_int)  (primitive = _inv I1 (RN,     R_int);)
  output (Q)  (primitive = _dff I0 (,R_int,CK,D,Q,);)
)
model FFDRHQHD3XHT (Q, D, CK, RN) (
  input  (D, CK, RN)  ()
  intern(     R_int)  (primitive = _inv I1 (RN,     R_int);)
  output (Q)  (primitive = _dff I0 (,R_int,CK,D,Q,);)
)
model FFDSHQHDMXHT (Q, D, CK, SN) (
  input  (D, CK, SN)  ()
  intern(     S_int)  (primitive = _inv I1 (SN,     S_int);)
  output (Q)  (primitive = _dff I0 (S_int,,CK,D,Q,);)
)
model FFDSHQHD1XHT (Q, D, CK, SN) (
  input  (D, CK, SN)  ()
  intern(     S_int)  (primitive = _inv I1 (SN,     S_int);)
  output (Q)  (primitive = _dff I0 (S_int,,CK,D,Q,);)
)
model FFDSHQHD2XHT (Q, D, CK, SN) (
  input  (D, CK, SN)  ()
  intern(     S_int)  (primitive = _inv I1 (SN,     S_int);)
  output (Q)  (primitive = _dff I0 (S_int,,CK,D,Q,);)
)
model FFDSHQHD3XHT (Q, D, CK, SN) (
  input  (D, CK, SN)  ()
  intern(     S_int)  (primitive = _inv I1 (SN,     S_int);)
  output (Q)  (primitive = _dff I0 (S_int,,CK,D,Q,);)
)
model FFDSRHQHDMXHT (Q, D, CK, RN, SN) (
  input  (D, CK, RN, SN)  ()
  intern(     R_int)  (primitive = _inv I1 (RN,     R_int);)
  intern(     S_int)  (primitive = _inv I2 (SN,     S_int);)
  output (Q)  (primitive = _dff I0 (S_int,R_int,CK,D,Q,);)
)
model FFDSRHQHD1XHT (Q, D, CK, RN, SN) (
  input  (D, CK, RN, SN)  ()
  intern(     R_int)  (primitive = _inv I1 (RN,     R_int);)
  intern(     S_int)  (primitive = _inv I2 (SN,     S_int);)
  output (Q)  (primitive = _dff I0 (S_int,R_int,CK,D,Q,);)
)
model FFDSRHQHD2XHT (Q, D, CK, RN, SN) (
  input  (D, CK, RN, SN)  ()
  intern(     R_int)  (primitive = _inv I1 (RN,     R_int);)
  intern(     S_int)  (primitive = _inv I2 (SN,     S_int);)
  output (Q)  (primitive = _dff I0 (S_int,R_int,CK,D,Q,);)
)
model FFDSRHQHD3XHT (Q, D, CK, RN, SN) (
  input  (D, CK, RN, SN)  ()
  intern(     R_int)  (primitive = _inv I1 (RN,     R_int);)
  intern(     S_int)  (primitive = _inv I2 (SN,     S_int);)
  output (Q)  (primitive = _dff I0 (S_int,R_int,CK,D,Q,);)
)
model FFEDHQHDMXHT (Q, D, CK, E) (
  input  (D, CK, E)  ()
  intern(     D_int)  (primitive = _or I1 (N1,  N2,     D_int);)
  intern( N0)  (primitive = _inv I2 (E, N0);)
  intern( N1)  (primitive = _and I3 (  E, D , N1);)
  intern( N2)  (primitive = _and I4 ( N0, Q, N2);)
  output (Q)  (primitive = _dff I0 (,,CK,D_int,Q,);)
)
model FFEDHQHD1XHT (Q, D, CK, E) (
  input  (D, CK, E)  ()
  intern(     D_int)  (primitive = _or I1 (N1,  N2,     D_int);)
  intern( N0)  (primitive = _inv I2 (E, N0);)
  intern( N1)  (primitive = _and I3 (  E, D , N1);)
  intern( N2)  (primitive = _and I4 ( N0, Q, N2);)
  output (Q)  (primitive = _dff I0 (,,CK,D_int,Q,);)
)
model FFEDHQHD2XHT (Q, D, CK, E) (
  input  (D, CK, E)  ()
  intern(     D_int)  (primitive = _or I1 (N1,  N2,     D_int);)
  intern( N0)  (primitive = _inv I2 (E, N0);)
  intern( N1)  (primitive = _and I3 (  E, D , N1);)
  intern( N2)  (primitive = _and I4 ( N0, Q, N2);)
  output (Q)  (primitive = _dff I0 (,,CK,D_int,Q,);)
)
model FFEDHQHD3XHT (Q, D, CK, E) (
  input  (D, CK, E)  ()
  intern(     D_int)  (primitive = _or I1 (N1,  N2,     D_int);)
  intern( N0)  (primitive = _inv I2 (E, N0);)
  intern( N1)  (primitive = _and I3 (  E, D , N1);)
  intern( N2)  (primitive = _and I4 ( N0, Q, N2);)
  output (Q)  (primitive = _dff I0 (,,CK,D_int,Q,);)
)
model FFSDHQHDMXHT (Q, D, CK, TE, TI) (
  scan_definition (
    type = mux_scan;
    data_in = D;
    scan_in = TI;
    scan_enable = TE;
    scan_out = Q;
    non_scan_model = FFDHQHDMXHT (Q, D, CK);
  )
  input  (D, CK, TE, TI)  ()
  intern(     D_int)  (primitive = _or I1 (N1,  N2,     D_int);)
  intern( N0)  (primitive = _inv I2 (TE, N0);)
  intern( N1)  (primitive = _and I3 (  TE, TI , N1);)
  intern( N2)  (primitive = _and I4 ( N0, D, N2);)
  output (Q)  (primitive = _dff I0 (,,CK,D_int,Q,);)
)
model FFSDHQHD1XHT (Q, D, CK, TE, TI) (
  scan_definition (
    type = mux_scan;
    data_in = D;
    scan_in = TI;
    scan_enable = TE;
    scan_out = Q;
    non_scan_model = FFDHQHD1XHT (Q, D, CK);
  )
  input  (D, CK, TE, TI)  ()
  intern(     D_int)  (primitive = _or I1 (N1,  N2,     D_int);)
  intern( N0)  (primitive = _inv I2 (TE, N0);)
  intern( N1)  (primitive = _and I3 (  TE, TI , N1);)
  intern( N2)  (primitive = _and I4 ( N0, D, N2);)
  output (Q)  (primitive = _dff I0 (,,CK,D_int,Q,);)
)
model FFSDHQHD2XHT (Q, D, CK, TE, TI) (
  scan_definition (
    type = mux_scan;
    data_in = D;
    scan_in = TI;
    scan_enable = TE;
    scan_out = Q;
    non_scan_model = FFDHQHD2XHT (Q, D, CK);
  )
  input  (D, CK, TE, TI)  ()
  intern(     D_int)  (primitive = _or I1 (N1,  N2,     D_int);)
  intern( N0)  (primitive = _inv I2 (TE, N0);)
  intern( N1)  (primitive = _and I3 (  TE, TI , N1);)
  intern( N2)  (primitive = _and I4 ( N0, D, N2);)
  output (Q)  (primitive = _dff I0 (,,CK,D_int,Q,);)
)
model FFSDHQHD3XHT (Q, D, CK, TE, TI) (
  scan_definition (
    type = mux_scan;
    data_in = D;
    scan_in = TI;
    scan_enable = TE;
    scan_out = Q;
    non_scan_model = FFDHQHD3XHT (Q, D, CK);
  )
  input  (D, CK, TE, TI)  ()
  intern(     D_int)  (primitive = _or I1 (N1,  N2,     D_int);)
  intern( N0)  (primitive = _inv I2 (TE, N0);)
  intern( N1)  (primitive = _and I3 (  TE, TI , N1);)
  intern( N2)  (primitive = _and I4 ( N0, D, N2);)
  output (Q)  (primitive = _dff I0 (,,CK,D_int,Q,);)
)
model FFSDRHQHDMXHT (Q, D, CK, RN, TE, TI) (
  scan_definition (
    type = mux_scan;
    data_in = D;
    scan_in = TI;
    scan_enable = TE;
    scan_out = Q;
    non_scan_model = FFDRHQHDMXHT (Q, D, CK, RN);
  )
  input  (D, CK, RN, TE, TI)  ()
  intern(     D_int)  (primitive = _or I1 (N1,  N2,     D_int);)
  intern(     R_int)  (primitive = _inv I2 (RN,     R_int);)
  intern( N0)  (primitive = _inv I3 (TE, N0);)
  intern( N1)  (primitive = _and I4 (  TE, TI , N1);)
  intern( N2)  (primitive = _and I5 ( N0, D, N2);)
  output (Q)  (primitive = _dff I0 (,R_int,CK,D_int,Q,);)
)
model FFSDRHQHD1XHT (Q, D, CK, RN, TE, TI) (
  scan_definition (
    type = mux_scan;
    data_in = D;
    scan_in = TI;
    scan_enable = TE;
    scan_out = Q;
    non_scan_model = FFDRHQHD1XHT (Q, D, CK, RN);
  )
  input  (D, CK, RN, TE, TI)  ()
  intern(     D_int)  (primitive = _or I1 (N1,  N2,     D_int);)
  intern(     R_int)  (primitive = _inv I2 (RN,     R_int);)
  intern( N0)  (primitive = _inv I3 (TE, N0);)
  intern( N1)  (primitive = _and I4 (  TE, TI , N1);)
  intern( N2)  (primitive = _and I5 ( N0, D, N2);)
  output (Q)  (primitive = _dff I0 (,R_int,CK,D_int,Q,);)
)
model FFSDRHQHD2XHT (Q, D, CK, RN, TE, TI) (
  scan_definition (
    type = mux_scan;
    data_in = D;
    scan_in = TI;
    scan_enable = TE;
    scan_out = Q;
    non_scan_model = FFDRHQHD2XHT (Q, D, CK, RN);
  )
  input  (D, CK, RN, TE, TI)  ()
  intern(     D_int)  (primitive = _or I1 (N1,  N2,     D_int);)
  intern(     R_int)  (primitive = _inv I2 (RN,     R_int);)
  intern( N0)  (primitive = _inv I3 (TE, N0);)
  intern( N1)  (primitive = _and I4 (  TE, TI , N1);)
  intern( N2)  (primitive = _and I5 ( N0, D, N2);)
  output (Q)  (primitive = _dff I0 (,R_int,CK,D_int,Q,);)
)
model FFSDRHQHD3XHT (Q, D, CK, RN, TE, TI) (
  scan_definition (
    type = mux_scan;
    data_in = D;
    scan_in = TI;
    scan_enable = TE;
    scan_out = Q;
    non_scan_model = FFDRHQHD3XHT (Q, D, CK, RN);
  )
  input  (D, CK, RN, TE, TI)  ()
  intern(     D_int)  (primitive = _or I1 (N1,  N2,     D_int);)
  intern(     R_int)  (primitive = _inv I2 (RN,     R_int);)
  intern( N0)  (primitive = _inv I3 (TE, N0);)
  intern( N1)  (primitive = _and I4 (  TE, TI , N1);)
  intern( N2)  (primitive = _and I5 ( N0, D, N2);)
  output (Q)  (primitive = _dff I0 (,R_int,CK,D_int,Q,);)
)
model FFSDSHQHDMXHT (Q, D, CK, SN, TE, TI) (
  scan_definition (
    type = mux_scan;
    data_in = D;
    scan_in = TI;
    scan_enable = TE;
    scan_out = Q;
    non_scan_model = FFDSHQHDMXHT (Q, D, CK, SN);
  )
  input  (D, CK, SN, TE, TI)  ()
  intern(     D_int)  (primitive = _or I1 (N1,  N2,     D_int);)
  intern(     S_int)  (primitive = _inv I2 (SN,     S_int);)
  intern( N0)  (primitive = _inv I3 (TE, N0);)
  intern( N1)  (primitive = _and I4 (  TE, TI , N1);)
  intern( N2)  (primitive = _and I5 ( N0, D, N2);)
  output (Q)  (primitive = _dff I0 (S_int,,CK,D_int,Q,);)
)
model FFSDSHQHD1XHT (Q, D, CK, SN, TE, TI) (
  scan_definition (
    type = mux_scan;
    data_in = D;
    scan_in = TI;
    scan_enable = TE;
    scan_out = Q;
    non_scan_model = FFDSHQHD1XHT (Q, D, CK, SN);
  )
  input  (D, CK, SN, TE, TI)  ()
  intern(     D_int)  (primitive = _or I1 (N1,  N2,     D_int);)
  intern(     S_int)  (primitive = _inv I2 (SN,     S_int);)
  intern( N0)  (primitive = _inv I3 (TE, N0);)
  intern( N1)  (primitive = _and I4 (  TE, TI , N1);)
  intern( N2)  (primitive = _and I5 ( N0, D, N2);)
  output (Q)  (primitive = _dff I0 (S_int,,CK,D_int,Q,);)
)
model FFSDSHQHD2XHT (Q, D, CK, SN, TE, TI) (
  scan_definition (
    type = mux_scan;
    data_in = D;
    scan_in = TI;
    scan_enable = TE;
    scan_out = Q;
    non_scan_model = FFDSHQHD2XHT (Q, D, CK, SN);
  )
  input  (D, CK, SN, TE, TI)  ()
  intern(     D_int)  (primitive = _or I1 (N1,  N2,     D_int);)
  intern(     S_int)  (primitive = _inv I2 (SN,     S_int);)
  intern( N0)  (primitive = _inv I3 (TE, N0);)
  intern( N1)  (primitive = _and I4 (  TE, TI , N1);)
  intern( N2)  (primitive = _and I5 ( N0, D, N2);)
  output (Q)  (primitive = _dff I0 (S_int,,CK,D_int,Q,);)
)
model FFSDSHQHD3XHT (Q, D, CK, SN, TE, TI) (
  scan_definition (
    type = mux_scan;
    data_in = D;
    scan_in = TI;
    scan_enable = TE;
    scan_out = Q;
    non_scan_model = FFDSHQHD3XHT (Q, D, CK, SN);
  )
  input  (D, CK, SN, TE, TI)  ()
  intern(     D_int)  (primitive = _or I1 (N1,  N2,     D_int);)
  intern(     S_int)  (primitive = _inv I2 (SN,     S_int);)
  intern( N0)  (primitive = _inv I3 (TE, N0);)
  intern( N1)  (primitive = _and I4 (  TE, TI , N1);)
  intern( N2)  (primitive = _and I5 ( N0, D, N2);)
  output (Q)  (primitive = _dff I0 (S_int,,CK,D_int,Q,);)
)
model FFSDSRHQHDMXHT (Q, D, CK, RN, SN, TE, TI) (
  scan_definition (
    type = mux_scan;
    data_in = D;
    scan_in = TI;
    scan_enable = TE;
    scan_out = Q;
    non_scan_model = FFDSRHQHDMXHT (Q, D, CK, RN, SN);
  )
  input  (D, CK, RN, SN, TE, TI)  ()
  intern(     D_int)  (primitive = _or I1 (N1,  N2,     D_int);)
  intern(     R_int)  (primitive = _inv I2 (RN,     R_int);)
  intern(     S_int)  (primitive = _inv I3 (SN,     S_int);)
  intern( N0)  (primitive = _inv I4 (TE, N0);)
  intern( N1)  (primitive = _and I5 (  TE, TI , N1);)
  intern( N2)  (primitive = _and I6 ( N0, D, N2);)
  output (Q)  (primitive = _dff I0 (S_int,R_int,CK,D_int,Q,);)
)
model FFSDSRHQHD1XHT (Q, D, CK, RN, SN, TE, TI) (
  scan_definition (
    type = mux_scan;
    data_in = D;
    scan_in = TI;
    scan_enable = TE;
    scan_out = Q;
    non_scan_model = FFDSRHQHD1XHT (Q, D, CK, RN, SN);
  )
  input  (D, CK, RN, SN, TE, TI)  ()
  intern(     D_int)  (primitive = _or I1 (N1,  N2,     D_int);)
  intern(     R_int)  (primitive = _inv I2 (RN,     R_int);)
  intern(     S_int)  (primitive = _inv I3 (SN,     S_int);)
  intern( N0)  (primitive = _inv I4 (TE, N0);)
  intern( N1)  (primitive = _and I5 (  TE, TI , N1);)
  intern( N2)  (primitive = _and I6 ( N0, D, N2);)
  output (Q)  (primitive = _dff I0 (S_int,R_int,CK,D_int,Q,);)
)
model FFSDSRHQHD2XHT (Q, D, CK, RN, SN, TE, TI) (
  scan_definition (
    type = mux_scan;
    data_in = D;
    scan_in = TI;
    scan_enable = TE;
    scan_out = Q;
    non_scan_model = FFDSRHQHD2XHT (Q, D, CK, RN, SN);
  )
  input  (D, CK, RN, SN, TE, TI)  ()
  intern(     D_int)  (primitive = _or I1 (N1,  N2,     D_int);)
  intern(     R_int)  (primitive = _inv I2 (RN,     R_int);)
  intern(     S_int)  (primitive = _inv I3 (SN,     S_int);)
  intern( N0)  (primitive = _inv I4 (TE, N0);)
  intern( N1)  (primitive = _and I5 (  TE, TI , N1);)
  intern( N2)  (primitive = _and I6 ( N0, D, N2);)
  output (Q)  (primitive = _dff I0 (S_int,R_int,CK,D_int,Q,);)
)
model FFSDSRHQHD3XHT (Q, D, CK, RN, SN, TE, TI) (
  scan_definition (
    type = mux_scan;
    data_in = D;
    scan_in = TI;
    scan_enable = TE;
    scan_out = Q;
    non_scan_model = FFDSRHQHD3XHT (Q, D, CK, RN, SN);
  )
  input  (D, CK, RN, SN, TE, TI)  ()
  intern(     D_int)  (primitive = _or I1 (N1,  N2,     D_int);)
  intern(     R_int)  (primitive = _inv I2 (RN,     R_int);)
  intern(     S_int)  (primitive = _inv I3 (SN,     S_int);)
  intern( N0)  (primitive = _inv I4 (TE, N0);)
  intern( N1)  (primitive = _and I5 (  TE, TI , N1);)
  intern( N2)  (primitive = _and I6 ( N0, D, N2);)
  output (Q)  (primitive = _dff I0 (S_int,R_int,CK,D_int,Q,);)
)
model FFSEDHQHDMXHT (Q, D, CK, E, TE, TI) (
  scan_definition (
    type = mux_scan;
    data_in = D;
    scan_in = TI;
    scan_enable = TE;
    scan_out = Q;
    non_scan_model = FFEDHQHDMXHT (Q, D, CK, E);
  )
  input  (D, CK, E, TE, TI)  ()
  intern(     D_int)  (primitive = _or I1 (N2,  N3,     D_int);)
  intern( N0)  (primitive = _or I2 (N5,  N6, N0);)
  intern( N1)  (primitive = _inv I3 (TE, N1);)
  intern( N2)  (primitive = _and I4 (  TE, TI , N2);)
  intern( N3)  (primitive = _and I5 ( N1, N0, N3);)
  intern( N4)  (primitive = _inv I6 (E, N4);)
  intern( N5)  (primitive = _and I7 (  E, D , N5);)
  intern( N6)  (primitive = _and I8 ( N4, Q, N6);)
  output (Q)  (primitive = _dff I0 (,,CK,D_int,Q,);)
)
model FFSEDHQHD1XHT (Q, D, CK, E, TE, TI) (
  scan_definition (
    type = mux_scan;
    data_in = D;
    scan_in = TI;
    scan_enable = TE;
    scan_out = Q;
    non_scan_model = FFEDHQHD1XHT (Q, D, CK, E);
  )
  input  (D, CK, E, TE, TI)  ()
  intern(     D_int)  (primitive = _or I1 (N2,  N3,     D_int);)
  intern( N0)  (primitive = _or I2 (N5,  N6, N0);)
  intern( N1)  (primitive = _inv I3 (TE, N1);)
  intern( N2)  (primitive = _and I4 (  TE, TI , N2);)
  intern( N3)  (primitive = _and I5 ( N1, N0, N3);)
  intern( N4)  (primitive = _inv I6 (E, N4);)
  intern( N5)  (primitive = _and I7 (  E, D , N5);)
  intern( N6)  (primitive = _and I8 ( N4, Q, N6);)
  output (Q)  (primitive = _dff I0 (,,CK,D_int,Q,);)
)
model FFSEDHQHD2XHT (Q, D, CK, E, TE, TI) (
  scan_definition (
    type = mux_scan;
    data_in = D;
    scan_in = TI;
    scan_enable = TE;
    scan_out = Q;
    non_scan_model = FFEDHQHD2XHT (Q, D, CK, E);
  )
  input  (D, CK, E, TE, TI)  ()
  intern(     D_int)  (primitive = _or I1 (N2,  N3,     D_int);)
  intern( N0)  (primitive = _or I2 (N5,  N6, N0);)
  intern( N1)  (primitive = _inv I3 (TE, N1);)
  intern( N2)  (primitive = _and I4 (  TE, TI , N2);)
  intern( N3)  (primitive = _and I5 ( N1, N0, N3);)
  intern( N4)  (primitive = _inv I6 (E, N4);)
  intern( N5)  (primitive = _and I7 (  E, D , N5);)
  intern( N6)  (primitive = _and I8 ( N4, Q, N6);)
  output (Q)  (primitive = _dff I0 (,,CK,D_int,Q,);)
)
model FFSEDHQHD3XHT (Q, D, CK, E, TE, TI) (
  scan_definition (
    type = mux_scan;
    data_in = D;
    scan_in = TI;
    scan_enable = TE;
    scan_out = Q;
    non_scan_model = FFEDHQHD3XHT (Q, D, CK, E);
  )
  input  (D, CK, E, TE, TI)  ()
  intern(     D_int)  (primitive = _or I1 (N2,  N3,     D_int);)
  intern( N0)  (primitive = _or I2 (N5,  N6, N0);)
  intern( N1)  (primitive = _inv I3 (TE, N1);)
  intern( N2)  (primitive = _and I4 (  TE, TI , N2);)
  intern( N3)  (primitive = _and I5 ( N1, N0, N3);)
  intern( N4)  (primitive = _inv I6 (E, N4);)
  intern( N5)  (primitive = _and I7 (  E, D , N5);)
  intern( N6)  (primitive = _and I8 ( N4, Q, N6);)
  output (Q)  (primitive = _dff I0 (,,CK,D_int,Q,);)
)
model HAHDMXHT (CO, S, A, B)(
	input  (A) ()
	input  (B) ()
  output (CO, S) (
    primitive = _xor i0 (A, B, S);
    primitive = _and i1 (A, B, CO);
  )
)
model HAHD1XHT (CO, S, A, B)(
	input  (A) ()
	input  (B) ()
  output (CO, S) (
    primitive = _xor i0 (A, B, S);
    primitive = _and i1 (A, B, CO);
  )
)
model HAHD2XHT (CO, S, A, B)(
	input  (A) ()
	input  (B) ()
  output (CO, S) (
    primitive = _xor i0 (A, B, S);
    primitive = _and i1 (A, B, CO);
  )
)
model HAHDLXHT (CO, S, A, B)(
	input  (A) ()
	input  (B) ()
  output (CO, S) (
    primitive = _xor i0 (A, B, S);
    primitive = _and i1 (A, B, CO);
  )
)
model INVCLKHD12XHT (Z, A)(
	input  (A) ()
  output (Z) (
    primitive = _inv i0 (A, Z);
  )
)
model INVCLKHD16XHT (Z, A)(
	input  (A) ()
  output (Z) (
    primitive = _inv i0 (A, Z);
  )
)
model INVCLKHDMXHT (Z, A)(
	input  (A) ()
  output (Z) (
    primitive = _inv i0 (A, Z);
  )
)
model INVCLKHDUXHT (Z, A)(
        input  (A) ()
  output (Z) (
    primitive = _inv i0 (A, Z);
  )
)
model INVCLKHD20XHT (Z, A)(
	input  (A) ()
  output (Z) (
    primitive = _inv i0 (A, Z);
  )
)
model INVCLKHD1XHT (Z, A)(
	input  (A) ()
  output (Z) (
    primitive = _inv i0 (A, Z);
  )
)
model INVCLKHD30XHT (Z, A)(
	input  (A) ()
  output (Z) (
    primitive = _inv i0 (A, Z);
  )
)
model INVCLKHD3XHT (Z, A)(
	input  (A) ()
  output (Z) (
    primitive = _inv i0 (A, Z);
  )
)
model INVCLKHD40XHT (Z, A)(
	input  (A) ()
  output (Z) (
    primitive = _inv i0 (A, Z);
  )
)
model INVCLKHD2XHT (Z, A)(
	input  (A) ()
  output (Z) (
    primitive = _inv i0 (A, Z);
  )
)
model INVCLKHD80XHT (Z, A)(
	input  (A) ()
  output (Z) (
    primitive = _inv i0 (A, Z);
  )
)
model INVCLKHD8XHT (Z, A)(
	input  (A) ()
  output (Z) (
    primitive = _inv i0 (A, Z);
  )
)
model INVCLKHDLXHT (Z, A)(
	input  (A) ()
  output (Z) (
    primitive = _inv i0 (A, Z);
  )
)
model INVCLKHD4XHT (Z, A)(
        input  (A) ()
  output (Z) (
    primitive = _inv i0 (A, Z);
  )
)
model INVCLKHD5XHT (Z, A)(
        input  (A) ()
  output (Z) (
    primitive = _inv i0 (A, Z);
  )
)
model INVCLKHD6XHT (Z, A)(
        input  (A) ()
  output (Z) (
    primitive = _inv i0 (A, Z);
  )
)
model INVCLKHD7XHT (Z, A)(
        input  (A) ()
  output (Z) (
    primitive = _inv i0 (A, Z);
  )
)
model INVCLKHD10XHT (Z, A)(
        input  (A) ()
  output (Z) (
    primitive = _inv i0 (A, Z);
  )
)
model INVCLKHD14XHT (Z, A)(
        input  (A) ()
  output (Z) (
    primitive = _inv i0 (A, Z);
  )
)
model INVHD12XHT (Z, A)(
	input  (A) ()
  output (Z) (
    primitive = _inv i0 (A, Z);
  )
)
model INVHD16XHT (Z, A)(
	input  (A) ()
  output (Z) (
    primitive = _inv i0 (A, Z);
  )
)
model INVHDMXHT (Z, A)(
	input  (A) ()
  output (Z) (
    primitive = _inv i0 (A, Z);
  )
)
model INVHDUXHT (Z, A)(
        input  (A) ()
  output (Z) (
    primitive = _inv i0 (A, Z);
  )
)
model INVHD4XHT (Z, A)(
        input  (A) ()
  output (Z) (
    primitive = _inv i0 (A, Z);
  )
)
model INVHD5XHT (Z, A)(
        input  (A) ()
  output (Z) (
    primitive = _inv i0 (A, Z);
  )
)
model INVHD6XHT (Z, A)(
        input  (A) ()
  output (Z) (
    primitive = _inv i0 (A, Z);
  )
)
model INVHD7XHT (Z, A)(
        input  (A) ()
  output (Z) (
    primitive = _inv i0 (A, Z);
  )
)
model INVHD20XHT (Z, A)(
	input  (A) ()
  output (Z) (
    primitive = _inv i0 (A, Z);
  )
)
model INVHD1XHT (Z, A)(
	input  (A) ()
  output (Z) (
    primitive = _inv i0 (A, Z);
  )
)
model INVHD1XSPGHT (Z, A)(
	input  (A) ()
  output (Z) (
    primitive = _inv i0 (A, Z);
  )
)
model INVHD3XHT (Z, A)(
	input  (A) ()
  output (Z) (
    primitive = _inv i0 (A, Z);
  )
)
model INVHD2XHT (Z, A)(
	input  (A) ()
  output (Z) (
    primitive = _inv i0 (A, Z);
  )
)
model INVHD8XHT (Z, A)(
	input  (A) ()
  output (Z) (
    primitive = _inv i0 (A, Z);
  )
)
model INVHDLXHT (Z, A)(
	input  (A) ()
  output (Z) (
    primitive = _inv i0 (A, Z);
  )
)
model INVHDPXHT (Z, A)(
	input  (A) ()
  output (Z) (
    primitive = _inv i0 (A, Z);
  )
)
model INVTSHD12XHT (Z, A, E)(
	input  (A) ()
	input  (E) ()
  output (Z) (
    primitive = _tshi i0 (A, E, Z);
  )
)
model INVTSHD16XHT (Z, A, E)(
	input  (A) ()
	input  (E) ()
  output (Z) (
    primitive = _tshi i0 (A, E, Z);
  )
)
model INVTSHDMXHT (Z, A, E)(
	input  (A) ()
	input  (E) ()
  output (Z) (
    primitive = _tshi i0 (A, E, Z);
  )
)
model INVTSHDUXHT (Z, A, E)(
        input  (A) ()
        input  (E) ()
  output (Z) (
    primitive = _tshi i0 (A, E, Z);
  )
)
model INVTSHD20XHT (Z, A, E)(
	input  (A) ()
	input  (E) ()
  output (Z) (
    primitive = _tshi i0 (A, E, Z);
  )
)
model INVTSHD1XHT (Z, A, E)(
	input  (A) ()
	input  (E) ()
  output (Z) (
    primitive = _tshi i0 (A, E, Z);
  )
)
model INVTSHD4XHT (Z, A, E)(
        input  (A) ()
        input  (E) ()
  output (Z) (
    primitive = _tshi i0 (A, E, Z);
  )
)
model INVTSHD5XHT (Z, A, E)(
        input  (A) ()
        input  (E) ()
  output (Z) (
    primitive = _tshi i0 (A, E, Z);
  )
)
model INVTSHD6XHT (Z, A, E)(
        input  (A) ()
        input  (E) ()
  output (Z) (
    primitive = _tshi i0 (A, E, Z);
  )
)
model INVTSHD7XHT (Z, A, E)(
        input  (A) ()
        input  (E) ()
  output (Z) (
    primitive = _tshi i0 (A, E, Z);
  )
)
model INVTSHD3XHT (Z, A, E)(
	input  (A) ()
	input  (E) ()
  output (Z) (
    primitive = _tshi i0 (A, E, Z);
  )
)
model INVTSHD2XHT (Z, A, E)(
	input  (A) ()
	input  (E) ()
  output (Z) (
    primitive = _tshi i0 (A, E, Z);
  )
)
model INVTSHD8XHT (Z, A, E)(
	input  (A) ()
	input  (E) ()
  output (Z) (
    primitive = _tshi i0 (A, E, Z);
  )
)
model INVTSHDLXHT (Z, A, E)(
	input  (A) ()
	input  (E) ()
  output (Z) (
    primitive = _tshi i0 (A, E, Z);
  )
)
model LATHDMXHT (Q, QN, D, G) (
  input  (D, G)  ()
  output (Q, QN)  (primitive = _dlat I0 (,,G,D,Q,QN);)
)
model LATHD1XHT (Q, QN, D, G) (
  input  (D, G)  ()
  output (Q, QN)  (primitive = _dlat I0 (,,G,D,Q,QN);)
)
model LATHD1XSPGHT (Q, QN, D, G) (
  input  (D, G)  ()
  output (Q, QN)  (primitive = _dlat I0 (,,G,D,Q,QN);)
)
model LATHD2XHT (Q, QN, D, G) (
  input  (D, G)  ()
  output (Q, QN)  (primitive = _dlat I0 (,,G,D,Q,QN);)
)
model LATHDLXHT (Q, QN, D, G) (
  input  (D, G)  ()
  output (Q, QN)  (primitive = _dlat I0 (,,G,D,Q,QN);)
)
model LATNHDMXHT (Q, QN, D, GN) (
  input  (D, GN)  ()
  intern(     G_int)  (primitive = _inv I1 (GN,     G_int);)
  output (Q, QN)  (primitive = _dlat I0 (,,G_int,D,Q,QN);)
)
model LATNHD1XHT (Q, QN, D, GN) (
  input  (D, GN)  ()
  intern(     G_int)  (primitive = _inv I1 (GN,     G_int);)
  output (Q, QN)  (primitive = _dlat I0 (,,G_int,D,Q,QN);)
)
model LATNHD2XHT (Q, QN, D, GN) (
  input  (D, GN)  ()
  intern(     G_int)  (primitive = _inv I1 (GN,     G_int);)
  output (Q, QN)  (primitive = _dlat I0 (,,G_int,D,Q,QN);)
)
model LATNHDLXHT (Q, QN, D, GN) (
  input  (D, GN)  ()
  intern(     G_int)  (primitive = _inv I1 (GN,     G_int);)
  output (Q, QN)  (primitive = _dlat I0 (,,G_int,D,Q,QN);)
)
model LATNRHDMXHT (Q, QN, D, GN, RN) (
  input  (D, GN, RN)  ()
  intern(     G_int)  (primitive = _inv I1 (GN,     G_int);)
  intern(     R_int)  (primitive = _inv I2 (RN,     R_int);)
  output (Q, QN)  (primitive = _dlat I0 (,R_int,G_int,D,Q,QN);)
)
model LATNRHD1XHT (Q, QN, D, GN, RN) (
  input  (D, GN, RN)  ()
  intern(     G_int)  (primitive = _inv I1 (GN,     G_int);)
  intern(     R_int)  (primitive = _inv I2 (RN,     R_int);)
  output (Q, QN)  (primitive = _dlat I0 (,R_int,G_int,D,Q,QN);)
)
model LATNRHD2XHT (Q, QN, D, GN, RN) (
  input  (D, GN, RN)  ()
  intern(     G_int)  (primitive = _inv I1 (GN,     G_int);)
  intern(     R_int)  (primitive = _inv I2 (RN,     R_int);)
  output (Q, QN)  (primitive = _dlat I0 (,R_int,G_int,D,Q,QN);)
)
model LATNRHDLXHT (Q, QN, D, GN, RN) (
  input  (D, GN, RN)  ()
  intern(     G_int)  (primitive = _inv I1 (GN,     G_int);)
  intern(     R_int)  (primitive = _inv I2 (RN,     R_int);)
  output (Q, QN)  (primitive = _dlat I0 (,R_int,G_int,D,Q,QN);)
)
model LATNSHDMXHT (Q, QN, D, GN, SN) (
  input  (D, GN, SN)  ()
  intern(     G_int)  (primitive = _inv I1 (GN,     G_int);)
  intern(     S_int)  (primitive = _inv I2 (SN,     S_int);)
  output (Q, QN)  (primitive = _dlat I0 (S_int,,G_int,D,Q,QN);)
)
model LATNSHD1XHT (Q, QN, D, GN, SN) (
  input  (D, GN, SN)  ()
  intern(     G_int)  (primitive = _inv I1 (GN,     G_int);)
  intern(     S_int)  (primitive = _inv I2 (SN,     S_int);)
  output (Q, QN)  (primitive = _dlat I0 (S_int,,G_int,D,Q,QN);)
)
model LATNSHD2XHT (Q, QN, D, GN, SN) (
  input  (D, GN, SN)  ()
  intern(     G_int)  (primitive = _inv I1 (GN,     G_int);)
  intern(     S_int)  (primitive = _inv I2 (SN,     S_int);)
  output (Q, QN)  (primitive = _dlat I0 (S_int,,G_int,D,Q,QN);)
)
model LATNSHDLXHT (Q, QN, D, GN, SN) (
  input  (D, GN, SN)  ()
  intern(     G_int)  (primitive = _inv I1 (GN,     G_int);)
  intern(     S_int)  (primitive = _inv I2 (SN,     S_int);)
  output (Q, QN)  (primitive = _dlat I0 (S_int,,G_int,D,Q,QN);)
)
model LATNSRHDMXHT (Q, QN, D, GN, RN, SN) (
  input  (D, GN, RN, SN)  ()
  intern(     G_int)  (primitive = _inv I1 (GN,     G_int);)
  intern(     R_int)  (primitive = _inv I2 (RN,     R_int);)
  intern(     S_int)  (primitive = _inv I3 (SN,     S_int);)
  output (Q, QN)  (primitive = _dlat I0 (S_int,R_int,G_int,D,Q,QN);)
)
model LATNSRHD1XHT (Q, QN, D, GN, RN, SN) (
  input  (D, GN, RN, SN)  ()
  intern(     G_int)  (primitive = _inv I1 (GN,     G_int);)
  intern(     R_int)  (primitive = _inv I2 (RN,     R_int);)
  intern(     S_int)  (primitive = _inv I3 (SN,     S_int);)
  output (Q, QN)  (primitive = _dlat I0 (S_int,R_int,G_int,D,Q,QN);)
)
model LATNSRHD2XHT (Q, QN, D, GN, RN, SN) (
  input  (D, GN, RN, SN)  ()
  intern(     G_int)  (primitive = _inv I1 (GN,     G_int);)
  intern(     R_int)  (primitive = _inv I2 (RN,     R_int);)
  intern(     S_int)  (primitive = _inv I3 (SN,     S_int);)
  output (Q, QN)  (primitive = _dlat I0 (S_int,R_int,G_int,D,Q,QN);)
)
model LATNSRHDLXHT (Q, QN, D, GN, RN, SN) (
  input  (D, GN, RN, SN)  ()
  intern(     G_int)  (primitive = _inv I1 (GN,     G_int);)
  intern(     R_int)  (primitive = _inv I2 (RN,     R_int);)
  intern(     S_int)  (primitive = _inv I3 (SN,     S_int);)
  output (Q, QN)  (primitive = _dlat I0 (S_int,R_int,G_int,D,Q,QN);)
)
model LATRHDMXHT (Q, QN, D, G, RN) (
  input  (D, G, RN)  ()
  intern(     R_int)  (primitive = _inv I1 (RN,     R_int);)
  output (Q, QN)  (primitive = _dlat I0 (,R_int,G,D,Q,QN);)
)
model LATRHD1XHT (Q, QN, D, G, RN) (
  input  (D, G, RN)  ()
  intern(     R_int)  (primitive = _inv I1 (RN,     R_int);)
  output (Q, QN)  (primitive = _dlat I0 (,R_int,G,D,Q,QN);)
)
model LATRHD2XHT (Q, QN, D, G, RN) (
  input  (D, G, RN)  ()
  intern(     R_int)  (primitive = _inv I1 (RN,     R_int);)
  output (Q, QN)  (primitive = _dlat I0 (,R_int,G,D,Q,QN);)
)
model LATRHDLXHT (Q, QN, D, G, RN) (
  input  (D, G, RN)  ()
  intern(     R_int)  (primitive = _inv I1 (RN,     R_int);)
  output (Q, QN)  (primitive = _dlat I0 (,R_int,G,D,Q,QN);)
)
model LATSHDMXHT (Q, QN, D, G, SN) (
  input  (D, G, SN)  ()
  intern(     S_int)  (primitive = _inv I1 (SN,     S_int);)
  output (Q, QN)  (primitive = _dlat I0 (S_int,,G,D,Q,QN);)
)
model LATSHD1XHT (Q, QN, D, G, SN) (
  input  (D, G, SN)  ()
  intern(     S_int)  (primitive = _inv I1 (SN,     S_int);)
  output (Q, QN)  (primitive = _dlat I0 (S_int,,G,D,Q,QN);)
)
model LATSHD2XHT (Q, QN, D, G, SN) (
  input  (D, G, SN)  ()
  intern(     S_int)  (primitive = _inv I1 (SN,     S_int);)
  output (Q, QN)  (primitive = _dlat I0 (S_int,,G,D,Q,QN);)
)
model LATSHDLXHT (Q, QN, D, G, SN) (
  input  (D, G, SN)  ()
  intern(     S_int)  (primitive = _inv I1 (SN,     S_int);)
  output (Q, QN)  (primitive = _dlat I0 (S_int,,G,D,Q,QN);)
)
model LATSRHDMXHT (Q, QN, D, G, RN, SN) (
  input  (D, G, RN, SN)  ()
  intern(     R_int)  (primitive = _inv I1 (RN,     R_int);)
  intern(     S_int)  (primitive = _inv I2 (SN,     S_int);)
  output (Q, QN)  (primitive = _dlat I0 (S_int,R_int,G,D,Q,QN);)
)
model LATSRHD1XHT (Q, QN, D, G, RN, SN) (
  input  (D, G, RN, SN)  ()
  intern(     R_int)  (primitive = _inv I1 (RN,     R_int);)
  intern(     S_int)  (primitive = _inv I2 (SN,     S_int);)
  output (Q, QN)  (primitive = _dlat I0 (S_int,R_int,G,D,Q,QN);)
)
model LATSRHD2XHT (Q, QN, D, G, RN, SN) (
  input  (D, G, RN, SN)  ()
  intern(     R_int)  (primitive = _inv I1 (RN,     R_int);)
  intern(     S_int)  (primitive = _inv I2 (SN,     S_int);)
  output (Q, QN)  (primitive = _dlat I0 (S_int,R_int,G,D,Q,QN);)
)
model LATSRHDLXHT (Q, QN, D, G, RN, SN) (
  input  (D, G, RN, SN)  ()
  intern(     R_int)  (primitive = _inv I1 (RN,     R_int);)
  intern(     S_int)  (primitive = _inv I2 (SN,     S_int);)
  output (Q, QN)  (primitive = _dlat I0 (S_int,R_int,G,D,Q,QN);)
)
model MUX2HDMXHT (Z, A, B, S0)(
	input  (A) ()
	input  (B) ()
	input  (S0) ()
	output (Z) ()
  intern (_n2, _n1, _n3, _n4) (
    primitive = _inv i0 (S0, _n2);
    primitive = _and i1 (_n2, A, _n1);
    primitive = _and i2 (S0, B, _n3);
    primitive = _and i3 (A, B, _n4);
    primitive = _or i4 (_n1, _n3, _n4, Z);
  )
)
model MUX2HDUXHT (Z, A, B, S0)(
        input  (A) ()
        input  (B) ()
        input  (S0) ()
        output (Z) ()
  intern (_n2, _n1, _n3, _n4) (
    primitive = _inv i0 (S0, _n2);
    primitive = _and i1 (_n2, A, _n1);
    primitive = _and i2 (S0, B, _n3);
    primitive = _and i3 (A, B, _n4);
    primitive = _or i4 (_n1, _n3, _n4, Z);
  )
)
model MUX2HD1XHT (Z, A, B, S0)(
	input  (A) ()
	input  (B) ()
	input  (S0) ()
	output (Z) ()
  intern (_n2, _n1, _n3, _n4) (
    primitive = _inv i0 (S0, _n2);
    primitive = _and i1 (_n2, A, _n1);
    primitive = _and i2 (S0, B, _n3);
    primitive = _and i3 (A, B, _n4);
    primitive = _or i4 (_n1, _n3, _n4, Z);
  )
)
model MUX2HD1XSPGHT (Z, A, B, S0)(
	input  (A) ()
	input  (B) ()
	input  (S0) ()
	output (Z) ()
  intern (_n2, _n1, _n3, _n4) (
    primitive = _inv i0 (S0, _n2);
    primitive = _and i1 (_n2, A, _n1);
    primitive = _and i2 (S0, B, _n3);
    primitive = _and i3 (A, B, _n4);
    primitive = _or i4 (_n1, _n3, _n4, Z);
  )
)
model MUX2HD2XHT (Z, A, B, S0)(
	input  (A) ()
	input  (B) ()
	input  (S0) ()
	output (Z) ()
  intern (_n2, _n1, _n3, _n4) (
    primitive = _inv i0 (S0, _n2);
    primitive = _and i1 (_n2, A, _n1);
    primitive = _and i2 (S0, B, _n3);
    primitive = _and i3 (A, B, _n4);
    primitive = _or i4 (_n1, _n3, _n4, Z);
  )
)
model MUX2HD3XHT (Z, A, B, S0)(
        input  (A) ()
        input  (B) ()
        input  (S0) ()
        output (Z) ()
  intern (_n2, _n1, _n3, _n4) (
    primitive = _inv i0 (S0, _n2);
    primitive = _and i1 (_n2, A, _n1);
    primitive = _and i2 (S0, B, _n3);
    primitive = _and i3 (A, B, _n4);
    primitive = _or i4 (_n1, _n3, _n4, Z);
  )
)
model MUX2HDLXHT (Z, A, B, S0)(
	input  (A) ()
	input  (B) ()
	input  (S0) ()
	output (Z) ()
  intern (_n2, _n1, _n3, _n4) (
    primitive = _inv i0 (S0, _n2);
    primitive = _and i1 (_n2, A, _n1);
    primitive = _and i2 (S0, B, _n3);
    primitive = _and i3 (A, B, _n4);
    primitive = _or i4 (_n1, _n3, _n4, Z);
  )
)
model MUX2CLKHD1XHT (Z, A, B, S0)(
        input  (A) ()
        input  (B) ()
        input  (S0) ()
        output (Z) ()
  intern (_n2, _n1, _n3, _n4) (
    primitive = _inv i0 (S0, _n2);
    primitive = _and i1 (_n2, A, _n1);
    primitive = _and i2 (S0, B, _n3);
    primitive = _and i3 (A, B, _n4);
    primitive = _or i4 (_n1, _n3, _n4, Z);
  )
)
model MUX2CLKHD2XHT (Z, A, B, S0)(
        input  (A) ()
        input  (B) ()
        input  (S0) ()
        output (Z) ()
  intern (_n2, _n1, _n3, _n4) (
    primitive = _inv i0 (S0, _n2);
    primitive = _and i1 (_n2, A, _n1);
    primitive = _and i2 (S0, B, _n3);
    primitive = _and i3 (A, B, _n4);
    primitive = _or i4 (_n1, _n3, _n4, Z);
  )
)
model MUX2CLKHD3XHT (Z, A, B, S0)(
        input  (A) ()
        input  (B) ()
        input  (S0) ()
        output (Z) ()
  intern (_n2, _n1, _n3, _n4) (
    primitive = _inv i0 (S0, _n2);
    primitive = _and i1 (_n2, A, _n1);
    primitive = _and i2 (S0, B, _n3);
    primitive = _and i3 (A, B, _n4);
    primitive = _or i4 (_n1, _n3, _n4, Z);
  )
)
model MUX2CLKHD4XHT (Z, A, B, S0)(
        input  (A) ()
        input  (B) ()
        input  (S0) ()
        output (Z) ()
  intern (_n2, _n1, _n3, _n4) (
    primitive = _inv i0 (S0, _n2);
    primitive = _and i1 (_n2, A, _n1);
    primitive = _and i2 (S0, B, _n3);
    primitive = _and i3 (A, B, _n4);
    primitive = _or i4 (_n1, _n3, _n4, Z);
  )
)
model MUX4HDMXHT (Z, A, B, C, D, S0, S1)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
	input  (S0) ()
	input  (S1) ()
	output (Z) ()
  intern (_n2, _n3, _n1, _n4, _n6, _n8, _n9, _n10, _n11, _n13, _n14) (
    primitive = _inv i0 (S0, _n2);
    primitive = _inv i1 (S1, _n3);
    primitive = _and i2 (A, _n2, _n3, _n1);
    primitive = _and i4 (B, S0, _n3, _n4);
    primitive = _and i6 (C, _n2, S1, _n6);
    primitive = _and i7 (D, S0, S1, _n8);
    primitive = _and i8 (D, C, A, B, _n9);
    primitive = _and i9 (D, S1, C, _n10);
    primitive = _and i11 (B, _n3, A, _n11);
    primitive = _and i12 (D, S0, B, _n13);
    primitive = _and i14 (C, _n2, A, _n14);
    primitive = _or i15 (_n1, _n4, _n6, _n8, _n9, _n10, _n11, _n13, _n14, Z);
  )
)
model MUX4HD1XHT (Z, A, B, C, D, S0, S1)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
	input  (S0) ()
	input  (S1) ()
	output (Z) ()
  intern (_n2, _n3, _n1, _n4, _n6, _n8, _n9, _n10, _n11, _n13, _n14) (
    primitive = _inv i0 (S0, _n2);
    primitive = _inv i1 (S1, _n3);
    primitive = _and i2 (A, _n2, _n3, _n1);
    primitive = _and i4 (B, S0, _n3, _n4);
    primitive = _and i6 (C, _n2, S1, _n6);
    primitive = _and i7 (D, S0, S1, _n8);
    primitive = _and i8 (D, C, A, B, _n9);
    primitive = _and i9 (D, S1, C, _n10);
    primitive = _and i11 (B, _n3, A, _n11);
    primitive = _and i12 (D, S0, B, _n13);
    primitive = _and i14 (C, _n2, A, _n14);
    primitive = _or i15 (_n1, _n4, _n6, _n8, _n9, _n10, _n11, _n13, _n14, Z);
  )
)
model MUX4HD2XHT (Z, A, B, C, D, S0, S1)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
	input  (S0) ()
	input  (S1) ()
	output (Z) ()
  intern (_n2, _n3, _n1, _n4, _n6, _n8, _n9, _n10, _n11, _n13, _n14) (
    primitive = _inv i0 (S0, _n2);
    primitive = _inv i1 (S1, _n3);
    primitive = _and i2 (A, _n2, _n3, _n1);
    primitive = _and i4 (B, S0, _n3, _n4);
    primitive = _and i6 (C, _n2, S1, _n6);
    primitive = _and i7 (D, S0, S1, _n8);
    primitive = _and i8 (D, C, A, B, _n9);
    primitive = _and i9 (D, S1, C, _n10);
    primitive = _and i11 (B, _n3, A, _n11);
    primitive = _and i12 (D, S0, B, _n13);
    primitive = _and i14 (C, _n2, A, _n14);
    primitive = _or i15 (_n1, _n4, _n6, _n8, _n9, _n10, _n11, _n13, _n14, Z);
  )
)
model MUX4HDLXHT (Z, A, B, C, D, S0, S1)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
	input  (S0) ()
	input  (S1) ()
	output (Z) ()
  intern (_n2, _n3, _n1, _n4, _n6, _n8, _n9, _n10, _n11, _n13, _n14) (
    primitive = _inv i0 (S0, _n2);
    primitive = _inv i1 (S1, _n3);
    primitive = _and i2 (A, _n2, _n3, _n1);
    primitive = _and i4 (B, S0, _n3, _n4);
    primitive = _and i6 (C, _n2, S1, _n6);
    primitive = _and i7 (D, S0, S1, _n8);
    primitive = _and i8 (D, C, A, B, _n9);
    primitive = _and i9 (D, S1, C, _n10);
    primitive = _and i11 (B, _n3, A, _n11);
    primitive = _and i12 (D, S0, B, _n13);
    primitive = _and i14 (C, _n2, A, _n14);
    primitive = _or i15 (_n1, _n4, _n6, _n8, _n9, _n10, _n11, _n13, _n14, Z);
  )
)
model MUXI2HDMXHT (Z, A, B, S0)(
	input  (A) ()
	input  (B) ()
	input  (S0) ()
	output (Z) ()
  intern (_n2, _n3, _n1, _n5, _n4, _n6) (
    primitive = _inv i0 (S0, _n2);
    primitive = _inv i1 (A, _n3);
    primitive = _and i2 (_n2, _n3, _n1);
    primitive = _inv i3 (B, _n5);
    primitive = _and i4 (S0, _n5, _n4);
    primitive = _and i7 (_n3, _n5, _n6);
    primitive = _or i8 (_n1, _n4, _n6, Z);
  )
)
model MUXI2HD1XHT (Z, A, B, S0)(
	input  (A) ()
	input  (B) ()
	input  (S0) ()
	output (Z) ()
  intern (_n2, _n3, _n1, _n5, _n4, _n6) (
    primitive = _inv i0 (S0, _n2);
    primitive = _inv i1 (A, _n3);
    primitive = _and i2 (_n2, _n3, _n1);
    primitive = _inv i3 (B, _n5);
    primitive = _and i4 (S0, _n5, _n4);
    primitive = _and i7 (_n3, _n5, _n6);
    primitive = _or i8 (_n1, _n4, _n6, Z);
  )
)
model MUXI2HD2XHT (Z, A, B, S0)(
	input  (A) ()
	input  (B) ()
	input  (S0) ()
	output (Z) ()
  intern (_n2, _n3, _n1, _n5, _n4, _n6) (
    primitive = _inv i0 (S0, _n2);
    primitive = _inv i1 (A, _n3);
    primitive = _and i2 (_n2, _n3, _n1);
    primitive = _inv i3 (B, _n5);
    primitive = _and i4 (S0, _n5, _n4);
    primitive = _and i7 (_n3, _n5, _n6);
    primitive = _or i8 (_n1, _n4, _n6, Z);
  )
)
model MUXI2HD3XHT (Z, A, B, S0)(
        input  (A) ()
        input  (B) ()
        input  (S0) ()
        output (Z) ()
  intern (_n2, _n3, _n1, _n5, _n4, _n6) (
    primitive = _inv i0 (S0, _n2);
    primitive = _inv i1 (A, _n3);
    primitive = _and i2 (_n2, _n3, _n1);
    primitive = _inv i3 (B, _n5);
    primitive = _and i4 (S0, _n5, _n4);
    primitive = _and i7 (_n3, _n5, _n6);
    primitive = _or i8 (_n1, _n4, _n6, Z);
  )
)
model MUXI2HDLXHT (Z, A, B, S0)(
	input  (A) ()
	input  (B) ()
	input  (S0) ()
	output (Z) ()
  intern (_n2, _n3, _n1, _n5, _n4, _n6) (
    primitive = _inv i0 (S0, _n2);
    primitive = _inv i1 (A, _n3);
    primitive = _and i2 (_n2, _n3, _n1);
    primitive = _inv i3 (B, _n5);
    primitive = _and i4 (S0, _n5, _n4);
    primitive = _and i7 (_n3, _n5, _n6);
    primitive = _or i8 (_n1, _n4, _n6, Z);
  )
)
model MUXI4HDMXHT (Z, A, B, C, D, S0, S1)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
	input  (S0) ()
	input  (S1) ()
	output (Z) ()
  intern (_n2, _n3, _n4, _n1, _n6, _n5, _n9, _n8, _n12, _n11, _n13, _n18, _n21, _n25, _n28) (
    primitive = _inv i0 (A, _n2);
    primitive = _inv i1 (S0, _n3);
    primitive = _inv i2 (S1, _n4);
    primitive = _and i3 (_n2, _n3, _n4, _n1);
    primitive = _inv i4 (B, _n6);
    primitive = _and i6 (_n6, S0, _n4, _n5);
    primitive = _inv i7 (C, _n9);
    primitive = _and i9 (_n9, _n3, S1, _n8);
    primitive = _inv i10 (D, _n12);
    primitive = _and i11 (_n12, S0, S1, _n11);
    primitive = _and i16 (_n12, _n9, _n2, _n6, _n13);
    primitive = _and i19 (_n12, S1, _n9, _n18);
    primitive = _and i23 (_n6, _n4, _n2, _n21);
    primitive = _and i26 (_n12, S0, _n6, _n25);
    primitive = _and i30 (_n9, _n3, _n2, _n28);
    primitive = _or i31 (_n1, _n5, _n8, _n11, _n13, _n18, _n21, _n25, _n28, Z);
  )
)
model MUXI4HD1XHT (Z, A, B, C, D, S0, S1)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
	input  (S0) ()
	input  (S1) ()
	output (Z) ()
  intern (_n2, _n3, _n4, _n1, _n6, _n5, _n9, _n8, _n12, _n11, _n13, _n18, _n21, _n25, _n28) (
    primitive = _inv i0 (A, _n2);
    primitive = _inv i1 (S0, _n3);
    primitive = _inv i2 (S1, _n4);
    primitive = _and i3 (_n2, _n3, _n4, _n1);
    primitive = _inv i4 (B, _n6);
    primitive = _and i6 (_n6, S0, _n4, _n5);
    primitive = _inv i7 (C, _n9);
    primitive = _and i9 (_n9, _n3, S1, _n8);
    primitive = _inv i10 (D, _n12);
    primitive = _and i11 (_n12, S0, S1, _n11);
    primitive = _and i16 (_n12, _n9, _n2, _n6, _n13);
    primitive = _and i19 (_n12, S1, _n9, _n18);
    primitive = _and i23 (_n6, _n4, _n2, _n21);
    primitive = _and i26 (_n12, S0, _n6, _n25);
    primitive = _and i30 (_n9, _n3, _n2, _n28);
    primitive = _or i31 (_n1, _n5, _n8, _n11, _n13, _n18, _n21, _n25, _n28, Z);
  )
)
model MUXI4HD2XHT (Z, A, B, C, D, S0, S1)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
	input  (S0) ()
	input  (S1) ()
	output (Z) ()
  intern (_n2, _n3, _n4, _n1, _n6, _n5, _n9, _n8, _n12, _n11, _n13, _n18, _n21, _n25, _n28) (
    primitive = _inv i0 (A, _n2);
    primitive = _inv i1 (S0, _n3);
    primitive = _inv i2 (S1, _n4);
    primitive = _and i3 (_n2, _n3, _n4, _n1);
    primitive = _inv i4 (B, _n6);
    primitive = _and i6 (_n6, S0, _n4, _n5);
    primitive = _inv i7 (C, _n9);
    primitive = _and i9 (_n9, _n3, S1, _n8);
    primitive = _inv i10 (D, _n12);
    primitive = _and i11 (_n12, S0, S1, _n11);
    primitive = _and i16 (_n12, _n9, _n2, _n6, _n13);
    primitive = _and i19 (_n12, S1, _n9, _n18);
    primitive = _and i23 (_n6, _n4, _n2, _n21);
    primitive = _and i26 (_n12, S0, _n6, _n25);
    primitive = _and i30 (_n9, _n3, _n2, _n28);
    primitive = _or i31 (_n1, _n5, _n8, _n11, _n13, _n18, _n21, _n25, _n28, Z);
  )
)
model MUXI4HDLXHT (Z, A, B, C, D, S0, S1)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
	input  (S0) ()
	input  (S1) ()
	output (Z) ()
  intern (_n2, _n3, _n4, _n1, _n6, _n5, _n9, _n8, _n12, _n11, _n13, _n18, _n21, _n25, _n28) (
    primitive = _inv i0 (A, _n2);
    primitive = _inv i1 (S0, _n3);
    primitive = _inv i2 (S1, _n4);
    primitive = _and i3 (_n2, _n3, _n4, _n1);
    primitive = _inv i4 (B, _n6);
    primitive = _and i6 (_n6, S0, _n4, _n5);
    primitive = _inv i7 (C, _n9);
    primitive = _and i9 (_n9, _n3, S1, _n8);
    primitive = _inv i10 (D, _n12);
    primitive = _and i11 (_n12, S0, S1, _n11);
    primitive = _and i16 (_n12, _n9, _n2, _n6, _n13);
    primitive = _and i19 (_n12, S1, _n9, _n18);
    primitive = _and i23 (_n6, _n4, _n2, _n21);
    primitive = _and i26 (_n12, S0, _n6, _n25);
    primitive = _and i30 (_n9, _n3, _n2, _n28);
    primitive = _or i31 (_n1, _n5, _n8, _n11, _n13, _n18, _n21, _n25, _n28, Z);
  )
)
model NAND2B1HDMXHT (Z, AN, B)(
	input  (AN) ()
	input  (B) ()
	output (Z) ()
  intern (_n1) (
    primitive = _inv i0 (AN, _n1);
    primitive = _nand i1 (_n1, B, Z);
  )
)
model NAND2B1HDUXHT (Z, AN, B)(
        input  (AN) ()
        input  (B) ()
        output (Z) ()
  intern (_n1) (
    primitive = _inv i0 (AN, _n1);
    primitive = _nand i1 (_n1, B, Z);
  )
)
model NAND2B1HD1XHT (Z, AN, B)(
	input  (AN) ()
	input  (B) ()
	output (Z) ()
  intern (_n1) (
    primitive = _inv i0 (AN, _n1);
    primitive = _nand i1 (_n1, B, Z);
  )
)
model NAND2B1HD2XHT (Z, AN, B)(
	input  (AN) ()
	input  (B) ()
	output (Z) ()
  intern (_n1) (
    primitive = _inv i0 (AN, _n1);
    primitive = _nand i1 (_n1, B, Z);
  )
)
model NAND2B1HDLXHT (Z, AN, B)(
	input  (AN) ()
	input  (B) ()
	output (Z) ()
  intern (_n1) (
    primitive = _inv i0 (AN, _n1);
    primitive = _nand i1 (_n1, B, Z);
  )
)
model NAND2HDMXHT (Z, A, B)(
	input  (A) ()
	input  (B) ()
  output (Z) (
    primitive = _nand i0 (A, B, Z);
  )
)
model NAND2HDUXHT (Z, A, B)(
        input  (A) ()
        input  (B) ()
  output (Z) (
    primitive = _nand i0 (A, B, Z);
  )
)
model NAND2HD1XHT (Z, A, B)(
	input  (A) ()
	input  (B) ()
  output (Z) (
    primitive = _nand i0 (A, B, Z);
  )
)
model NAND2HD1XSPGHT (Z, A, B)(
	input  (A) ()
	input  (B) ()
  output (Z) (
    primitive = _nand i0 (A, B, Z);
  )
)
model NAND2HD2XHT (Z, A, B)(
	input  (A) ()
	input  (B) ()
  output (Z) (
    primitive = _nand i0 (A, B, Z);
  )
)
model NAND2HD3XHT (Z, A, B)(
        input  (A) ()
        input  (B) ()
  output (Z) (
    primitive = _nand i0 (A, B, Z);
  )
)
model NAND2HD2XSPGHT (Z, A, B)(
	input  (A) ()
	input  (B) ()
  output (Z) (
    primitive = _nand i0 (A, B, Z);
  )
)
model NAND2HDLXHT (Z, A, B)(
	input  (A) ()
	input  (B) ()
  output (Z) (
    primitive = _nand i0 (A, B, Z);
  )
)
model NAND3B1HDMXHT (Z, AN, B, C)(
	input  (AN) ()
	input  (B) ()
	input  (C) ()
	output (Z) ()
  intern (_n1) (
    primitive = _inv i0 (AN, _n1);
    primitive = _nand i1 (C, _n1, B, Z);
  )
)
model NAND3B1HD1XHT (Z, AN, B, C)(
	input  (AN) ()
	input  (B) ()
	input  (C) ()
	output (Z) ()
  intern (_n1) (
    primitive = _inv i0 (AN, _n1);
    primitive = _nand i1 (C, _n1, B, Z);
  )
)
model NAND3B1HD2XHT (Z, AN, B, C)(
	input  (AN) ()
	input  (B) ()
	input  (C) ()
	output (Z) ()
  intern (_n1) (
    primitive = _inv i0 (AN, _n1);
    primitive = _nand i1 (C, _n1, B, Z);
  )
)
model NAND3B1HDLXHT (Z, AN, B, C)(
	input  (AN) ()
	input  (B) ()
	input  (C) ()
	output (Z) ()
  intern (_n1) (
    primitive = _inv i0 (AN, _n1);
    primitive = _nand i1 (C, _n1, B, Z);
  )
)
model NAND3HDMXHT (Z, A, B, C)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
  output (Z) (
    primitive = _nand i0 (C, A, B, Z);
  )
)
model NAND3HD1XHT (Z, A, B, C)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
  output (Z) (
    primitive = _nand i0 (C, A, B, Z);
  )
)
model NAND3HD2XHT (Z, A, B, C)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
  output (Z) (
    primitive = _nand i0 (C, A, B, Z);
  )
)
model NAND3HD3XHT (Z, A, B, C)(
        input  (A) ()
        input  (B) ()
        input  (C) ()
  output (Z) (
    primitive = _nand i0 (C, A, B, Z);
  )
)
model NAND3HDLXHT (Z, A, B, C)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
  output (Z) (
    primitive = _nand i0 (C, A, B, Z);
  )
)
model NAND4B1HDMXHT (Z, AN, B, C, D)(
	input  (AN) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
	output (Z) ()
  intern (_n1) (
    primitive = _inv i0 (AN, _n1);
    primitive = _nand i1 (D, C, _n1, B, Z);
  )
)
model NAND4B1HD1XHT (Z, AN, B, C, D)(
	input  (AN) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
	output (Z) ()
  intern (_n1) (
    primitive = _inv i0 (AN, _n1);
    primitive = _nand i1 (D, C, _n1, B, Z);
  )
)
model NAND4B1HD2XHT (Z, AN, B, C, D)(
	input  (AN) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
	output (Z) ()
  intern (_n1) (
    primitive = _inv i0 (AN, _n1);
    primitive = _nand i1 (D, C, _n1, B, Z);
  )
)
model NAND4B1HDLXHT (Z, AN, B, C, D)(
	input  (AN) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
	output (Z) ()
  intern (_n1) (
    primitive = _inv i0 (AN, _n1);
    primitive = _nand i1 (D, C, _n1, B, Z);
  )
)
model NAND4B2HDMXHT (Z, AN, BN, C, D)(
	input  (AN) ()
	input  (BN) ()
	input  (C) ()
	input  (D) ()
	output (Z) ()
  intern (_n1, _n2) (
    primitive = _inv i0 (AN, _n1);
    primitive = _inv i1 (BN, _n2);
    primitive = _nand i2 (D, C, _n1, _n2, Z);
  )
)
model NAND4B2HD1XHT (Z, AN, BN, C, D)(
	input  (AN) ()
	input  (BN) ()
	input  (C) ()
	input  (D) ()
	output (Z) ()
  intern (_n1, _n2) (
    primitive = _inv i0 (AN, _n1);
    primitive = _inv i1 (BN, _n2);
    primitive = _nand i2 (D, C, _n1, _n2, Z);
  )
)
model NAND4B2HD2XHT (Z, AN, BN, C, D)(
	input  (AN) ()
	input  (BN) ()
	input  (C) ()
	input  (D) ()
	output (Z) ()
  intern (_n1, _n2) (
    primitive = _inv i0 (AN, _n1);
    primitive = _inv i1 (BN, _n2);
    primitive = _nand i2 (D, C, _n1, _n2, Z);
  )
)
model NAND4B2HDLXHT (Z, AN, BN, C, D)(
	input  (AN) ()
	input  (BN) ()
	input  (C) ()
	input  (D) ()
	output (Z) ()
  intern (_n1, _n2) (
    primitive = _inv i0 (AN, _n1);
    primitive = _inv i1 (BN, _n2);
    primitive = _nand i2 (D, C, _n1, _n2, Z);
  )
)
model NAND4HDMXHT (Z, A, B, C, D)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
  output (Z) (
    primitive = _nand i0 (D, C, A, B, Z);
  )
)
model NAND4HD1XHT (Z, A, B, C, D)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
  output (Z) (
    primitive = _nand i0 (D, C, A, B, Z);
  )
)
model NAND4HD2XHT (Z, A, B, C, D)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
  output (Z) (
    primitive = _nand i0 (D, C, A, B, Z);
  )
)
model NAND4HD3XHT (Z, A, B, C, D)(
        input  (A) ()
        input  (B) ()
        input  (C) ()
        input  (D) ()
  output (Z) (
    primitive = _nand i0 (D, C, A, B, Z);
  )
)
model NAND4HDLXHT (Z, A, B, C, D)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
  output (Z) (
    primitive = _nand i0 (D, C, A, B, Z);
  )
)
model NOR2B1HDMXHT (Z, AN, B)(
	input  (AN) ()
	input  (B) ()
	output (Z) ()
  intern (_n1) (
    primitive = _inv i0 (AN, _n1);
    primitive = _nor i1 (_n1, B, Z);
  )
)
model NOR2B1HDUXHT (Z, AN, B)(
        input  (AN) ()
        input  (B) ()
        output (Z) ()
  intern (_n1) (
    primitive = _inv i0 (AN, _n1);
    primitive = _nor i1 (_n1, B, Z);
  )
)
model NOR2B1HD1XHT (Z, AN, B)(
	input  (AN) ()
	input  (B) ()
	output (Z) ()
  intern (_n1) (
    primitive = _inv i0 (AN, _n1);
    primitive = _nor i1 (_n1, B, Z);
  )
)
model NOR2B1HD2XHT (Z, AN, B)(
	input  (AN) ()
	input  (B) ()
	output (Z) ()
  intern (_n1) (
    primitive = _inv i0 (AN, _n1);
    primitive = _nor i1 (_n1, B, Z);
  )
)
model NOR2B1HDLXHT (Z, AN, B)(
	input  (AN) ()
	input  (B) ()
	output (Z) ()
  intern (_n1) (
    primitive = _inv i0 (AN, _n1);
    primitive = _nor i1 (_n1, B, Z);
  )
)
model NOR2HDMXHT (Z, A, B)(
	input  (A) ()
	input  (B) ()
  output (Z) (
    primitive = _nor i0 (A, B, Z);
  )
)
model NOR2HDUXHT (Z, A, B)(
        input  (A) ()
        input  (B) ()
  output (Z) (
    primitive = _nor i0 (A, B, Z);
  )
)
model NOR2HD1XHT (Z, A, B)(
	input  (A) ()
	input  (B) ()
  output (Z) (
    primitive = _nor i0 (A, B, Z);
  )
)
model NOR2HD1XSPGHT (Z, A, B)(
	input  (A) ()
	input  (B) ()
  output (Z) (
    primitive = _nor i0 (A, B, Z);
  )
)
model NOR2HD2XHT (Z, A, B)(
	input  (A) ()
	input  (B) ()
  output (Z) (
    primitive = _nor i0 (A, B, Z);
  )
)
model NOR2HD3XHT (Z, A, B)(
        input  (A) ()
        input  (B) ()
  output (Z) (
    primitive = _nor i0 (A, B, Z);
  )
)
model NOR2HD2XSPGHT (Z, A, B)(
	input  (A) ()
	input  (B) ()
  output (Z) (
    primitive = _nor i0 (A, B, Z);
  )
)
model NOR2HDLXHT (Z, A, B)(
	input  (A) ()
	input  (B) ()
  output (Z) (
    primitive = _nor i0 (A, B, Z);
  )
)
model NOR3B1HDMXHT (Z, AN, B, C)(
	input  (AN) ()
	input  (B) ()
	input  (C) ()
	output (Z) ()
  intern (_n1) (
    primitive = _inv i0 (AN, _n1);
    primitive = _nor i1 (C, _n1, B, Z);
  )
)
model NOR3B1HD1XHT (Z, AN, B, C)(
	input  (AN) ()
	input  (B) ()
	input  (C) ()
	output (Z) ()
  intern (_n1) (
    primitive = _inv i0 (AN, _n1);
    primitive = _nor i1 (C, _n1, B, Z);
  )
)
model NOR3B1HD2XHT (Z, AN, B, C)(
	input  (AN) ()
	input  (B) ()
	input  (C) ()
	output (Z) ()
  intern (_n1) (
    primitive = _inv i0 (AN, _n1);
    primitive = _nor i1 (C, _n1, B, Z);
  )
)
model NOR3B1HDLXHT (Z, AN, B, C)(
	input  (AN) ()
	input  (B) ()
	input  (C) ()
	output (Z) ()
  intern (_n1) (
    primitive = _inv i0 (AN, _n1);
    primitive = _nor i1 (C, _n1, B, Z);
  )
)
model NOR3HDMXHT (Z, A, B, C)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
  output (Z) (
    primitive = _nor i0 (C, A, B, Z);
  )
)
model NOR3HD1XHT (Z, A, B, C)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
  output (Z) (
    primitive = _nor i0 (C, A, B, Z);
  )
)
model NOR3HD2XHT (Z, A, B, C)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
  output (Z) (
    primitive = _nor i0 (C, A, B, Z);
  )
)
model NOR3HD3XHT (Z, A, B, C)(
        input  (A) ()
        input  (B) ()
        input  (C) ()
  output (Z) (
    primitive = _nor i0 (C, A, B, Z);
  )
)
model NOR3HDLXHT (Z, A, B, C)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
  output (Z) (
    primitive = _nor i0 (C, A, B, Z);
  )
)
model NOR4B1HDMXHT (Z, AN, B, C, D)(
	input  (AN) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
	output (Z) ()
  intern (_n1) (
    primitive = _inv i0 (AN, _n1);
    primitive = _nor i1 (D, C, _n1, B, Z);
  )
)
model NOR4B1HD1XHT (Z, AN, B, C, D)(
	input  (AN) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
	output (Z) ()
  intern (_n1) (
    primitive = _inv i0 (AN, _n1);
    primitive = _nor i1 (D, C, _n1, B, Z);
  )
)
model NOR4B1HD2XHT (Z, AN, B, C, D)(
	input  (AN) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
	output (Z) ()
  intern (_n1) (
    primitive = _inv i0 (AN, _n1);
    primitive = _nor i1 (D, C, _n1, B, Z);
  )
)
model NOR4B1HDLXHT (Z, AN, B, C, D)(
	input  (AN) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
	output (Z) ()
  intern (_n1) (
    primitive = _inv i0 (AN, _n1);
    primitive = _nor i1 (D, C, _n1, B, Z);
  )
)
model NOR4B2HDMXHT (Z, AN, BN, C, D)(
	input  (AN) ()
	input  (BN) ()
	input  (C) ()
	input  (D) ()
	output (Z) ()
  intern (_n1, _n2) (
    primitive = _inv i0 (AN, _n1);
    primitive = _inv i1 (BN, _n2);
    primitive = _nor i2 (D, C, _n1, _n2, Z);
  )
)
model NOR4B2HD1XHT (Z, AN, BN, C, D)(
	input  (AN) ()
	input  (BN) ()
	input  (C) ()
	input  (D) ()
	output (Z) ()
  intern (_n1, _n2) (
    primitive = _inv i0 (AN, _n1);
    primitive = _inv i1 (BN, _n2);
    primitive = _nor i2 (D, C, _n1, _n2, Z);
  )
)
model NOR4B2HD2XHT (Z, AN, BN, C, D)(
	input  (AN) ()
	input  (BN) ()
	input  (C) ()
	input  (D) ()
	output (Z) ()
  intern (_n1, _n2) (
    primitive = _inv i0 (AN, _n1);
    primitive = _inv i1 (BN, _n2);
    primitive = _nor i2 (D, C, _n1, _n2, Z);
  )
)
model NOR4B2HDLXHT (Z, AN, BN, C, D)(
	input  (AN) ()
	input  (BN) ()
	input  (C) ()
	input  (D) ()
	output (Z) ()
  intern (_n1, _n2) (
    primitive = _inv i0 (AN, _n1);
    primitive = _inv i1 (BN, _n2);
    primitive = _nor i2 (D, C, _n1, _n2, Z);
  )
)
model NOR4HDMXHT (Z, A, B, C, D)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
  output (Z) (
    primitive = _nor i0 (D, C, A, B, Z);
  )
)
model NOR4HD1XHT (Z, A, B, C, D)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
  output (Z) (
    primitive = _nor i0 (D, C, A, B, Z);
  )
)
model NOR4HD2XHT (Z, A, B, C, D)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
  output (Z) (
    primitive = _nor i0 (D, C, A, B, Z);
  )
)
model NOR4HD3XHT (Z, A, B, C, D)(
        input  (A) ()
        input  (B) ()
        input  (C) ()
        input  (D) ()
  output (Z) (
    primitive = _nor i0 (D, C, A, B, Z);
  )
)
model NOR4HDLXHT (Z, A, B, C, D)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
  output (Z) (
    primitive = _nor i0 (D, C, A, B, Z);
  )
)
model OAI211HDMXHT (Z, A, B, C, D)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
	output (Z) ()
  intern (_n1) (
    primitive = _or i0 (A, B, _n1);
    primitive = _nand i1 (D, _n1, C, Z);
  )
)
model OAI211HD1XHT (Z, A, B, C, D)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
	output (Z) ()
  intern (_n1) (
    primitive = _or i0 (A, B, _n1);
    primitive = _nand i1 (D, _n1, C, Z);
  )
)
model OAI211HD2XHT (Z, A, B, C, D)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
	output (Z) ()
  intern (_n1) (
    primitive = _or i0 (A, B, _n1);
    primitive = _nand i1 (D, _n1, C, Z);
  )
)
model OAI211HDLXHT (Z, A, B, C, D)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
	output (Z) ()
  intern (_n1) (
    primitive = _or i0 (A, B, _n1);
    primitive = _nand i1 (D, _n1, C, Z);
  )
)
model OAI21B2HDMXHT (Z, AN, BN, C)(
	input  (AN) ()
	input  (BN) ()
	input  (C) ()
	output (Z) ()
  intern (_n2, _n3, _n1) (
    primitive = _inv i0 (AN, _n2);
    primitive = _inv i1 (BN, _n3);
    primitive = _or i2 (_n2, _n3, _n1);
    primitive = _nand i3 (_n1, C, Z);
  )
)
model OAI21B2HD1XHT (Z, AN, BN, C)(
	input  (AN) ()
	input  (BN) ()
	input  (C) ()
	output (Z) ()
  intern (_n2, _n3, _n1) (
    primitive = _inv i0 (AN, _n2);
    primitive = _inv i1 (BN, _n3);
    primitive = _or i2 (_n2, _n3, _n1);
    primitive = _nand i3 (_n1, C, Z);
  )
)
model OAI21B2HD2XHT (Z, AN, BN, C)(
	input  (AN) ()
	input  (BN) ()
	input  (C) ()
	output (Z) ()
  intern (_n2, _n3, _n1) (
    primitive = _inv i0 (AN, _n2);
    primitive = _inv i1 (BN, _n3);
    primitive = _or i2 (_n2, _n3, _n1);
    primitive = _nand i3 (_n1, C, Z);
  )
)
model OAI21B2HDLXHT (Z, AN, BN, C)(
	input  (AN) ()
	input  (BN) ()
	input  (C) ()
	output (Z) ()
  intern (_n2, _n3, _n1) (
    primitive = _inv i0 (AN, _n2);
    primitive = _inv i1 (BN, _n3);
    primitive = _or i2 (_n2, _n3, _n1);
    primitive = _nand i3 (_n1, C, Z);
  )
)
model OAI21HDMXHT (Z, A, B, C)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	output (Z) ()
  intern (_n1) (
    primitive = _or i0 (A, B, _n1);
    primitive = _nand i1 (_n1, C, Z);
  )
)
model OAI21HDUXHT (Z, A, B, C)(
        input  (A) ()
        input  (B) ()
        input  (C) ()
        output (Z) ()
  intern (_n1) (
    primitive = _or i0 (A, B, _n1);
    primitive = _nand i1 (_n1, C, Z);
  )
)
model OAI21HD1XHT (Z, A, B, C)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	output (Z) ()
  intern (_n1) (
    primitive = _or i0 (A, B, _n1);
    primitive = _nand i1 (_n1, C, Z);
  )
)
model OAI21HD2XHT (Z, A, B, C)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	output (Z) ()
  intern (_n1) (
    primitive = _or i0 (A, B, _n1);
    primitive = _nand i1 (_n1, C, Z);
  )
)
model OAI21HDLXHT (Z, A, B, C)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	output (Z) ()
  intern (_n1) (
    primitive = _or i0 (A, B, _n1);
    primitive = _nand i1 (_n1, C, Z);
  )
)
model OAI221HDMXHT (Z, A, B, C, D, E)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
	input  (E) ()
	output (Z) ()
  intern (_n1, _n2) (
    primitive = _or i0 (A, B, _n1);
    primitive = _or i1 (C, D, _n2);
    primitive = _nand i2 (E, _n1, _n2, Z);
  )
)
model OAI221HD1XHT (Z, A, B, C, D, E)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
	input  (E) ()
	output (Z) ()
  intern (_n1, _n2) (
    primitive = _or i0 (A, B, _n1);
    primitive = _or i1 (C, D, _n2);
    primitive = _nand i2 (E, _n1, _n2, Z);
  )
)
model OAI221HD2XHT (Z, A, B, C, D, E)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
	input  (E) ()
	output (Z) ()
  intern (_n1, _n2) (
    primitive = _or i0 (A, B, _n1);
    primitive = _or i1 (C, D, _n2);
    primitive = _nand i2 (E, _n1, _n2, Z);
  )
)
model OAI221HDLXHT (Z, A, B, C, D, E)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
	input  (E) ()
	output (Z) ()
  intern (_n1, _n2) (
    primitive = _or i0 (A, B, _n1);
    primitive = _or i1 (C, D, _n2);
    primitive = _nand i2 (E, _n1, _n2, Z);
  )
)
model OAI222HDMXHT (Z, A, B, C, D, E, F)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
	input  (E) ()
	input  (F) ()
	output (Z) ()
  intern (_n1, _n2, _n3) (
    primitive = _or i0 (A, B, _n1);
    primitive = _or i1 (C, D, _n2);
    primitive = _or i2 (E, F, _n3);
    primitive = _nand i3 (_n1, _n2, _n3, Z);
  )
)
model OAI222HD1XHT (Z, A, B, C, D, E, F)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
	input  (E) ()
	input  (F) ()
	output (Z) ()
  intern (_n1, _n2, _n3) (
    primitive = _or i0 (A, B, _n1);
    primitive = _or i1 (C, D, _n2);
    primitive = _or i2 (E, F, _n3);
    primitive = _nand i3 (_n1, _n2, _n3, Z);
  )
)
model OAI222HD2XHT (Z, A, B, C, D, E, F)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
	input  (E) ()
	input  (F) ()
	output (Z) ()
  intern (_n1, _n2, _n3) (
    primitive = _or i0 (A, B, _n1);
    primitive = _or i1 (C, D, _n2);
    primitive = _or i2 (E, F, _n3);
    primitive = _nand i3 (_n1, _n2, _n3, Z);
  )
)
model OAI222HDLXHT (Z, A, B, C, D, E, F)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
	input  (E) ()
	input  (F) ()
	output (Z) ()
  intern (_n1, _n2, _n3) (
    primitive = _or i0 (A, B, _n1);
    primitive = _or i1 (C, D, _n2);
    primitive = _or i2 (E, F, _n3);
    primitive = _nand i3 (_n1, _n2, _n3, Z);
  )
)
model OAI22B2HDMXHT (Z, AN, BN, C, D)(
	input  (AN) ()
	input  (BN) ()
	input  (C) ()
	input  (D) ()
	output (Z) ()
  intern (_n2, _n3, _n1, _n4) (
    primitive = _inv i0 (AN, _n2);
    primitive = _inv i1 (BN, _n3);
    primitive = _or i2 (_n2, _n3, _n1);
    primitive = _or i3 (C, D, _n4);
    primitive = _nand i4 (_n1, _n4, Z);
  )
)
model OAI22B2HD1XHT (Z, AN, BN, C, D)(
	input  (AN) ()
	input  (BN) ()
	input  (C) ()
	input  (D) ()
	output (Z) ()
  intern (_n2, _n3, _n1, _n4) (
    primitive = _inv i0 (AN, _n2);
    primitive = _inv i1 (BN, _n3);
    primitive = _or i2 (_n2, _n3, _n1);
    primitive = _or i3 (C, D, _n4);
    primitive = _nand i4 (_n1, _n4, Z);
  )
)
model OAI22B2HD2XHT (Z, AN, BN, C, D)(
	input  (AN) ()
	input  (BN) ()
	input  (C) ()
	input  (D) ()
	output (Z) ()
  intern (_n2, _n3, _n1, _n4) (
    primitive = _inv i0 (AN, _n2);
    primitive = _inv i1 (BN, _n3);
    primitive = _or i2 (_n2, _n3, _n1);
    primitive = _or i3 (C, D, _n4);
    primitive = _nand i4 (_n1, _n4, Z);
  )
)
model OAI22B2HDLXHT (Z, AN, BN, C, D)(
	input  (AN) ()
	input  (BN) ()
	input  (C) ()
	input  (D) ()
	output (Z) ()
  intern (_n2, _n3, _n1, _n4) (
    primitive = _inv i0 (AN, _n2);
    primitive = _inv i1 (BN, _n3);
    primitive = _or i2 (_n2, _n3, _n1);
    primitive = _or i3 (C, D, _n4);
    primitive = _nand i4 (_n1, _n4, Z);
  )
)
model OAI22HDMXHT (Z, A, B, C, D)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
	output (Z) ()
  intern (_n1, _n2) (
    primitive = _or i0 (A, B, _n1);
    primitive = _or i1 (C, D, _n2);
    primitive = _nand i2 (_n1, _n2, Z);
  )
)
model OAI22HDUXHT (Z, A, B, C, D)(
        input  (A) ()
        input  (B) ()
        input  (C) ()
        input  (D) ()
        output (Z) ()
  intern (_n1, _n2) (
    primitive = _or i0 (A, B, _n1);
    primitive = _or i1 (C, D, _n2);
    primitive = _nand i2 (_n1, _n2, Z);
  )
)
model OAI22HD1XHT (Z, A, B, C, D)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
	output (Z) ()
  intern (_n1, _n2) (
    primitive = _or i0 (A, B, _n1);
    primitive = _or i1 (C, D, _n2);
    primitive = _nand i2 (_n1, _n2, Z);
  )
)
model OAI22HD2XHT (Z, A, B, C, D)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
	output (Z) ()
  intern (_n1, _n2) (
    primitive = _or i0 (A, B, _n1);
    primitive = _or i1 (C, D, _n2);
    primitive = _nand i2 (_n1, _n2, Z);
  )
)
model OAI22HDLXHT (Z, A, B, C, D)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
	output (Z) ()
  intern (_n1, _n2) (
    primitive = _or i0 (A, B, _n1);
    primitive = _or i1 (C, D, _n2);
    primitive = _nand i2 (_n1, _n2, Z);
  )
)
model OAI31HDMXHT (Z, A, B, C, D)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
	output (Z) ()
  intern (_n1) (
    primitive = _or i0 (C, A, B, _n1);
    primitive = _nand i1 (_n1, D, Z);
  )
)
model OAI31HD1XHT (Z, A, B, C, D)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
	output (Z) ()
  intern (_n1) (
    primitive = _or i0 (C, A, B, _n1);
    primitive = _nand i1 (_n1, D, Z);
  )
)
model OAI31HD2XHT (Z, A, B, C, D)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
	output (Z) ()
  intern (_n1) (
    primitive = _or i0 (C, A, B, _n1);
    primitive = _nand i1 (_n1, D, Z);
  )
)
model OAI31HDLXHT (Z, A, B, C, D)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
	output (Z) ()
  intern (_n1) (
    primitive = _or i0 (C, A, B, _n1);
    primitive = _nand i1 (_n1, D, Z);
  )
)
model OAI32HDMXHT (Z, A, B, C, D, E)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
	input  (E) ()
	output (Z) ()
  intern (_n1, _n2) (
    primitive = _or i0 (C, A, B, _n1);
    primitive = _or i1 (D, E, _n2);
    primitive = _nand i2 (_n1, _n2, Z);
  )
)
model OAI32HD1XHT (Z, A, B, C, D, E)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
	input  (E) ()
	output (Z) ()
  intern (_n1, _n2) (
    primitive = _or i0 (C, A, B, _n1);
    primitive = _or i1 (D, E, _n2);
    primitive = _nand i2 (_n1, _n2, Z);
  )
)
model OAI32HD2XHT (Z, A, B, C, D, E)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
	input  (E) ()
	output (Z) ()
  intern (_n1, _n2) (
    primitive = _or i0 (C, A, B, _n1);
    primitive = _or i1 (D, E, _n2);
    primitive = _nand i2 (_n1, _n2, Z);
  )
)
model OAI32HDLXHT (Z, A, B, C, D, E)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
	input  (E) ()
	output (Z) ()
  intern (_n1, _n2) (
    primitive = _or i0 (C, A, B, _n1);
    primitive = _or i1 (D, E, _n2);
    primitive = _nand i2 (_n1, _n2, Z);
  )
)
model OAI33HDMXHT (Z, A, B, C, D, E, F)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
	input  (E) ()
	input  (F) ()
	output (Z) ()
  intern (_n1, _n2) (
    primitive = _or i0 (C, A, B, _n1);
    primitive = _or i1 (F, D, E, _n2);
    primitive = _nand i2 (_n1, _n2, Z);
  )
)
model OAI33HD1XHT (Z, A, B, C, D, E, F)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
	input  (E) ()
	input  (F) ()
	output (Z) ()
  intern (_n1, _n2) (
    primitive = _or i0 (C, A, B, _n1);
    primitive = _or i1 (F, D, E, _n2);
    primitive = _nand i2 (_n1, _n2, Z);
  )
)
model OAI33HD2XHT (Z, A, B, C, D, E, F)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
	input  (E) ()
	input  (F) ()
	output (Z) ()
  intern (_n1, _n2) (
    primitive = _or i0 (C, A, B, _n1);
    primitive = _or i1 (F, D, E, _n2);
    primitive = _nand i2 (_n1, _n2, Z);
  )
)
model OAI33HDLXHT (Z, A, B, C, D, E, F)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
	input  (E) ()
	input  (F) ()
	output (Z) ()
  intern (_n1, _n2) (
    primitive = _or i0 (C, A, B, _n1);
    primitive = _or i1 (F, D, E, _n2);
    primitive = _nand i2 (_n1, _n2, Z);
  )
)
model OR2HDMXHT (Z, A, B)(
	input  (A) ()
	input  (B) ()
  output (Z) (
    primitive = _or i0 (A, B, Z);
  )
)
model OR2HDUXHT (Z, A, B)(
        input  (A) ()
        input  (B) ()
  output (Z) (
    primitive = _or i0 (A, B, Z);
  )
)
model OR2HD1XHT (Z, A, B)(
	input  (A) ()
	input  (B) ()
  output (Z) (
    primitive = _or i0 (A, B, Z);
  )
)
model OR2HD1XSPGHT (Z, A, B)(
	input  (A) ()
	input  (B) ()
  output (Z) (
    primitive = _or i0 (A, B, Z);
  )
)
model OR2HD2XHT (Z, A, B)(
	input  (A) ()
	input  (B) ()
  output (Z) (
    primitive = _or i0 (A, B, Z);
  )
)
model OR2HD2XSPGHT (Z, A, B)(
	input  (A) ()
	input  (B) ()
  output (Z) (
    primitive = _or i0 (A, B, Z);
  )
)
model OR2HDLXHT (Z, A, B)(
	input  (A) ()
	input  (B) ()
  output (Z) (
    primitive = _or i0 (A, B, Z);
  )
)
model OR3HDMXHT (Z, A, B, C)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
  output (Z) (
    primitive = _or i0 (C, A, B, Z);
  )
)
model OR3HD1XHT (Z, A, B, C)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
  output (Z) (
    primitive = _or i0 (C, A, B, Z);
  )
)
model OR3HD2XHT (Z, A, B, C)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
  output (Z) (
    primitive = _or i0 (C, A, B, Z);
  )
)
model OR3HDLXHT (Z, A, B, C)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
  output (Z) (
    primitive = _or i0 (C, A, B, Z);
  )
)
model OR4HDMXHT (Z, A, B, C, D)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
  output (Z) (
    primitive = _or i0 (D, C, A, B, Z);
  )
)
model OR4HD1XHT (Z, A, B, C, D)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
  output (Z) (
    primitive = _or i0 (D, C, A, B, Z);
  )
)
model OR4HD2XHT (Z, A, B, C, D)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
  output (Z) (
    primitive = _or i0 (D, C, A, B, Z);
  )
)
model OR4HDLXHT (Z, A, B, C, D)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
	input  (D) ()
  output (Z) (
    primitive = _or i0 (D, C, A, B, Z);
  )
)
model XNOR2HDMXHT (Z, A, B)(
	input  (A) ()
	input  (B) ()
  output (Z) (
    primitive = _xnor i0 (A, B, Z);
  )
)
model XNOR2HD1XHT (Z, A, B)(
	input  (A) ()
	input  (B) ()
  output (Z) (
    primitive = _xnor i0 (A, B, Z);
  )
)
model XNOR2HD2XHT (Z, A, B)(
	input  (A) ()
	input  (B) ()
  output (Z) (
    primitive = _xnor i0 (A, B, Z);
  )
)
model XNOR2HD3XHT (Z, A, B)(
        input  (A) ()
        input  (B) ()
  output (Z) (
    primitive = _xnor i0 (A, B, Z);
  )
)
model XNOR2HDLXHT (Z, A, B)(
	input  (A) ()
	input  (B) ()
  output (Z) (
    primitive = _xnor i0 (A, B, Z);
  )
)
model XNOR3HD1XHT (Z, A, B, C)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
  output (Z) (
    primitive = _xnor i0 (C, A, B, Z);
  )
)
model XNOR3HD2XHT (Z, A, B, C)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
  output (Z) (
    primitive = _xnor i0 (C, A, B, Z);
  )
)
model XNOR3HD3XHT (Z, A, B, C)(
        input  (A) ()
        input  (B) ()
        input  (C) ()
  output (Z) (
    primitive = _xnor i0 (C, A, B, Z);
  )
)
model XNOR3HDLXHT (Z, A, B, C)(
        input  (A) ()
        input  (B) ()
        input  (C) ()
  output (Z) (
    primitive = _xnor i0 (C, A, B, Z);
  )
)
model XNOR3HDMXHT (Z, A, B, C)(
        input  (A) ()
        input  (B) ()
        input  (C) ()
  output (Z) (
    primitive = _xnor i0 (C, A, B, Z);
  )
)
model XOR2HDMXHT (Z, A, B)(
	input  (A) ()
	input  (B) ()
  output (Z) (
    primitive = _xor i0 (A, B, Z);
  )
)
model XOR2HD1XHT (Z, A, B)(
	input  (A) ()
	input  (B) ()
  output (Z) (
    primitive = _xor i0 (A, B, Z);
  )
)
model XOR2HD2XHT (Z, A, B)(
	input  (A) ()
	input  (B) ()
  output (Z) (
    primitive = _xor i0 (A, B, Z);
  )
)
model XOR2HD3XHT (Z, A, B)(
        input  (A) ()
        input  (B) ()
  output (Z) (
    primitive = _xor i0 (A, B, Z);
  )
)
model XOR2HDLXHT (Z, A, B)(
	input  (A) ()
	input  (B) ()
  output (Z) (
    primitive = _xor i0 (A, B, Z);
  )
)
model XOR2CLKHD1XHT (Z, A, B)(
        input  (A) ()
        input  (B) ()
  output (Z) (
    primitive = _xor i0 (A, B, Z);
  )
)
model XOR2CLKHD2XHT (Z, A, B)(
        input  (A) ()
        input  (B) ()
  output (Z) (
    primitive = _xor i0 (A, B, Z);
  )
)
model XOR2CLKHD3XHT (Z, A, B)(
        input  (A) ()
        input  (B) ()
  output (Z) (
    primitive = _xor i0 (A, B, Z);
  )
)
model XOR2CLKHD4XHT (Z, A, B)(
        input  (A) ()
        input  (B) ()
  output (Z) (
    primitive = _xor i0 (A, B, Z);
  )
)
model XOR3HD1XHT (Z, A, B, C)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
  output (Z) (
    primitive = _xor i0 (C, A, B, Z);
  )
)
model XOR3HD2XHT (Z, A, B, C)(
	input  (A) ()
	input  (B) ()
	input  (C) ()
  output (Z) (
    primitive = _xor i0 (C, A, B, Z);
  )
)
model XOR3HD3XHT (Z, A, B, C)(
        input  (A) ()
        input  (B) ()
        input  (C) ()
  output (Z) (
    primitive = _xor i0 (C, A, B, Z);
  )
)
model XOR3HDLXHT (Z, A, B, C)(
        input  (A) ()
        input  (B) ()
        input  (C) ()
  output (Z) (
    primitive = _xor i0 (C, A, B, Z);
  )
)
model XOR3HDMXHT (Z, A, B, C)(
        input  (A) ()
        input  (B) ()
        input  (C) ()
  output (Z) (
    primitive = _xor i0 (C, A, B, Z);
  )
)
